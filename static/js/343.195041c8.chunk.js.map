{"version":3,"file":"static/js/343.195041c8.chunk.js","mappings":"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","sources":["Pages/HRMembers/emptyHRMember.ts","Pages/HRMembers/RightBar.tsx","Pages/HRMembers/HRMembersTable.tsx","Pages/HRMembers/index.tsx","components/FormInput/index.tsx","mockData/hrmembers.ts"],"sourcesContent":["export const emptyHRMember = {\r\n  id: 0,\r\n  name: \"\",\r\n  surname: \"\",\r\n  tasks: [],\r\n  candidatesCreated: [],\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { emptyHRMember } from \"./emptyHRMember\";\r\nimport FormInput from \"../../components/FormInput\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\nimport { IHRMember } from \"../../mockData/interfaces/HRMember\";\r\n\r\ninterface IRightBarProps {\r\n  hrmember?: IHRMember;\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n}\r\n\r\nconst RightBar = (props: IRightBarProps) => {\r\n  const { hrmember, isOpen, setIsOpen } = props;\r\n\r\n  let form = useFormik({\r\n    initialValues: hrmember ? { ...hrmember } : { ...emptyHRMember },\r\n    onSubmit: () => {},\r\n    enableReinitialize: true,\r\n  });\r\n  return (\r\n    <Drawer anchor=\"right\" open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Box sx={{ width: 400, overflow: \"auto\" }} role=\"presentation\">\r\n        <Typography variant=\"h6\" display=\"flex\" padding={2}>\r\n          {form.values.id ? \"Edit HRMember\" : \"Add New\"}\r\n          <IconButton\r\n            sx={{ marginLeft: \"auto\", display: \"inline\" }}\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            <CloseRounded />\r\n          </IconButton>\r\n        </Typography>\r\n\r\n        <form onSubmit={form.handleSubmit}>\r\n          <List>\r\n            <ListItem>\r\n              <FormInput\r\n                label=\"id\"\r\n                type=\"number\"\r\n                value={form.values.id}\r\n                name=\"id\"\r\n                onChange={form.handleChange}\r\n                disabled\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormInput\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                value={form.values.name}\r\n                name=\"name\"\r\n                onChange={form.handleChange}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormInput\r\n                label=\"Address\"\r\n                type=\"text\"\r\n                value={form.values.surname}\r\n                name=\"address\"\r\n                onChange={form.handleChange}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </form>\r\n        <Stack padding={2}>\r\n          <Button\r\n            sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n            startIcon={<SaveRounded />}\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default RightBar;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Checkbox,\r\n  ButtonGroup,\r\n  Button,\r\n  Stack,\r\n} from \"@mui/material\";\r\n\r\nimport hrmembers from \"../../mockData/hrmembers\";\r\nimport { Add, BorderColor, DeleteForeverRounded } from \"@mui/icons-material\";\r\nimport RightBar from \"./RightBar\";\r\nimport { IHRMember } from \"../../mockData/interfaces/HRMember\";\r\n\r\nconst HRMembersTable = () => {\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowPerPage, setRowPerPage] = useState<number>(10);\r\n  const [selectedHRMembersId, setSelectedHRMembersId] = useState<number[]>([]);\r\n  const [isRightBarOpen, setIsRightBarOpen] = useState<boolean>(false);\r\n  const [rightBarHRMember, setRightBarHRMember] = useState<\r\n    IHRMember | undefined\r\n  >(undefined);\r\n\r\n  return (\r\n    <>\r\n      <RightBar\r\n        hrmember={rightBarHRMember}\r\n        isOpen={isRightBarOpen}\r\n        setIsOpen={setIsRightBarOpen}\r\n      />\r\n      <Paper\r\n        sx={{\r\n          width: \"calc(100% - 40px)\",\r\n          marginLeft: \"auto\",\r\n          overflow: \"hidden\",\r\n          boxShadow: \"none\",\r\n        }}\r\n      >\r\n        <TableContainer sx={{ maxHeight: \"500px\" }}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    value=\"all\"\r\n                    checked={hrmembers.length === selectedHRMembersId.length}\r\n                    onChange={(e) => {\r\n                      if (e.target.checked) {\r\n                        setSelectedHRMembersId(hrmembers.map((c) => c.id));\r\n                      } else setSelectedHRMembersId([]);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>id</TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Surname</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {hrmembers\r\n                .slice(currentPage * rowPerPage, (currentPage + 1) * rowPerPage)\r\n                .map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>\r\n                      <Checkbox\r\n                        value={item.id}\r\n                        checked={selectedHRMembersId.includes(item.id)}\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            const _selectedHRMembersId = [\r\n                              ...selectedHRMembersId,\r\n                            ];\r\n                            _selectedHRMembersId.push(item.id);\r\n                            setSelectedHRMembersId(_selectedHRMembersId);\r\n                          } else {\r\n                            const _selectedHRMembersId = [\r\n                              ...selectedHRMembersId,\r\n                            ];\r\n                            _selectedHRMembersId.splice(\r\n                              _selectedHRMembersId.indexOf(item.id),\r\n                              1\r\n                            );\r\n                            setSelectedHRMembersId(_selectedHRMembersId);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{item.id}</TableCell>\r\n                    <TableCell>{item.name}</TableCell>\r\n                    <TableCell>{item.surname}</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        sx={{ border: \"none !important\" }}\r\n                        color=\"warning\"\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          setRightBarHRMember(item);\r\n                          setIsRightBarOpen(true);\r\n                        }}\r\n                      >\r\n                        <BorderColor />\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={hrmembers.length}\r\n          rowsPerPage={rowPerPage}\r\n          page={currentPage}\r\n          onPageChange={(e: unknown, newPage: number) => {\r\n            setCurrentPage(newPage);\r\n          }}\r\n          onRowsPerPageChange={(e) => {\r\n            setRowPerPage(+e.target.value);\r\n            setCurrentPage(0);\r\n          }}\r\n        />\r\n        <Stack padding={\"1rem\"}>\r\n          <ButtonGroup\r\n            sx={{ marginLeft: \"auto\" }}\r\n            aria-label=\"medium button group contained\"\r\n            variant=\"contained\"\r\n          >\r\n            <Button\r\n              sx={{ border: \"none !important\" }}\r\n              startIcon={<Add />}\r\n              color=\"success\"\r\n              onClick={() => {\r\n                setRightBarHRMember(undefined);\r\n                setIsRightBarOpen(true);\r\n              }}\r\n            >\r\n              Add New\r\n            </Button>\r\n            <Button\r\n              sx={{ border: \"none !important\" }}\r\n              startIcon={<DeleteForeverRounded />}\r\n              color=\"error\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Stack>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default HRMembersTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { pageRedux } from \"../../redux\";\r\nimport HRMembersTable from \"./HRMembersTable\";\r\n\r\nconst HRMembers = () => {\r\n  useEffect(() => {\r\n    pageRedux.dispatch({\r\n      type: \"CHANGE_TITLE\",\r\n      payload: {\r\n        headerTitle: \"HR Members\",\r\n        pageTitle: \"HR Members || CRM\",\r\n      },\r\n    });\r\n  });\r\n  return <HRMembersTable />;\r\n};\r\n\r\nexport default HRMembers;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\" }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { IHRMember } from \"./interfaces/HRMember\";\r\n\r\nconst hrmembers: IHRMember[] = [\r\n  { id: 1, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 2, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 3, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 4, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 5, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 6, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 7, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 8, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 9, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 10, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 11, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 12, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 13, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 14, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 15, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 16, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 17, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 18, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 19, name: \"Example\", surname: \"Candidate\" },\r\n];\r\n\r\nexport default hrmembers;\r\n"],"names":["emptyHRMember","id","name","surname","tasks","candidatesCreated","props","hrmember","isOpen","setIsOpen","form","useFormik","initialValues","onSubmit","enableReinitialize","Drawer","anchor","open","onClose","Box","sx","width","overflow","role","Typography","variant","display","padding","values","IconButton","marginLeft","onClick","CloseRounded","handleSubmit","List","ListItem","FormInput","label","type","value","onChange","handleChange","disabled","Stack","Button","border","startIcon","SaveRounded","color","useState","currentPage","setCurrentPage","rowPerPage","setRowPerPage","selectedHRMembersId","setSelectedHRMembersId","isRightBarOpen","setIsRightBarOpen","undefined","rightBarHRMember","setRightBarHRMember","Paper","boxShadow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","checked","hrmembers","length","e","target","c","TableBody","map","item","index","includes","_selectedHRMembersId","push","splice","indexOf","BorderColor","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","ButtonGroup","Add","DeleteForeverRounded","useEffect","pageRedux","payload","headerTitle","pageTitle","error","Boolean","htmlFor"],"sourceRoot":""}