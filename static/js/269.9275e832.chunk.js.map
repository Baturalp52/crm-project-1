{"version":3,"file":"static/js/269.9275e832.chunk.js","mappings":"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","sources":["Pages/HRMembers/emptyHRMember.ts","Pages/HRMembers/HRMemberModal.tsx","Pages/HRMembers/HRMembersTable.tsx","Pages/HRMembers/index.tsx","components/SuccessSnackbar/index.tsx","components/ActionModal/index.tsx","hooks/useSuccessSnackbar/index.tsx","components/CRUDTable/DeleteModal/index.tsx","components/SearchInput/index.tsx","components/CRUDTable/AdvancedSearchModal/SearchDistance.tsx","components/CRUDTable/AdvancedSearchModal/index.tsx","components/CRUDTable/SearchBar/index.tsx","components/CRUDTable/index.tsx","components/FormDropdown/index.tsx","components/FormInput/index.tsx","helpers/resolve.ts","mockData/companies.ts","mockData/hrmembers.ts"],"sourcesContent":["export const emptyHRMember = {\r\n  id: 0,\r\n  name: \"\",\r\n  surname: \"\",\r\n  tasks: [],\r\n  candidatesCreated: [],\r\n};\r\n","import React from \"react\";\r\nimport { List, ListItem } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { emptyHRMember } from \"./emptyHRMember\";\r\nimport FormInput from \"../../components/FormInput\";\r\n\r\nimport { IHRMember } from \"../../interfaces/HRMember\";\r\nimport ActionModal from \"../../components/ActionModal\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IHRMemberModalProps {\r\n  hrmember?: IHRMember;\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n}\r\n\r\nconst HRMemberModal = (props: IHRMemberModalProps) => {\r\n  const { hrmember, isOpen, setIsOpen } = props;\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"hrMembers.modal\" });\r\n\r\n  let form = useFormik({\r\n    initialValues: hrmember ? { ...hrmember } : { ...emptyHRMember },\r\n    onSubmit: () => {},\r\n    enableReinitialize: true,\r\n  });\r\n  return (\r\n    <ActionModal\r\n      title={form.values.id ? t(\"edit\") : t(\"add\")}\r\n      isOpen={isOpen}\r\n      setIsOpen={setIsOpen}\r\n      saveFunction={() => {}}\r\n    >\r\n      <List>\r\n        <ListItem>\r\n          <FormInput\r\n            label={t(\"form.id\")}\r\n            type=\"number\"\r\n            value={form.values.id}\r\n            name=\"id\"\r\n            onChange={form.handleChange}\r\n            disabled\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <FormInput\r\n            label={t(\"form.name\")}\r\n            type=\"text\"\r\n            value={form.values.name}\r\n            name=\"name\"\r\n            onChange={form.handleChange}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <FormInput\r\n            label={t(\"form.address\")}\r\n            type=\"text\"\r\n            value={form.values.surname}\r\n            name=\"address\"\r\n            onChange={form.handleChange}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </ActionModal>\r\n  );\r\n};\r\n\r\nexport default HRMemberModal;\r\n","import React, { useState } from \"react\";\r\n\r\nimport hrmembers from \"../../mockData/hrmembers\";\r\nimport HRMemberModal from \"./HRMemberModal\";\r\nimport { IHRMember } from \"../../interfaces/HRMember\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CRUDTable from \"../../components/CRUDTable\";\r\n\r\nconst HRMembersTable = () => {\r\n  const [isHRMemberModalOpen, setIsHRMemberModalOpen] =\r\n    useState<boolean>(false);\r\n  const [hrMemberModalrHRMember, setHRMemberModalHRMember] = useState<\r\n    IHRMember | undefined\r\n  >(undefined);\r\n\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"hrMembers.table\" });\r\n\r\n  return (\r\n    <>\r\n      <HRMemberModal\r\n        hrmember={hrMemberModalrHRMember}\r\n        isOpen={isHRMemberModalOpen}\r\n        setIsOpen={setIsHRMemberModalOpen}\r\n      />\r\n      <CRUDTable<IHRMember>\r\n        data={hrmembers}\r\n        cellNames={[t(\"id\"), t(\"name\"), t(\"surname\")]}\r\n        keysToShow={[\"id\", \"name\", \"surname\"]}\r\n        setModalData={setHRMemberModalHRMember}\r\n        setIsDataModalOpen={setIsHRMemberModalOpen}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default HRMembersTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { pageRedux } from \"../../redux\";\r\nimport HRMembersTable from \"./HRMembersTable\";\r\n\r\nconst HRMembers = () => {\r\n  useEffect(() => {\r\n    pageRedux.dispatch({\r\n      type: \"CHANGE_TITLE\",\r\n      payload: {\r\n        title: \"hrMembers\",\r\n      },\r\n    });\r\n  });\r\n  return <HRMembersTable />;\r\n};\r\n\r\nexport default HRMembers;\r\n","import { Alert, Snackbar } from \"@mui/material\";\r\n\r\ninterface ISuccessSnackbarProps {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  label: string;\r\n}\r\n\r\nconst SuccessSnackbar = (props: ISuccessSnackbarProps) => {\r\n  const { open, setOpen, label } = props;\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={() => setOpen(false)}\r\n    >\r\n      <Alert\r\n        onClose={() => setOpen(false)}\r\n        severity=\"success\"\r\n        sx={{ width: \"100%\" }}\r\n      >\r\n        {label}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default SuccessSnackbar;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport useSuccessSnackbar from \"../../hooks/useSuccessSnackbar\";\r\n\r\ninterface IActionModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n  title: string;\r\n  saveFunction: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ActionModal = (props: IActionModalProps) => {\r\n  const { isOpen, setIsOpen, title, saveFunction, children } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"actionModal\" });\r\n  const { setOpen: setSuccessbar, snackbar: SuccessSnack } = useSuccessSnackbar(\r\n    t(\"success-snack-label\")\r\n  );\r\n  return (\r\n    <>\r\n      {SuccessSnack}\r\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n        <Card\r\n          sx={{\r\n            position: \"absolute\" as \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"95%\",\r\n            height: \"85%\",\r\n            bgcolor: \"background.paper\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          <CardHeader\r\n            sx={{ p: 2, bgcolor: \"success.dark\", color: \"white\" }}\r\n            title={title}\r\n            action={\r\n              <IconButton\r\n                onClick={() => {\r\n                  setIsOpen(false);\r\n                }}\r\n              >\r\n                <CloseRounded htmlColor=\"white\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n          <CardContent sx={{ height: \"76%\", overflow: \"auto\" }}>\r\n            {children}\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n              startIcon={<SaveRounded />}\r\n              color=\"success\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                setSuccessbar(true);\r\n                saveFunction();\r\n              }}\r\n            >\r\n              {t(\"save\")}\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActionModal;\r\n","import { useState } from \"react\";\r\nimport SuccessSnackbar from \"../../components/SuccessSnackbar\";\r\n\r\nexport default function useSuccessSnackbar(label: string) {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const snackbar = (\r\n    <SuccessSnackbar open={open} setOpen={setOpen} label={label} />\r\n  );\r\n  return {\r\n    setOpen,\r\n    snackbar,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  Stack,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IDeleteModal {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n}\r\n\r\nconst DeleteModal = (props: IDeleteModal) => {\r\n  const { open, setOpen } = props;\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.delete-modal\",\r\n  });\r\n  return (\r\n    <Modal open={open} onClose={() => setOpen(false)}>\r\n      <Paper\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          pt: 1,\r\n          px: 3,\r\n          pb: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <IconButton sx={{ ml: \"auto\", mb: 2 }} onClick={() => setOpen(false)}>\r\n          <Close />\r\n        </IconButton>\r\n        <Typography>{t(\"are-you-sure\")}</Typography>\r\n        <Stack direction=\"row\" justifyContent=\"space-evenly\" mt={2}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport { Input, InputAdornment } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SearchInput = (props: { onChange: (e: any) => void }) => {\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"searchInput\" });\r\n  const { onChange } = props;\r\n  return (\r\n    <Input\r\n      type=\"search\"\r\n      onChange={onChange}\r\n      startAdornment={\r\n        <InputAdornment position=\"start\">\r\n          <Search />\r\n        </InputAdornment>\r\n      }\r\n      placeholder={t(\"placeholder\")}\r\n      sx={{ width: \"40em\", mx: \"auto\" }}\r\n    ></Input>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { Grid, Stack, TextField } from \"@mui/material\";\r\nimport { ICompany } from \"../../../interfaces/Company\";\r\nimport companies from \"../../../mockData/companies\";\r\nimport FormDropdown from \"../../FormDropdown\";\r\n\r\nconst SearchDistance = (props: any) => {\r\n  const { search, setSearch } = props;\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Stack direction=\"row\">\r\n        <FormDropdown<ICompany>\r\n          label=\"Select Company\"\r\n          handleChange={(e) => {\r\n            const cSearch = { ...search };\r\n            cSearch.distance = {\r\n              company: {},\r\n              value: 0,\r\n            };\r\n            cSearch.distance.company = companies.filter(\r\n              (company) => company.id === e.target.value\r\n            )[0];\r\n\r\n            setSearch(cSearch);\r\n          }}\r\n          datas={companies}\r\n          defaultValue=\"Select Company\"\r\n          selectedValue={\r\n            search.distance\r\n              ? search.distance.company\r\n                ? search.distance.company.id\r\n                : 0\r\n              : 0\r\n          }\r\n          dataToValue={(item) => `${item.id} - ${item.name}`}\r\n          getValue={(item) => item.id}\r\n        />\r\n        <TextField\r\n          label=\"Distance\"\r\n          type=\"number\"\r\n          name={\"distance\"}\r\n          value={search.distance ? search.distance.value : 0}\r\n          disabled={!Boolean(search.distance ? search.distance.company : false)}\r\n          variant=\"standard\"\r\n          margin=\"dense\"\r\n          onChange={(e) => {\r\n            const cSearch = { ...search };\r\n            cSearch.distance.value = e.target.value;\r\n            setSearch(cSearch);\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchDistance;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Modal,\r\n  Paper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport IFilter from \"../../../interfaces/Filter\";\r\nimport SearchDistance from \"./SearchDistance\";\r\n\r\nconst AdvancedSearchModal = (props: {\r\n  isOpen: boolean;\r\n  setIsOpen: (t: boolean) => void;\r\n  filters: IFilter[];\r\n  searchForm: any;\r\n}) => {\r\n  const { isOpen, setIsOpen, filters, searchForm } = props;\r\n  const [search, setSearch] = useState(searchForm.values.search);\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.advanced-search-modal\",\r\n  });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Paper\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          minWidth: \"70%\",\r\n          minHeight: \"60%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          padding: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Stack mx=\"auto\">\r\n          <Typography variant=\"h5\" component=\"h6\">\r\n            {t(\"title\")}\r\n          </Typography>\r\n        </Stack>\r\n        <Grid container display=\"flex\" width=\"100%\" textAlign=\"center\">\r\n          <SearchDistance search={search} setSearch={setSearch} />\r\n          {filters.map((filter, index) => {\r\n            return (\r\n              !Boolean(filter.notVisible) && (\r\n                <Grid item xs={12} md={4} key={index}>\r\n                  <TextField\r\n                    label={filter.label}\r\n                    type=\"text\"\r\n                    name={filter.name}\r\n                    value={search[filter.name] || \"\"}\r\n                    variant=\"standard\"\r\n                    margin=\"dense\"\r\n                    onChange={(e) => {\r\n                      const cSearch = { ...search };\r\n                      cSearch[filter.name] = e.target.value;\r\n                      setSearch(cSearch);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              )\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Stack mt=\"auto\" ml=\"auto\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              searchForm.setFieldValue(\"search\", search);\r\n              searchForm.submitForm();\r\n            }}\r\n            startIcon={<Search />}\r\n          >\r\n            {t(\"search\")}\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AdvancedSearchModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport SearchInput from \"../../SearchInput\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search, Tune } from \"@mui/icons-material\";\r\nimport AdvancedSearchModal from \"../AdvancedSearchModal\";\r\n\r\ninterface ISearchBarProps {\r\n  searchForm: any;\r\n  filters?: { label: string; name: string }[];\r\n}\r\n\r\nconst SearchBar = (props: ISearchBarProps) => {\r\n  const { searchForm, filters } = props;\r\n  const [searchKey, setSearchKey] = useState<string>(\"\");\r\n  const [isAdvancedSearchModalOpen, setIsAdvancedSearchModalOpen] =\r\n    useState<boolean>(false);\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.search-bar\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {Boolean(filters) && (\r\n        <AdvancedSearchModal\r\n          isOpen={isAdvancedSearchModalOpen}\r\n          setIsOpen={setIsAdvancedSearchModalOpen}\r\n          searchForm={searchForm}\r\n          filters={filters ? filters : []}\r\n        />\r\n      )}\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ mr: \"auto\", width: \"50%\", ml: 2, alignItems: \"flex-end\" }}\r\n      >\r\n        <Grid item xs={5} sx={{ display: \"flex\" }}>\r\n          <SearchInput\r\n            onChange={(e: any) => {\r\n              setSearchKey(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button\r\n            sx={{ ml: \"auto\" }}\r\n            startIcon={<Search />}\r\n            onClick={() => {\r\n              searchForm.setFieldValue(\"search\", { name: searchKey });\r\n              searchForm.submitForm();\r\n            }}\r\n          >\r\n            {t(\"search\")}\r\n          </Button>\r\n        </Grid>\r\n        {Boolean(filters) && (\r\n          <Grid item xs={4}>\r\n            <Button\r\n              sx={{ ml: \"auto\" }}\r\n              startIcon={<Tune />}\r\n              onClick={() => {\r\n                setIsAdvancedSearchModalOpen(true);\r\n              }}\r\n            >\r\n              {t(\"advanced-search\")}\r\n            </Button>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Add, BorderColor, DeleteForeverRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport resolve from \"../../helpers/resolve\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\ninterface ICRUDTableProps<DataType> {\r\n  data: DataType[];\r\n  cellNames: string[];\r\n  keysToShow: string[];\r\n  setModalData: (data: DataType | undefined) => void;\r\n  setIsDataModalOpen: (value: boolean) => void;\r\n  customDataComponent?: any;\r\n  searchForm?: any;\r\n  filters?: any;\r\n}\r\n\r\nconst CRUDTable = <DataType extends { id: number }>(\r\n  props: ICRUDTableProps<DataType>\r\n) => {\r\n  const {\r\n    data,\r\n    cellNames,\r\n    setModalData,\r\n    keysToShow,\r\n    setIsDataModalOpen,\r\n    customDataComponent,\r\n    searchForm,\r\n    filters,\r\n  } = props;\r\n  let customComponent = customDataComponent ? customDataComponent : [];\r\n\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"crudTable\" });\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowPerPage, setRowPerPage] = useState<number>(10);\r\n  const [selectedDatasId, setSelectedDatasId] = useState<number[]>([]);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: \"calc(100% - 40px)\",\r\n        marginLeft: \"auto\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <DeleteModal open={openDeleteModal} setOpen={setOpenDeleteModal} />\r\n      {Boolean(searchForm) && (\r\n        <SearchBar searchForm={searchForm} filters={filters} />\r\n      )}\r\n      <TableContainer sx={{ maxHeight: \"500px\" }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  value=\"all\"\r\n                  checked={data.length === selectedDatasId.length}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedDatasId(data.map((c: DataType) => c.id));\r\n                    } else setSelectedDatasId([]);\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              {cellNames.map((name, index) => (\r\n                <TableCell key={index}>{name}</TableCell>\r\n              ))}\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0 ? (\r\n              data\r\n                .slice(currentPage * rowPerPage, (currentPage + 1) * rowPerPage)\r\n                .map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell key={index}>\r\n                      <Checkbox\r\n                        value={item.id}\r\n                        checked={selectedDatasId.includes(item.id)}\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            const _selectedDatasId = [...selectedDatasId];\r\n                            _selectedDatasId.push(item.id);\r\n                            setSelectedDatasId(_selectedDatasId);\r\n                          } else {\r\n                            const _selectedDatasId = [...selectedDatasId];\r\n                            _selectedDatasId.splice(\r\n                              _selectedDatasId.indexOf(item.id),\r\n                              1\r\n                            );\r\n                            setSelectedDatasId(_selectedDatasId);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    {keysToShow.map((key, index) => (\r\n                      <TableCell key={index}>\r\n                        {Object.keys(customComponent).includes(key)\r\n                          ? customComponent[key](item[key as keyof typeof item])\r\n                          : key.includes(\".\")\r\n                          ? resolve(key, item)\r\n                          : item[key as keyof typeof item]}\r\n                      </TableCell>\r\n                    ))}\r\n\r\n                    <TableCell>\r\n                      <Button\r\n                        sx={{ border: \"none !important\" }}\r\n                        color=\"warning\"\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          setModalData(item);\r\n                          setIsDataModalOpen(true);\r\n                        }}\r\n                      >\r\n                        <BorderColor />\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={cellNames.length + 1} align=\"center\">\r\n                  {t(\"no-data\")}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowPerPage}\r\n        page={currentPage}\r\n        onPageChange={(e: unknown, newPage: number) => {\r\n          setCurrentPage(newPage);\r\n        }}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowPerPage(+e.target.value);\r\n          setCurrentPage(0);\r\n        }}\r\n      />\r\n      <Stack padding={1}>\r\n        <ButtonGroup\r\n          sx={{ marginLeft: \"auto\" }}\r\n          aria-label=\"medium button group contained\"\r\n          variant=\"contained\"\r\n        >\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<Add />}\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setModalData(undefined);\r\n              setIsDataModalOpen(true);\r\n            }}\r\n          >\r\n            {t(\"add\")}\r\n          </Button>\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<DeleteForeverRounded />}\r\n            color=\"error\"\r\n            onClick={() => {\r\n              setOpenDeleteModal(true);\r\n            }}\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CRUDTable;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SxProps,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface IFormDropdownProps<DataType> {\r\n  label: string;\r\n  handleChange: (e: any) => void;\r\n  datas: DataType[];\r\n  defaultValue: string;\r\n  dataToValue: (data: DataType) => string;\r\n  selectedValue?: number | string;\r\n  disabled?: boolean;\r\n  width?: string;\r\n  sx?: SxProps;\r\n  getValue: (data: DataType) => string | number;\r\n}\r\n\r\nconst FormDropdown = <DataType extends { id: number } | string>(\r\n  props: IFormDropdownProps<DataType>\r\n) => {\r\n  const {\r\n    label,\r\n    handleChange,\r\n    defaultValue,\r\n    datas,\r\n    dataToValue,\r\n    selectedValue,\r\n    disabled,\r\n    width,\r\n    getValue,\r\n    sx,\r\n  } = props;\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      disabled={disabled}\r\n      sx={{ width: \"100%\" || width, m: 1, ...sx }}\r\n    >\r\n      <InputLabel>{label}</InputLabel>\r\n\r\n      <Select value={selectedValue || 0} label={label} onChange={handleChange}>\r\n        <MenuItem value={0}>\r\n          <em>{defaultValue}</em>\r\n        </MenuItem>\r\n        {datas.map((data: DataType, index) => (\r\n          <MenuItem key={index} value={getValue(data)}>\r\n            {dataToValue(data)}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormDropdown;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\", m: 1 }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","export default function resolve(path: string, obj: Object) {\r\n  return path.split(\".\").reduce((prev: any, curr: string) => {\r\n    return prev ? prev[curr as keyof typeof prev] : null;\r\n  }, obj);\r\n}\r\n","import { ICompany } from \"../interfaces/Company\";\r\n\r\nconst companies: ICompany[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Company Ankara\",\r\n    city: \"Ankara\",\r\n    mapsCoord: {\r\n      lat: 39.925533,\r\n      lng: 32.866287,\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Company Paris\",\r\n    city: \"Paris\",\r\n    mapsCoord: {\r\n      lat: 48.864716,\r\n      lng: 2.349014,\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Company London\",\r\n    city: \"London\",\r\n    mapsCoord: {\r\n      lat: 51.509865,\r\n      lng: -0.118092,\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Company New York\",\r\n    city: \"New York\",\r\n    mapsCoord: {\r\n      lat: 40.73061,\r\n      lng: -73.935242,\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Company Berlin\",\r\n    city: \"Berlin\",\r\n    mapsCoord: {\r\n      lat: 52.520008,\r\n      lng: 13.404954,\r\n    },\r\n  },\r\n];\r\n\r\nexport default companies;\r\n","import { IHRMember } from \"../interfaces/HRMember\";\r\n\r\nconst hrmembers: IHRMember[] = [\r\n  { id: 1, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 2, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 3, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 4, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 5, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 6, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 7, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 8, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 9, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 10, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 11, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 12, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 13, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 14, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 15, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 16, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 17, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 18, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 19, name: \"Example\", surname: \"Candidate\" },\r\n];\r\n\r\nexport default hrmembers;\r\n"],"names":["emptyHRMember","id","name","surname","tasks","candidatesCreated","props","hrmember","isOpen","setIsOpen","t","useTranslation","keyPrefix","form","useFormik","initialValues","onSubmit","enableReinitialize","ActionModal","title","values","saveFunction","List","ListItem","FormInput","label","type","value","onChange","handleChange","disabled","useState","isHRMemberModalOpen","setIsHRMemberModalOpen","undefined","hrMemberModalrHRMember","setHRMemberModalHRMember","CRUDTable","data","hrmembers","cellNames","keysToShow","setModalData","setIsDataModalOpen","useEffect","pageRedux","payload","open","setOpen","Snackbar","autoHideDuration","onClose","Alert","severity","sx","width","children","snackbar","useSuccessSnackbar","setSuccessbar","SuccessSnack","Modal","Card","position","top","left","transform","height","bgcolor","border","CardHeader","p","color","action","IconButton","onClick","CloseRounded","htmlColor","CardContent","overflow","CardActions","Button","marginLeft","startIcon","SaveRounded","variant","Paper","pt","px","pb","display","flexDirection","ml","mb","Close","Typography","Stack","direction","justifyContent","mt","Input","startAdornment","InputAdornment","Search","placeholder","mx","search","setSearch","Grid","item","xs","md","FormDropdown","e","cSearch","distance","company","companies","target","datas","defaultValue","selectedValue","dataToValue","getValue","TextField","Boolean","margin","filters","searchForm","minWidth","minHeight","padding","component","container","textAlign","map","filter","index","notVisible","setFieldValue","submitForm","searchKey","setSearchKey","isAdvancedSearchModalOpen","setIsAdvancedSearchModalOpen","spacing","mr","alignItems","Tune","customDataComponent","customComponent","currentPage","setCurrentPage","rowPerPage","setRowPerPage","selectedDatasId","setSelectedDatasId","openDeleteModal","setOpenDeleteModal","boxShadow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","checked","length","c","TableBody","slice","includes","_selectedDatasId","push","splice","indexOf","key","Object","keys","resolve","BorderColor","colSpan","align","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","ButtonGroup","Add","DeleteForeverRounded","m","error","htmlFor","path","obj","split","reduce","prev","curr","city","mapsCoord","lat","lng"],"sourceRoot":""}