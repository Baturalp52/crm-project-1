{"version":3,"file":"static/js/895.81fdd620.chunk.js","mappings":"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","sources":["components/SuccessSnackbar/index.tsx","components/ActionModal/index.tsx","hooks/useSuccessSnackbar/index.tsx","components/CRUDTable/DeleteModal/index.tsx","components/SearchInput/index.tsx","components/CRUDTable/AdvancedSearchModal/SearchDistance.tsx","components/CRUDTable/AdvancedSearchModal/index.tsx","components/CRUDTable/SearchBar/index.tsx","components/CRUDTable/index.tsx","components/FormDropdown/index.tsx","components/FormInput/index.tsx","helpers/resolve.ts","mockData/candidates.ts","mockData/companies.ts"],"sourcesContent":["import { Alert, Snackbar } from \"@mui/material\";\r\n\r\ninterface ISuccessSnackbarProps {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  label: string;\r\n}\r\n\r\nconst SuccessSnackbar = (props: ISuccessSnackbarProps) => {\r\n  const { open, setOpen, label } = props;\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={() => setOpen(false)}\r\n    >\r\n      <Alert\r\n        onClose={() => setOpen(false)}\r\n        severity=\"success\"\r\n        sx={{ width: \"100%\" }}\r\n      >\r\n        {label}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default SuccessSnackbar;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport useSuccessSnackbar from \"../../hooks/useSuccessSnackbar\";\r\n\r\ninterface IActionModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n  title: string;\r\n  saveFunction: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ActionModal = (props: IActionModalProps) => {\r\n  const { isOpen, setIsOpen, title, saveFunction, children } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"actionModal\" });\r\n  const { setOpen: setSuccessbar, snackbar: SuccessSnack } = useSuccessSnackbar(\r\n    t(\"success-snack-label\")\r\n  );\r\n  return (\r\n    <>\r\n      {SuccessSnack}\r\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n        <Card\r\n          sx={{\r\n            position: \"absolute\" as \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"95%\",\r\n            height: \"85%\",\r\n            bgcolor: \"background.paper\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          <CardHeader\r\n            sx={{ p: 2, bgcolor: \"success.dark\", color: \"white\" }}\r\n            title={title}\r\n            action={\r\n              <IconButton\r\n                onClick={() => {\r\n                  setIsOpen(false);\r\n                }}\r\n              >\r\n                <CloseRounded htmlColor=\"white\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n          <CardContent sx={{ height: \"76%\", overflow: \"auto\" }}>\r\n            {children}\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n              startIcon={<SaveRounded />}\r\n              color=\"success\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                setSuccessbar(true);\r\n                saveFunction();\r\n              }}\r\n            >\r\n              {t(\"save\")}\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActionModal;\r\n","import { useState } from \"react\";\r\nimport SuccessSnackbar from \"../../components/SuccessSnackbar\";\r\n\r\nexport default function useSuccessSnackbar(label: string) {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const snackbar = (\r\n    <SuccessSnackbar open={open} setOpen={setOpen} label={label} />\r\n  );\r\n  return {\r\n    setOpen,\r\n    snackbar,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  Stack,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IDeleteModal {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n}\r\n\r\nconst DeleteModal = (props: IDeleteModal) => {\r\n  const { open, setOpen } = props;\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.delete-modal\",\r\n  });\r\n  return (\r\n    <Modal open={open} onClose={() => setOpen(false)}>\r\n      <Paper\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          pt: 1,\r\n          px: 3,\r\n          pb: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <IconButton sx={{ ml: \"auto\", mb: 2 }} onClick={() => setOpen(false)}>\r\n          <Close />\r\n        </IconButton>\r\n        <Typography>{t(\"are-you-sure\")}</Typography>\r\n        <Stack direction=\"row\" justifyContent=\"space-evenly\" mt={2}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport { Input, InputAdornment } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SearchInput = (props: { onChange: (e: any) => void }) => {\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"searchInput\" });\r\n  const { onChange } = props;\r\n  return (\r\n    <Input\r\n      type=\"search\"\r\n      onChange={onChange}\r\n      startAdornment={\r\n        <InputAdornment position=\"start\">\r\n          <Search />\r\n        </InputAdornment>\r\n      }\r\n      placeholder={t(\"placeholder\")}\r\n      sx={{ width: \"40em\", mx: \"auto\" }}\r\n    ></Input>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { Grid, Stack, TextField } from \"@mui/material\";\r\nimport { ICompany } from \"../../../interfaces/Company\";\r\nimport companies from \"../../../mockData/companies\";\r\nimport FormDropdown from \"../../FormDropdown\";\r\n\r\nconst SearchDistance = (props: any) => {\r\n  const { search, setSearch } = props;\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Stack direction=\"row\">\r\n        <FormDropdown<ICompany>\r\n          label=\"Select Company\"\r\n          handleChange={(e) => {\r\n            const cSearch = { ...search };\r\n            cSearch.distance = {\r\n              company: {},\r\n              value: 0,\r\n            };\r\n            cSearch.distance.company = companies.filter(\r\n              (company) => company.id === e.target.value\r\n            )[0];\r\n\r\n            setSearch(cSearch);\r\n          }}\r\n          datas={companies}\r\n          defaultValue=\"Select Company\"\r\n          selectedValue={\r\n            search.distance\r\n              ? search.distance.company\r\n                ? search.distance.company.id\r\n                : 0\r\n              : 0\r\n          }\r\n          dataToValue={(item) => `${item.id} - ${item.name}`}\r\n          getValue={(item) => item.id}\r\n        />\r\n        <TextField\r\n          label=\"Distance\"\r\n          type=\"number\"\r\n          name={\"distance\"}\r\n          value={search.distance ? search.distance.value : 0}\r\n          disabled={!Boolean(search.distance ? search.distance.company : false)}\r\n          variant=\"standard\"\r\n          margin=\"dense\"\r\n          onChange={(e) => {\r\n            const cSearch = { ...search };\r\n            cSearch.distance.value = e.target.value;\r\n            setSearch(cSearch);\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchDistance;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Modal,\r\n  Paper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport IFilter from \"../../../interfaces/Filter\";\r\nimport SearchDistance from \"./SearchDistance\";\r\n\r\nconst AdvancedSearchModal = (props: {\r\n  isOpen: boolean;\r\n  setIsOpen: (t: boolean) => void;\r\n  filters: IFilter[];\r\n  searchForm: any;\r\n}) => {\r\n  const { isOpen, setIsOpen, filters, searchForm } = props;\r\n  const [search, setSearch] = useState(searchForm.values.search);\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.advanced-search-modal\",\r\n  });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Paper\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          minWidth: \"70%\",\r\n          minHeight: \"60%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          padding: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Stack mx=\"auto\">\r\n          <Typography variant=\"h5\" component=\"h6\">\r\n            {t(\"title\")}\r\n          </Typography>\r\n        </Stack>\r\n        <Grid container display=\"flex\" width=\"100%\" textAlign=\"center\">\r\n          <SearchDistance search={search} setSearch={setSearch} />\r\n          {filters.map((filter, index) => {\r\n            return (\r\n              !Boolean(filter.notVisible) && (\r\n                <Grid item xs={12} md={4} key={index}>\r\n                  <TextField\r\n                    label={filter.label}\r\n                    type=\"text\"\r\n                    name={filter.name}\r\n                    value={search[filter.name] || \"\"}\r\n                    variant=\"standard\"\r\n                    margin=\"dense\"\r\n                    onChange={(e) => {\r\n                      const cSearch = { ...search };\r\n                      cSearch[filter.name] = e.target.value;\r\n                      setSearch(cSearch);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              )\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Stack mt=\"auto\" ml=\"auto\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              searchForm.setFieldValue(\"search\", search);\r\n              searchForm.submitForm();\r\n            }}\r\n            startIcon={<Search />}\r\n          >\r\n            {t(\"search\")}\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AdvancedSearchModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport SearchInput from \"../../SearchInput\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search, Tune } from \"@mui/icons-material\";\r\nimport AdvancedSearchModal from \"../AdvancedSearchModal\";\r\n\r\ninterface ISearchBarProps {\r\n  searchForm: any;\r\n  filters?: { label: string; name: string }[];\r\n}\r\n\r\nconst SearchBar = (props: ISearchBarProps) => {\r\n  const { searchForm, filters } = props;\r\n  const [searchKey, setSearchKey] = useState<string>(\"\");\r\n  const [isAdvancedSearchModalOpen, setIsAdvancedSearchModalOpen] =\r\n    useState<boolean>(false);\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.search-bar\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {Boolean(filters) && (\r\n        <AdvancedSearchModal\r\n          isOpen={isAdvancedSearchModalOpen}\r\n          setIsOpen={setIsAdvancedSearchModalOpen}\r\n          searchForm={searchForm}\r\n          filters={filters ? filters : []}\r\n        />\r\n      )}\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ mr: \"auto\", width: \"50%\", ml: 2, alignItems: \"flex-end\" }}\r\n      >\r\n        <Grid item xs={5} sx={{ display: \"flex\" }}>\r\n          <SearchInput\r\n            onChange={(e: any) => {\r\n              setSearchKey(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button\r\n            sx={{ ml: \"auto\" }}\r\n            startIcon={<Search />}\r\n            onClick={() => {\r\n              searchForm.setFieldValue(\"search\", { name: searchKey });\r\n              searchForm.submitForm();\r\n            }}\r\n          >\r\n            {t(\"search\")}\r\n          </Button>\r\n        </Grid>\r\n        {Boolean(filters) && (\r\n          <Grid item xs={4}>\r\n            <Button\r\n              sx={{ ml: \"auto\" }}\r\n              startIcon={<Tune />}\r\n              onClick={() => {\r\n                setIsAdvancedSearchModalOpen(true);\r\n              }}\r\n            >\r\n              {t(\"advanced-search\")}\r\n            </Button>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Add, BorderColor, DeleteForeverRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport resolve from \"../../helpers/resolve\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\ninterface ICRUDTableProps<DataType> {\r\n  data: DataType[];\r\n  cellNames: string[];\r\n  keysToShow: string[];\r\n  setModalData: (data: DataType | undefined) => void;\r\n  setIsDataModalOpen: (value: boolean) => void;\r\n  customDataComponent?: any;\r\n  searchForm?: any;\r\n  filters?: any;\r\n}\r\n\r\nconst CRUDTable = <DataType extends { id: number }>(\r\n  props: ICRUDTableProps<DataType>\r\n) => {\r\n  const {\r\n    data,\r\n    cellNames,\r\n    setModalData,\r\n    keysToShow,\r\n    setIsDataModalOpen,\r\n    customDataComponent,\r\n    searchForm,\r\n    filters,\r\n  } = props;\r\n  let customComponent = customDataComponent ? customDataComponent : [];\r\n\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"crudTable\" });\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowPerPage, setRowPerPage] = useState<number>(10);\r\n  const [selectedDatasId, setSelectedDatasId] = useState<number[]>([]);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: \"calc(100% - 40px)\",\r\n        marginLeft: \"auto\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <DeleteModal open={openDeleteModal} setOpen={setOpenDeleteModal} />\r\n      {Boolean(searchForm) && (\r\n        <SearchBar searchForm={searchForm} filters={filters} />\r\n      )}\r\n      <TableContainer sx={{ maxHeight: \"500px\" }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  value=\"all\"\r\n                  checked={data.length === selectedDatasId.length}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedDatasId(data.map((c: DataType) => c.id));\r\n                    } else setSelectedDatasId([]);\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              {cellNames.map((name, index) => (\r\n                <TableCell key={index}>{name}</TableCell>\r\n              ))}\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0 ? (\r\n              data\r\n                .slice(currentPage * rowPerPage, (currentPage + 1) * rowPerPage)\r\n                .map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell key={index}>\r\n                      <Checkbox\r\n                        value={item.id}\r\n                        checked={selectedDatasId.includes(item.id)}\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            const _selectedDatasId = [...selectedDatasId];\r\n                            _selectedDatasId.push(item.id);\r\n                            setSelectedDatasId(_selectedDatasId);\r\n                          } else {\r\n                            const _selectedDatasId = [...selectedDatasId];\r\n                            _selectedDatasId.splice(\r\n                              _selectedDatasId.indexOf(item.id),\r\n                              1\r\n                            );\r\n                            setSelectedDatasId(_selectedDatasId);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    {keysToShow.map((key, index) => (\r\n                      <TableCell key={index}>\r\n                        {Object.keys(customComponent).includes(key)\r\n                          ? customComponent[key](item[key as keyof typeof item])\r\n                          : key.includes(\".\")\r\n                          ? resolve(key, item)\r\n                          : item[key as keyof typeof item]}\r\n                      </TableCell>\r\n                    ))}\r\n\r\n                    <TableCell>\r\n                      <Button\r\n                        sx={{ border: \"none !important\" }}\r\n                        color=\"warning\"\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          setModalData(item);\r\n                          setIsDataModalOpen(true);\r\n                        }}\r\n                      >\r\n                        <BorderColor />\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={cellNames.length + 1} align=\"center\">\r\n                  {t(\"no-data\")}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowPerPage}\r\n        page={currentPage}\r\n        onPageChange={(e: unknown, newPage: number) => {\r\n          setCurrentPage(newPage);\r\n        }}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowPerPage(+e.target.value);\r\n          setCurrentPage(0);\r\n        }}\r\n      />\r\n      <Stack padding={1}>\r\n        <ButtonGroup\r\n          sx={{ marginLeft: \"auto\" }}\r\n          aria-label=\"medium button group contained\"\r\n          variant=\"contained\"\r\n        >\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<Add />}\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setModalData(undefined);\r\n              setIsDataModalOpen(true);\r\n            }}\r\n          >\r\n            {t(\"add\")}\r\n          </Button>\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<DeleteForeverRounded />}\r\n            color=\"error\"\r\n            onClick={() => {\r\n              setOpenDeleteModal(true);\r\n            }}\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CRUDTable;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SxProps,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface IFormDropdownProps<DataType> {\r\n  label: string;\r\n  handleChange: (e: any) => void;\r\n  datas: DataType[];\r\n  defaultValue: string;\r\n  dataToValue: (data: DataType) => string;\r\n  selectedValue?: number | string;\r\n  disabled?: boolean;\r\n  width?: string;\r\n  sx?: SxProps;\r\n  getValue: (data: DataType) => string | number;\r\n}\r\n\r\nconst FormDropdown = <DataType extends { id: number } | string>(\r\n  props: IFormDropdownProps<DataType>\r\n) => {\r\n  const {\r\n    label,\r\n    handleChange,\r\n    defaultValue,\r\n    datas,\r\n    dataToValue,\r\n    selectedValue,\r\n    disabled,\r\n    width,\r\n    getValue,\r\n    sx,\r\n  } = props;\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      disabled={disabled}\r\n      sx={{ width: \"100%\" || width, m: 1, ...sx }}\r\n    >\r\n      <InputLabel>{label}</InputLabel>\r\n\r\n      <Select value={selectedValue || 0} label={label} onChange={handleChange}>\r\n        <MenuItem value={0}>\r\n          <em>{defaultValue}</em>\r\n        </MenuItem>\r\n        {datas.map((data: DataType, index) => (\r\n          <MenuItem key={index} value={getValue(data)}>\r\n            {dataToValue(data)}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormDropdown;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\", m: 1 }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","export default function resolve(path: string, obj: Object) {\r\n  return path.split(\".\").reduce((prev: any, curr: string) => {\r\n    return prev ? prev[curr as keyof typeof prev] : null;\r\n  }, obj);\r\n}\r\n","import { ICandidate } from \"../interfaces/Candidate\";\r\n\r\nconst candidates: ICandidate[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Example\",\r\n    surname: \"Candidate 1\",\r\n    city: \"Ankara\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 39.925533,\r\n      lng: 32.866287,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Paris\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 48.864716,\r\n      lng: 2.349014,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"London\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 51.509865,\r\n      lng: -0.118092,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"New York\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 40.73061,\r\n      lng: -73.935242,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Berlin\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 52.520008,\r\n      lng: 13.404954,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Ankara\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 39.925533,\r\n      lng: 32.866287,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Paris\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 48.864716,\r\n      lng: 2.349014,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"London\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 51.509865,\r\n      lng: -0.118092,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"New York\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 40.73061,\r\n      lng: -73.935242,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Berlin\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: {\r\n      lat: 52.520008,\r\n      lng: 13.404954,\r\n    },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n    situation: false,\r\n  },\r\n];\r\n\r\nexport default candidates;\r\n","import { ICompany } from \"../interfaces/Company\";\r\n\r\nconst companies: ICompany[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Company Ankara\",\r\n    city: \"Ankara\",\r\n    mapsCoord: {\r\n      lat: 39.925533,\r\n      lng: 32.866287,\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Company Paris\",\r\n    city: \"Paris\",\r\n    mapsCoord: {\r\n      lat: 48.864716,\r\n      lng: 2.349014,\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Company London\",\r\n    city: \"London\",\r\n    mapsCoord: {\r\n      lat: 51.509865,\r\n      lng: -0.118092,\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Company New York\",\r\n    city: \"New York\",\r\n    mapsCoord: {\r\n      lat: 40.73061,\r\n      lng: -73.935242,\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Company Berlin\",\r\n    city: \"Berlin\",\r\n    mapsCoord: {\r\n      lat: 52.520008,\r\n      lng: 13.404954,\r\n    },\r\n  },\r\n];\r\n\r\nexport default companies;\r\n"],"names":["props","open","setOpen","label","Snackbar","autoHideDuration","onClose","Alert","severity","sx","width","isOpen","setIsOpen","title","saveFunction","children","t","useTranslation","keyPrefix","useState","snackbar","useSuccessSnackbar","setSuccessbar","SuccessSnack","Modal","Card","position","top","left","transform","height","bgcolor","border","CardHeader","p","color","action","IconButton","onClick","CloseRounded","htmlColor","CardContent","overflow","CardActions","Button","marginLeft","startIcon","SaveRounded","variant","Paper","pt","px","pb","display","flexDirection","ml","mb","Close","Typography","Stack","direction","justifyContent","mt","onChange","Input","type","startAdornment","InputAdornment","Search","placeholder","mx","search","setSearch","Grid","item","xs","md","FormDropdown","handleChange","e","cSearch","distance","company","value","companies","id","target","datas","defaultValue","selectedValue","dataToValue","name","getValue","TextField","disabled","Boolean","margin","filters","searchForm","values","minWidth","minHeight","padding","component","container","textAlign","map","filter","index","notVisible","setFieldValue","submitForm","searchKey","setSearchKey","isAdvancedSearchModalOpen","setIsAdvancedSearchModalOpen","spacing","mr","alignItems","Tune","data","cellNames","setModalData","keysToShow","setIsDataModalOpen","customDataComponent","customComponent","currentPage","setCurrentPage","rowPerPage","setRowPerPage","selectedDatasId","setSelectedDatasId","openDeleteModal","setOpenDeleteModal","boxShadow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","checked","length","c","TableBody","slice","includes","_selectedDatasId","push","splice","indexOf","key","Object","keys","resolve","BorderColor","colSpan","align","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","ButtonGroup","Add","undefined","DeleteForeverRounded","m","error","htmlFor","path","obj","split","reduce","prev","curr","surname","city","CVAddress","phoneNumbers","emailAdresses","address","extraAddress","zipCode","country","mapsCoord","lat","lng","creatorMember","previousJobs","skills","level","comment","salaryExpectation","departments","keywords","diplomas","situation"],"sourceRoot":""}