{"version":3,"file":"static/js/207.d2f608ec.chunk.js","mappings":"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","sources":["components/FormCommentsArea/helpers.ts","components/FormCommentsArea/CommentCard.tsx","components/FormCommentsArea/index.tsx","Pages/Tasks/emptyTask.ts","Pages/Tasks/ChangeSituation.tsx","Pages/Tasks/TaskModal.tsx","Pages/Tasks/TasksTable.tsx","Pages/Tasks/helpers.tsx","Pages/Tasks/index.tsx","components/ActionModal/index.tsx","components/CRUDTable/index.tsx","components/CRUDTable/helpers.ts","components/FormDropdown/index.tsx","components/FormInput/index.tsx","mockData/candidates.ts","mockData/hrmembers.ts","mockData/tasks.ts"],"sourcesContent":["export function stringToColor(string: string) {\r\n  let hash = 0;\r\n  let i;\r\n\r\n  /* eslint-disable no-bitwise */\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  let color = \"#\";\r\n\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.substr(-2);\r\n  }\r\n  /* eslint-enable no-bitwise */\r\n\r\n  return color;\r\n}\r\n\r\nexport function stringAvatar(name: string) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n      marginLeft: \"auto\",\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    children: name.includes(\" \")\r\n      ? `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`\r\n      : `${name.split(\" \")[0][0]}`,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Avatar, Card, CardContent, CardHeader } from \"@mui/material\";\r\nimport { stringAvatar } from \"./helpers\";\r\nimport { IComment } from \"../../interfaces/Comment\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface ICommentCardProps {\r\n  comment: IComment;\r\n}\r\n\r\nconst CommentCard = (props: ICommentCardProps) => {\r\n  const { comment } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"formCommentsArea\" });\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            {...stringAvatar(\r\n              comment.owner\r\n                ? comment.owner.name + comment.owner.surname\r\n                : \"Admin\"\r\n            )}\r\n          />\r\n        }\r\n        title={\r\n          comment.owner ? comment.owner.name + comment.owner.surname : \"Admin\"\r\n        }\r\n        subheader={\r\n          comment.createdDate\r\n            ? comment.createdDate.toLocaleString()\r\n            : t(\"unknown-date\")\r\n        }\r\n      />\r\n      <CardContent>{comment.content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IComment } from \"../../interfaces/Comment\";\r\n\r\nimport CommentCard from \"./CommentCard\";\r\n\r\ninterface IFormCommentsAreaProps {\r\n  title: string;\r\n  onChange: (e: any) => void;\r\n  values: IComment[] | never[] | undefined;\r\n}\r\n\r\nconst FormCommentsArea = (props: IFormCommentsAreaProps) => {\r\n  const { title, onChange, values } = props;\r\n  const [commentArea, setCommentArea] = useState<string>();\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"formCommentsArea\" });\r\n  return (\r\n    <Card sx={{ width: \"100%\" }}>\r\n      <CardHeader title={title} />\r\n      <CardContent sx={{ height: \"30vh\", maxHeight: \"30vh\", overflow: \"auto\" }}>\r\n        {values && values?.length > 0 ? (\r\n          values.map((comment) => (\r\n            <Paper sx={{ m: 2, p: 2 }} elevation={10}>\r\n              <CommentCard comment={comment} />\r\n            </Paper>\r\n          ))\r\n        ) : (\r\n          <Paper sx={{ m: 2, p: 2 }} elevation={10}>\r\n            {t(\"no-comment\")}\r\n          </Paper>\r\n        )}\r\n      </CardContent>\r\n      <CardActions>\r\n        <TextField\r\n          multiline\r\n          fullWidth\r\n          maxRows={4}\r\n          value={commentArea}\r\n          onChange={(e) => setCommentArea(e.target.value)}\r\n          variant=\"standard\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={() => {\r\n                    const comment = {\r\n                      id: 0,\r\n                      content: commentArea,\r\n                      createdDate: new Date(),\r\n                    };\r\n                    onChange(comment);\r\n                  }}\r\n                >\r\n                  <Add />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FormCommentsArea;\r\n","export const emptyTask = {\r\n  id: 0,\r\n  name: \"\",\r\n  description: \"\",\r\n  assignedMember: {\r\n    id: 0,\r\n  },\r\n  assignedCandidate: {\r\n    id: 0,\r\n  },\r\n  situation: \"on-progress\",\r\n  comments: [],\r\n  endDate: null,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AccessTime, AddCircle, Check, Close } from \"@mui/icons-material\";\r\nimport { IconButton, Paper, Typography } from \"@mui/material\";\r\n\r\ninterface IChangeSituationProps {\r\n  setFieldValue: <DataType>(field: string, data: DataType) => void;\r\n  situation?: \"on-progress\" | \"completed\" | \"closed\" | \"open\" | string;\r\n  title: string;\r\n}\r\n\r\ninterface IStyledIconButtonProps {\r\n  selected?: boolean;\r\n  color:\r\n    | \"warning\"\r\n    | \"success\"\r\n    | \"error\"\r\n    | \"inherit\"\r\n    | \"default\"\r\n    | \"primary\"\r\n    | \"secondary\"\r\n    | \"info\"\r\n    | undefined;\r\n  icon: React.ReactElement;\r\n  onClick: () => void;\r\n}\r\n\r\nconst StyledIconButton = (props: IStyledIconButtonProps) => {\r\n  const { selected, color, icon, onClick } = props;\r\n  return (\r\n    <IconButton\r\n      sx={{\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"thin\",\r\n        padding: 0.5,\r\n        margin: 1,\r\n        backgroundColor: selected ? color + \".main\" : \"white\",\r\n        \"&:hover\": { backgroundColor: selected ? \"white\" : color + \".main\" },\r\n      }}\r\n      onClick={onClick}\r\n      color={color}\r\n    >\r\n      {React.cloneElement(icon, {\r\n        sx: selected\r\n          ? { color: \"white\", \"&:hover\": { color: color + \".main\" } }\r\n          : { color: color + \".main\", \"&:hover\": { color: \"white\" } },\r\n      })}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst ChangeSituation = (props: IChangeSituationProps) => {\r\n  const { setFieldValue, situation, title } = props;\r\n  const [selected, setSelected] = useState<\r\n    \"on-progress\" | \"completed\" | \"closed\" | \"open\" | string\r\n  >(situation || \"open\");\r\n  return (\r\n    <Paper sx={{ padding: 2, marginTop: 1 }}>\r\n      <Typography variant=\"subtitle1\">{title}</Typography>\r\n\r\n      <StyledIconButton\r\n        selected={selected === \"open\"}\r\n        onClick={() => {\r\n          setSelected(\"open\");\r\n          setFieldValue(\"situation\", \"open\");\r\n        }}\r\n        color=\"info\"\r\n        icon={<AddCircle />}\r\n      />\r\n      <StyledIconButton\r\n        selected={selected === \"on-progress\"}\r\n        onClick={() => {\r\n          setSelected(\"on-progress\");\r\n          setFieldValue(\"situation\", \"on-progress\");\r\n        }}\r\n        color=\"warning\"\r\n        icon={<AccessTime />}\r\n      />\r\n      <StyledIconButton\r\n        selected={selected === \"completed\"}\r\n        onClick={() => {\r\n          setSelected(\"completed\");\r\n          setFieldValue(\"situation\", \"completed\");\r\n        }}\r\n        color=\"success\"\r\n        icon={<Check />}\r\n      />\r\n      <StyledIconButton\r\n        selected={selected === \"closed\"}\r\n        onClick={() => {\r\n          setSelected(\"closed\");\r\n          setFieldValue(\"situation\", \"closed\");\r\n        }}\r\n        color=\"error\"\r\n        icon={<Close />}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ChangeSituation;\r\n","import React from \"react\";\r\nimport { Grid, List, ListItem, TextField } from \"@mui/material\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport { DatePicker } from \"@mui/lab\";\r\nimport FormInput from \"../../components/FormInput\";\r\nimport ActionModal from \"../../components/ActionModal\";\r\nimport FormCommentsArea from \"../../components/FormCommentsArea\";\r\nimport FormDropdown from \"../../components/FormDropdown\";\r\n\r\nimport frLocale from \"date-fns/locale/fr\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { IComment } from \"../../interfaces/Comment\";\r\nimport { ITask } from \"../../interfaces/Task\";\r\n\r\nimport { emptyTask } from \"./emptyTask\";\r\n\r\nimport hrmembers from \"../../mockData/hrmembers\";\r\nimport candidates from \"../../mockData/candidates\";\r\nimport ChangeSituation from \"./ChangeSituation\";\r\ninterface ITaskModalProps {\r\n  task?: ITask;\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n}\r\n\r\nconst TaskModal = (props: ITaskModalProps) => {\r\n  const { task, isOpen, setIsOpen } = props;\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"tasks.modal\" });\r\n\r\n  let form = useFormik({\r\n    initialValues: task ? { ...task } : { ...emptyTask },\r\n    onSubmit: () => {},\r\n    enableReinitialize: true,\r\n  });\r\n  return (\r\n    <ActionModal\r\n      title={form.values.id ? t(\"edit\") : t(\"add\")}\r\n      isOpen={isOpen}\r\n      setIsOpen={setIsOpen}\r\n      saveFunction={() => {}}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12} md={6}>\r\n          <List>\r\n            <ListItem>\r\n              <FormInput\r\n                label={t(\"form.id\")}\r\n                type=\"number\"\r\n                value={form.values.id}\r\n                name=\"id\"\r\n                onChange={form.handleChange}\r\n                disabled\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormInput\r\n                label={t(\"form.name\")}\r\n                type=\"text\"\r\n                value={form.values.name}\r\n                name=\"name\"\r\n                onChange={form.handleChange}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormInput\r\n                label={t(\"form.description\")}\r\n                type=\"text\"\r\n                value={form.values.description}\r\n                name=\"description\"\r\n                onChange={form.handleChange}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormDropdown\r\n                label={t(\"form.assigned-candidate\")}\r\n                handleChange={(e) => {\r\n                  form.setFieldValue(\r\n                    \"assignedCandidate\",\r\n                    candidates.filter(\r\n                      (candidate) => candidate.id === e.target.value\r\n                    )[0]\r\n                  );\r\n                }}\r\n                datas={candidates}\r\n                defaultValue={t(\"form.dropdown-no-candidate\")}\r\n                dataToValue={(data) =>\r\n                  data.id + \" - \" + data.name + \" \" + data.surname\r\n                }\r\n                selectedId={\r\n                  form.values.assignedCandidate\r\n                    ? form.values.assignedCandidate.id\r\n                    : 0\r\n                }\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormDropdown\r\n                label={t(\"form.assigned-member\")}\r\n                handleChange={(e) => {\r\n                  form.setFieldValue(\r\n                    \"assignedMember\",\r\n                    hrmembers.filter(\r\n                      (member) => member.id === e.target.value\r\n                    )[0]\r\n                  );\r\n                }}\r\n                datas={hrmembers}\r\n                defaultValue={t(\"form.dropdown-global\")}\r\n                dataToValue={(data) =>\r\n                  data.id + \" - \" + data.name + \" \" + data.surname\r\n                }\r\n                selectedId={\r\n                  form.values.assignedMember ? form.values.assignedMember.id : 0\r\n                }\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={frLocale}\r\n              >\r\n                <DatePicker\r\n                  label={t(\"form.end-date\")}\r\n                  value={form.values.endDate}\r\n                  onChange={(date) => {\r\n                    form.setFieldValue(\"endDate\", date);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField sx={{ m: 1 }} {...params} />\r\n                  )}\r\n                />\r\n              </LocalizationProvider>\r\n            </ListItem>\r\n          </List>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <FormCommentsArea\r\n            title={t(\"form.comments\")}\r\n            values={form.values.comments}\r\n            onChange={(data) => {\r\n              const comments = form.values.comments\r\n                ? [...(form.values.comments as Array<IComment>)]\r\n                : [];\r\n              comments.push(data);\r\n              form.setFieldValue(\"comments\", comments);\r\n            }}\r\n          />\r\n          <ChangeSituation\r\n            title={t(\"form.change-situation\")}\r\n            situation={form.values.situation}\r\n            setFieldValue={form.setFieldValue}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </ActionModal>\r\n  );\r\n};\r\n\r\nexport default TaskModal;\r\n","import React, { useState } from \"react\";\r\n\r\nimport tasks from \"../../mockData/tasks\";\r\nimport TaskModal from \"./TaskModal\";\r\nimport { ITask } from \"../../interfaces/Task\";\r\nimport { getChipOfSituation } from \"./helpers\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CRUDTable from \"../../components/CRUDTable\";\r\n\r\nconst TasksTable = () => {\r\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState<boolean>(false);\r\n  const [taskModalTask, setTaskModalTask] = useState<ITask | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"tasks.table\" });\r\n\r\n  return (\r\n    <>\r\n      <TaskModal\r\n        task={taskModalTask}\r\n        isOpen={isTaskModalOpen}\r\n        setIsOpen={setIsTaskModalOpen}\r\n      />\r\n      <CRUDTable<ITask>\r\n        data={tasks}\r\n        cellNames={[\r\n          t(\"id\"),\r\n          t(\"name\"),\r\n          t(\"description\"),\r\n          t(\"assigned-candidate\"),\r\n          t(\"situation\"),\r\n        ]}\r\n        keysToShow={[\r\n          \"id\",\r\n          \"name\",\r\n          \"description\",\r\n          \"assignedCandidate.name\",\r\n          \"situation\",\r\n        ]}\r\n        setModalData={setTaskModalTask}\r\n        setIsDataModalOpen={setIsTaskModalOpen}\r\n        customDataComponent={{\r\n          situation: (data: string) => getChipOfSituation(data),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default TasksTable;\r\n","import { AccessTime, AddCircle, Check, Close } from \"@mui/icons-material\";\r\nimport { Chip } from \"@mui/material\";\r\nimport i18n from \"../../i18n\";\r\n\r\nexport function getChipOfSituation(situation: string) {\r\n  const translatePrefix = \"pages:tasks.helpers.chip-text.\";\r\n  switch (situation) {\r\n    case \"on-progress\":\r\n      return (\r\n        <Chip\r\n          icon={<AccessTime />}\r\n          label={i18n.t(translatePrefix + \"on-progress\")}\r\n          color=\"warning\"\r\n        />\r\n      );\r\n    case \"completed\":\r\n      return (\r\n        <Chip\r\n          icon={<Check />}\r\n          label={i18n.t(translatePrefix + \"completed\")}\r\n          color=\"success\"\r\n        />\r\n      );\r\n    case \"open\":\r\n      return (\r\n        <Chip\r\n          icon={<AddCircle />}\r\n          label={i18n.t(translatePrefix + \"open\")}\r\n          color=\"info\"\r\n        />\r\n      );\r\n    case \"closed\":\r\n      return (\r\n        <Chip\r\n          icon={<Close />}\r\n          label={i18n.t(translatePrefix + \"closed\")}\r\n          color=\"error\"\r\n        />\r\n      );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { pageRedux } from \"../../redux\";\r\nimport TasksTable from \"./TasksTable\";\r\n\r\nconst Tasks = () => {\r\n  useEffect(() => {\r\n    pageRedux.dispatch({\r\n      type: \"CHANGE_TITLE\",\r\n      payload: {\r\n        title: \"tasks\",\r\n      },\r\n    });\r\n  });\r\n  return <TasksTable />;\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IActionModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n  title: string;\r\n  saveFunction: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ActionModal = (props: IActionModalProps) => {\r\n  const { isOpen, setIsOpen, title, saveFunction, children } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"actionModal\" });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Card\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"95%\",\r\n          height: \"85%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n        }}\r\n      >\r\n        <CardHeader\r\n          sx={{ p: 2, bgcolor: \"success.dark\", color: \"white\" }}\r\n          title={title}\r\n          action={\r\n            <IconButton\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              <CloseRounded htmlColor=\"white\" />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardContent sx={{ height: \"76%\", overflow: \"auto\" }}>\r\n          {children}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n            startIcon={<SaveRounded />}\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              saveFunction();\r\n            }}\r\n          >\r\n            {t(\"save\")}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ActionModal;\r\n","import { Add, BorderColor, DeleteForeverRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { resolve } from \"./helpers\";\r\n\r\ninterface ICRUDTableProps<DataType> {\r\n  data: DataType[];\r\n  cellNames: string[];\r\n  keysToShow: string[];\r\n  setModalData: (data: DataType | undefined) => void;\r\n  setIsDataModalOpen: (value: boolean) => void;\r\n  customDataComponent?: any;\r\n}\r\n\r\nconst CRUDTable = <DataType extends { id: number }>(\r\n  props: ICRUDTableProps<DataType>\r\n) => {\r\n  const {\r\n    data,\r\n    cellNames,\r\n    setModalData,\r\n    keysToShow,\r\n    setIsDataModalOpen,\r\n    customDataComponent,\r\n  } = props;\r\n  let customComponent = customDataComponent ? customDataComponent : [];\r\n\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"crudTable\" });\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowPerPage, setRowPerPage] = useState<number>(10);\r\n  const [selectedDatasId, setSelectedDatasId] = useState<number[]>([]);\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: \"calc(100% - 40px)\",\r\n        marginLeft: \"auto\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <TableContainer sx={{ maxHeight: \"500px\" }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  value=\"all\"\r\n                  checked={data.length === selectedDatasId.length}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedDatasId(data.map((c: DataType) => c.id));\r\n                    } else setSelectedDatasId([]);\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              {cellNames.map((name) => (\r\n                <TableCell>{name}</TableCell>\r\n              ))}\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0\r\n              ? data\r\n                  .slice(\r\n                    currentPage * rowPerPage,\r\n                    (currentPage + 1) * rowPerPage\r\n                  )\r\n                  .map((item, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          value={item.id}\r\n                          checked={selectedDatasId.includes(item.id)}\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              const _selectedDatasId = [...selectedDatasId];\r\n                              _selectedDatasId.push(item.id);\r\n                              setSelectedDatasId(_selectedDatasId);\r\n                            } else {\r\n                              const _selectedDatasId = [...selectedDatasId];\r\n                              _selectedDatasId.splice(\r\n                                _selectedDatasId.indexOf(item.id),\r\n                                1\r\n                              );\r\n                              setSelectedDatasId(_selectedDatasId);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      {keysToShow.map((key, index) => (\r\n                        <>\r\n                          <TableCell key={index}>\r\n                            {Object.keys(customComponent).includes(key)\r\n                              ? customComponent[key](\r\n                                  item[key as keyof typeof item]\r\n                                )\r\n                              : key.includes(\".\")\r\n                              ? resolve(key, item)\r\n                              : item[key as keyof typeof item]}\r\n                          </TableCell>\r\n                        </>\r\n                      ))}\r\n\r\n                      <TableCell>\r\n                        <Button\r\n                          sx={{ border: \"none !important\" }}\r\n                          color=\"warning\"\r\n                          variant=\"contained\"\r\n                          onClick={() => {\r\n                            setModalData(item);\r\n                            setIsDataModalOpen(true);\r\n                          }}\r\n                        >\r\n                          <BorderColor />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n              : t(\"no-data\")}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowPerPage}\r\n        page={currentPage}\r\n        onPageChange={(e: unknown, newPage: number) => {\r\n          setCurrentPage(newPage);\r\n        }}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowPerPage(+e.target.value);\r\n          setCurrentPage(0);\r\n        }}\r\n      />\r\n      <Stack padding={\"1rem\"}>\r\n        <ButtonGroup\r\n          sx={{ marginLeft: \"auto\" }}\r\n          aria-label=\"medium button group contained\"\r\n          variant=\"contained\"\r\n        >\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<Add />}\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setModalData(undefined);\r\n              setIsDataModalOpen(true);\r\n            }}\r\n          >\r\n            {t(\"add\")}\r\n          </Button>\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<DeleteForeverRounded />}\r\n            color=\"error\"\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CRUDTable;\r\n","export function resolve(path: string, obj: Object) {\r\n  return path.split(\".\").reduce((prev: any, curr: string) => {\r\n    return prev ? prev[curr as keyof typeof prev] : null;\r\n  }, obj);\r\n}\r\n","import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface IFormDropdownProps<DataType> {\r\n  label: string;\r\n  handleChange: (e: any) => void;\r\n  datas: DataType[];\r\n  defaultValue: string;\r\n  dataToValue: (data: DataType) => string;\r\n  selectedId: number;\r\n  disabled?: boolean;\r\n  width?: string;\r\n  getValue?: (data: DataType) => string | number;\r\n}\r\n\r\nconst FormDropdown = <DataType extends { id: number }>(\r\n  props: IFormDropdownProps<DataType>\r\n) => {\r\n  const {\r\n    label,\r\n    handleChange,\r\n    defaultValue,\r\n    datas,\r\n    dataToValue,\r\n    selectedId,\r\n    disabled,\r\n    width,\r\n    getValue,\r\n  } = props;\r\n  return (\r\n    <FormControl disabled={disabled} sx={{ width: \"100%\" || width, m: 1 }}>\r\n      <InputLabel>{label}</InputLabel>\r\n\r\n      <Select value={selectedId} label={label} onChange={handleChange}>\r\n        <MenuItem value={0}>\r\n          <em>{defaultValue}</em>\r\n        </MenuItem>\r\n        {datas.map((data: DataType) => (\r\n          <MenuItem key={data.id} value={getValue ? getValue(data) : data.id}>\r\n            {dataToValue(data)}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormDropdown;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\", m: 1 }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { ICandidate } from \"../interfaces/Candidate\";\r\n\r\nconst candidates: ICandidate[] = [\r\n  { id: 1, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 2, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 3, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 4, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 5, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 6, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 7, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 8, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 9, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 10, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 11, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 12, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 13, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 14, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 15, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 16, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 17, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 18, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n  { id: 19, name: \"Example\", surname: \"Candidate\", city: \"Ankara\" },\r\n];\r\n\r\nexport default candidates;\r\n","import { IHRMember } from \"../interfaces/HRMember\";\r\n\r\nconst hrmembers: IHRMember[] = [\r\n  { id: 1, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 2, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 3, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 4, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 5, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 6, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 7, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 8, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 9, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 10, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 11, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 12, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 13, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 14, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 15, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 16, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 17, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 18, name: \"Example\", surname: \"Candidate\" },\r\n  { id: 19, name: \"Example\", surname: \"Candidate\" },\r\n];\r\n\r\nexport default hrmembers;\r\n","import { ITask } from \"../interfaces/Task\";\r\n\r\nconst tasks: ITask[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"completed\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"closed\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"completed\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"open\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"completed\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"open\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"completed\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"closed\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"closed\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"closed\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"open\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"open\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n    assignedCandidate: {\r\n      id: 1,\r\n      name: \"Candidate\",\r\n      surname: \"1\",\r\n    },\r\n    assignedMember: {\r\n      id: 1,\r\n      name: \"Member\",\r\n      surname: \"1\",\r\n    },\r\n  },\r\n];\r\n\r\nexport default tasks;\r\n"],"names":["stringToColor","string","i","hash","length","charCodeAt","color","toString","substr","props","name","comment","t","useTranslation","keyPrefix","Card","CardHeader","avatar","Avatar","owner","surname","sx","bgcolor","marginLeft","cursor","children","includes","split","title","subheader","createdDate","toLocaleString","CardContent","content","onChange","values","useState","commentArea","setCommentArea","width","height","maxHeight","overflow","map","Paper","m","p","elevation","CardActions","TextField","multiline","fullWidth","maxRows","value","e","target","variant","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","id","Date","Add","emptyTask","description","assignedMember","assignedCandidate","situation","comments","endDate","StyledIconButton","selected","icon","borderStyle","borderWidth","padding","margin","backgroundColor","React","setFieldValue","setSelected","marginTop","Typography","AddCircle","AccessTime","Check","Close","task","isOpen","setIsOpen","form","useFormik","initialValues","onSubmit","enableReinitialize","ActionModal","saveFunction","Grid","container","item","xs","md","List","ListItem","FormInput","label","type","handleChange","disabled","FormDropdown","candidates","candidate","datas","defaultValue","dataToValue","data","selectedId","hrmembers","member","LocalizationProvider","dateAdapter","AdapterDateFns","locale","frLocale","DatePicker","date","renderInput","params","push","isTaskModalOpen","setIsTaskModalOpen","undefined","taskModalTask","setTaskModalTask","CRUDTable","tasks","cellNames","keysToShow","setModalData","setIsDataModalOpen","customDataComponent","translatePrefix","Chip","i18n","getChipOfSituation","useEffect","pageRedux","payload","open","onClose","top","left","transform","border","action","htmlColor","startIcon","customComponent","currentPage","setCurrentPage","rowPerPage","setRowPerPage","selectedDatasId","setSelectedDatasId","boxShadow","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","checked","c","TableBody","slice","index","_selectedDatasId","splice","indexOf","key","Object","keys","path","obj","reduce","prev","curr","Button","BorderColor","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","Stack","ButtonGroup","DeleteForeverRounded","getValue","error","Boolean","htmlFor","city"],"sourceRoot":""}