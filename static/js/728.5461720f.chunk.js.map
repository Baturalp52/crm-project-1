{"version":3,"file":"static/js/728.5461720f.chunk.js","mappings":"yPAAaA,EAAiB,CAC5BC,GAAI,EACJC,KAAM,GACNC,QAAS,GACTC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,QAAS,GACTC,aAAc,GACdC,QAAS,GACTC,KAAM,GACNC,QAAS,GACTC,eAAWC,EACXC,cAAe,GACfC,aAAc,GACdC,aAAc,CAAEf,GAAI,EAAGC,KAAM,IAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,GACNU,UAAW,CAAEM,IAAK,EAAGC,IAAK,IAE5BC,OAAQ,GACRC,QAAS,GACTC,kBAAmB,EACnBC,YAAa,GACbC,SAAU,GACVC,UAAW,OACXC,SAAU,I,qCCzBZ,GAAeC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,0CACD,cCFJ,GAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,iHACD,SCFJ,GAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,2HACD,W,sECFJ,GAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,sBACD,U,UCiFJ,EAjE2B,SAACC,GAC1B,IAAQC,EAAoBD,EAApBC,MAAO9B,EAAa6B,EAAb7B,GAAI+B,EAASF,EAATE,KACnB,GAA8BC,EAAAA,EAAAA,UAASC,MAAMF,EAAKG,QAAQC,KAAK,IAA/D,eAAOC,EAAP,KAAgBC,EAAhB,KACA,OACE,UAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,EAAG,GAA9C,WACE,SAACC,EAAA,EAAD,CAAYC,MAAOd,KACnB,SAACe,EAAA,EAAD,WACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,GAAG,OAA/B,SACGlB,EAAKG,OAAS,EACXH,EAAKmB,KAAI,SAACC,EAAMC,GACd,OACE,SAACN,EAAA,GAAD,CAAkBK,MAAI,EAACE,GAAI,GAA3B,UACE,SAACC,EAAA,EAAD,CAEEC,QAAQ,WACRC,MAAOpB,EAAQgB,GAAS,QAAU,UAClCb,GAAI,CACFE,MAAO,QAETgB,WAAY,WACV,IAAIC,GAAQ,OAAOtB,GACnBsB,EAASN,GAAS,EAClBf,EAAWqB,IAEbC,YAAa,WACX,IAAID,GAAQ,OAAOtB,GACnBsB,EAASN,GAAS,EAClBf,EAAWqB,IAff,SAkBGtB,EAAQgB,IACP,iCACE,SAACQ,EAAD,IADF,aAIAT,GAtBGC,IAFEA,MA8Bf,eAGR,SAACS,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACEhC,MAAM,GACN9B,GAAIA,EACJuC,GAAI,CAAEwB,WAAY,OAAQtB,MAAO,QACjCuB,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,SAKRd,QAAQ,mB,4DC5ElB,GAAe7B,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,yJACD,QCFJ,GAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,0GACD,S,oBCFJ,GAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,mJACD,QCmFJ,EAtEmB,SAACC,GAClB,IACEyC,EAOEzC,EAPFyC,OACAC,EAME1C,EANF0C,UACAC,EAKE3C,EALF2C,SACAC,EAIE5C,EAJF4C,UACAC,EAGE7C,EAHF6C,OACAC,EAEE9C,EAFF8C,WACAC,EACE/C,EADF+C,cAEMC,GAAMC,EAAAA,EAAAA,GAAe,QAAS,CACpCC,UAAW,iCADLF,EAGR,OACE,SAACG,EAAA,EAAD,CACEC,KAAMX,EACNY,QAAS,WACPX,GAAU,IAHd,UAME,UAACY,EAAA,EAAD,CACE5C,GAAI,CACF4B,SAAU,WACViB,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,UAAW,SACXC,QAAS,mBACThD,OAAQ,OACRiD,QAAS,GATb,WAYE,SAACC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,QACTc,KAAK,OACLC,MAAOjB,EAAW1E,KAClBA,KAAK,aACL4F,SAAU,SAACC,GACT,IAAMC,GAAS,UAAQpB,GACvBoB,EAAU9F,KAAO6F,EAAEE,OAAOJ,MAC1BhB,EAAcmB,OAGlB,SAACL,EAAA,EAAD,CACE5D,MAAO+C,EAAE,eACTc,KAAK,OACLC,MAAOjB,EAAWsB,MAClBhG,KAAK,cACL4F,SAAU,SAACC,GACT,IAAMC,GAAS,UAAQpB,GACvBoB,EAAUE,MAAQH,EAAEE,OAAOJ,MAC3BhB,EAAcmB,OAGlB,UAACzC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN0C,QAAS,WACI,QAAXxB,EAAmBF,EAASG,GAAcF,EAAUE,GACpDJ,GAAU,IALd,WAQE,SAAC4B,EAAD,CAAM5D,GAAI,CAAE6D,GAAI,KACfvB,EAAE,uBCiBb,EA1Ee,SAAChD,GACd,IAAQgD,GAAMC,EAAAA,EAAAA,GAAe,QAAS,CACpCC,UAAW,iCADLF,EAGA1D,EAA6CU,EAA7CV,OAAQkF,EAAqCxE,EAArCwE,YAAa5B,EAAwB5C,EAAxB4C,UAAWD,EAAa3C,EAAb2C,SACxC,GAAgDxC,EAAAA,EAAAA,WAAkB,GAAlE,eAAOsE,EAAP,KAAyBC,EAAzB,KACA,GAAsCvE,EAAAA,EAAAA,UAAyB,OAA/D,eAAOwE,EAAP,KAAoBC,EAApB,KACA,GAAoCzE,EAAAA,EAAAA,UAAiB,CACnDhC,GAAI,EACJC,KAAM,GACNgG,MAAO,KAHT,eAAOtB,EAAP,KAAmBC,EAAnB,KAKA,OACE,iCACE,SAAC,EAAD,CACEN,OAAQgC,EACR/B,UAAWgC,EACX/B,SAAUA,EACVC,UAAWA,EACXC,OAAQ8B,EACR7B,WAAYA,EACZC,cAAeA,KAEjB,UAACtC,EAAA,EAAD,CAAMC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,EAAG,GAA9C,WACE,SAACC,EAAA,EAAD,CAAYC,MAAOiC,EAAE,YACrB,SAAChC,EAAA,EAAD,WACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAAf,SACG5B,EAAO+B,KAAI,SAACwD,EAAOtD,GAAR,OACV,UAACN,EAAA,GAAD,CAAkBK,MAAI,EAACE,GAAI,GAAId,GAAI,CAAEoE,QAAS,QAA9C,WACE,SAACC,EAAA,EAAD,CAAShE,MAAOiC,EAAE,SAAW6B,EAAMT,MAAOY,UAAU,MAApD,UACE,0BAAOH,EAAMzG,UAEf,SAACmE,EAAA,EAAD,CACE7B,GAAI,CAAEuE,GAAI,QACVZ,QAAS,WACPO,EAAe,QACf7B,EAAc8B,GACdH,GAAoB,IALxB,UAQE,SAACQ,EAAD,OAEF,SAAC3C,EAAA,EAAD,CACE7B,GAAI,CAAEuE,GAAI,GACVZ,QAAS,WACPG,EAAYK,IAHhB,UAME,SAACM,EAAD,QApBO5D,WA0BjB,SAACS,EAAA,EAAD,WACE,SAACP,EAAA,EAAD,CACE4C,QAAS,WACPO,EAAe,OACf7B,EAAc,CACZ5E,GAAI,EACJC,KAAM,GACNgG,MAAO,KAETM,GAAoB,IARxB,SAWG1B,EAAE,4B,UCwJf,EAxNuB,SAAChD,GAAiC,IAAD,EAC9CoF,EAAiCpF,EAAjCoF,UAAW3C,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,UACnBM,GAAMC,EAAAA,EAAAA,GAAe,QAAS,CAAEC,UAAW,qBAA3CF,EACJqC,GAAOC,EAAAA,EAAAA,IAAU,CACnBC,cAAeH,GAAS,UAAQA,IAAR,UAA2BlH,GACnDsH,SAAU,aACVC,oBAAoB,IAEtB,OACE,SAACC,EAAA,EAAD,CACEjD,OAAQA,EACRC,UAAWA,EACX3B,MAAOsE,EAAKM,OAAOxH,GAAK6E,EAAE,QAAUA,EAAE,OACtC4C,aAAc,aAJhB,UAME,UAAC3E,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGyC,QAAS,EAArC,WACE,UAAC3C,EAAA,GAAD,CAAMK,MAAI,EAACE,GAAI,GAAIqE,GAAI,EAAvB,WACE,SAAChC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,WACTc,KAAK,SACLC,MAAOsB,EAAKM,OAAOxH,GACnBC,KAAK,KACL4F,SAAUqB,EAAKS,aACfC,UAAQ,KAEV,SAAClC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,aACTc,KAAK,OACLC,MAAOsB,EAAKM,OAAOvH,KACnBA,KAAK,OACL4F,SAAUqB,EAAKS,gBAEjB,SAACjC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,gBACTc,KAAK,OACLC,MAAOsB,EAAKM,OAAOtH,QACnBD,KAAK,UACL4F,SAAUqB,EAAKS,gBAEjB,SAACjC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,gBACTc,KAAK,OACLC,MAAOsB,EAAKM,OAAOlH,QACnBL,KAAK,UACL4F,SAAUqB,EAAKS,gBAEjB,SAACjC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,qBACTc,KAAK,OACLC,MAAOsB,EAAKM,OAAOjH,aACnBN,KAAK,eACL4F,SAAUqB,EAAKS,gBAEjB,SAACjC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,gBACTc,KAAK,OACLC,MAAOsB,EAAKM,OAAOhH,QACnBP,KAAK,UACL4F,SAAUqB,EAAKS,gBAEjB,SAACjC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,aACTc,KAAK,OACLC,MAAOsB,EAAKM,OAAO/G,KACnBR,KAAK,OACL4F,SAAUqB,EAAKS,gBAEjB,SAACjC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,gBACTc,KAAK,OACLC,MAAOsB,EAAKM,OAAO9G,QACnBT,KAAK,UACL4F,SAAUqB,EAAKS,gBAEjB,SAACjC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,gBACTc,KAAK,OACLC,MAAOsB,EAAKM,OAAOpG,QACnBnB,KAAK,UACL4F,SAAUqB,EAAKS,gBAEjB,SAACjC,EAAA,EAAD,CACE5D,MAAO+C,EAAE,0BACTc,KAAK,SACLC,MAAOsB,EAAKM,OAAOnG,kBACnBpB,KAAK,oBACL4F,SAAUqB,EAAKS,gBAEjB,SAACE,EAAA,EAAD,CACE/F,MAAO+C,EAAE,sBACTiD,SAAU,SAAC3E,GAAD,OAAUA,EAAKnD,IACzB2H,aAAc,SAAC7B,GACboB,EAAKa,cACH,eACAC,EAAAA,EAAAA,QAAY,SAACC,GAAD,OAASA,EAAIjI,KAAO8F,EAAEE,OAAOJ,SAAO,KAGpDsC,MAAOF,EAAAA,EACPG,aAActD,EAAE,sBAChBuD,YAAa,SAACH,GAAD,gBAAYA,EAAIjI,GAAhB,cAAwBiI,EAAIhI,OACzCoI,cACEnB,EAAKM,OAAOzG,aAAemG,EAAKM,OAAOzG,aAAaf,GAAK,KAG7D,SAAC6H,EAAA,EAAD,CACE/F,MAAO+C,EAAE,0BACTiD,SAAU,SAAC3E,GAAD,OAAUA,EAAKnD,IACzB2H,aAAc,SAAC7B,GACboB,EAAKa,cACH,mBACAO,EAAAA,EAAAA,QAAiB,SAACC,GAAD,OAAaA,EAAQvI,KAAO8F,EAAEE,OAAOJ,SAAO,KAGjEsC,MAAOI,EAAAA,EACPH,aAActD,EAAE,0BAChBuD,YAAa,SAACG,GAAD,gBAAgBA,EAAQvI,GAAxB,cAAgCuI,EAAQtI,OACrDoI,cACEnB,EAAKM,OAAOxG,iBAAmBkG,EAAKM,OAAOxG,iBAAiBhB,GAAK,KAGrE,SAAC,EAAD,CACEmB,OAAQ+F,EAAKM,OAAOrG,QAAU,GAC9BqD,SAAU,SAACkC,GACT,IAAM8B,EAAatB,EAAKM,OAAOrG,QAAZ,OACX+F,EAAKM,OAAOrG,QAChB,GACJqH,EAAWC,KAAK/B,GAChBQ,EAAKa,cAAc,SAAUS,IAE/B/D,UAAW,SAACiC,GACV,IAAI8B,EAAatB,EAAKM,OAAOrG,QAAZ,OACT+F,EAAKM,OAAOrG,QAChB,IACJqH,EAAaA,EAAWE,QAAO,SAACvF,GAAD,OAAUA,EAAKnD,KAAO0G,EAAM1G,OAChDyI,KAAK/B,GAChBQ,EAAKa,cAAc,SAAUS,IAE/BnC,YAAa,SAACK,GACZ,IAAI8B,EAAatB,EAAKM,OAAOrG,QAAZ,OACT+F,EAAKM,OAAOrG,QAChB,GACJqH,EAAaA,EAAWE,QAAO,SAACvF,GAAD,OAAUA,EAAKnD,KAAO0G,EAAM1G,MAC3DkH,EAAKa,cAAc,SAAUS,UAInC,UAAC1F,EAAA,GAAD,CAAMK,MAAI,EAACE,GAAI,GAAIqE,GAAI,EAAvB,WACE,SAAC,EAAD,CACE5F,MAAO+C,EAAE,qBACT7E,GAAG,gBACH+B,KAAMmF,EAAKM,OAAOpH,gBAEpB,SAAC,EAAD,CACE0B,MAAO+C,EAAE,uBACT7E,GAAG,kBACH+B,KAAMmF,EAAKM,OAAOnH,iBAEpB,SAAC,EAAD,CACEyB,MAAO+C,EAAE,qBACT7E,GAAG,gBACH+B,KAAMmF,EAAKM,OAAO1G,gBAEpB,SAAC,EAAD,CACEgB,MAAO+C,EAAE,oBACT7E,GAAG,cACH+B,KAAMmF,EAAKM,OAAOlG,eAEpB,SAAC,EAAD,CACEQ,MAAO+C,EAAE,iBACT7E,GAAG,WACH+B,KAAMmF,EAAKM,OAAOjG,YAEpB,SAAC,EAAD,CACEO,MAAO+C,EAAE,iBACT7E,GAAG,WACH+B,KAAMmF,EAAKM,OAAO/F,eAGtB,UAACqB,EAAA,GAAD,CAAMK,MAAI,EAACE,GAAI,GAAIqE,GAAI,EAAvB,WACE,SAACiB,EAAA,EAAD,CACEC,WAAU,UAAE1B,EAAKM,OAAOxG,wBAAd,aAAE,EAA8BL,UAC1CkI,YAAa3B,EAAKM,OAAO7G,UACzBmI,SAAU,SAACC,GACT7B,EAAKa,cAAc,YAAagB,MAGnC7B,EAAKM,OAAOxH,IACX,UAACgJ,EAAA,EAAD,CAAOzG,GAAI,CAAEG,EAAG,GAAKuG,UAAU,MAAMjG,QAAS,EAA9C,WACE,UAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,WACE,SAAC0F,EAAA,EAAD,IADF,IACmBrE,EAAE,wBAErB,UAACvB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAlC,WACE,SAAC2F,EAAD,IADF,IACkBtE,EAAE,6BAItB,UAACvB,EAAA,EAAD,CAAQf,GAAI,CAAEG,EAAG,GAAKa,QAAQ,YAAYC,MAAM,YAAhD,WACE,SAAC2F,EAAD,IADF,IACkBtE,EAAE,qBAGrBuE,QAAQlC,EAAKM,OAAOxH,MACnB,UAACgJ,EAAA,EAAD,CAAOzG,GAAI,CAAEG,EAAG,GAAKuG,UAAU,MAAMjG,QAAS,EAA9C,WACE,UAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,WACE,SAAC6F,EAAD,CAAO9G,GAAI,CAAE6D,GAAI,KADnB,IAC4BvB,EAAE,iBAE9B,UAACvB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,WACE,SAAC8F,EAAD,CAAS/G,GAAI,CAAE6D,GAAI,KADrB,IAC8BvB,EAAE,2B,oBCtO9C,EADkB,CAAE5D,IAAK,kBAAmBC,IAAK,oBCiFjD,EArEwB,WACtB,IAAQ2D,GAAMC,EAAAA,EAAAA,GAAe,QAAS,CAAEC,UAAW,qBAA3CF,EACR,GACE7C,EAAAA,EAAAA,WAAkB,GADpB,eAAOuH,EAAP,KAA6BC,EAA7B,KAEA,GAA8DxH,EAAAA,EAAAA,eAE5DpB,GAFF,eAAO6I,EAAP,KAAgCC,EAAhC,KAGA,GAA4C1H,EAAAA,EAAAA,UAAS2H,EAAAA,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEMC,GAAa3C,EAAAA,EAAAA,IAAU,CAC3BC,cAAe,CACb2C,OAAQ,IAEV1C,SAAU,SAACvB,GACT,IAAMkE,EAASC,OAAOC,KAAKpE,EAAEiE,QAAQI,QACnC,SAACR,EAAiBS,GAChB,IAAMC,EAAaC,EAAQ5B,QAAO,SAACA,GAAD,OAAYA,EAAOzI,OAASmK,KAAK,GAChEC,WACH,GAAIA,EACF,OAAOV,EAAWjB,OAAO2B,GAEzB,IAAME,EAAK,IAAIC,OACb,KAAO1E,EAAEiE,OAAOK,GAAKxE,MAAM6E,cAAgB,MAE7C,OAAOd,EAAWjB,QAAO,SAAC5C,GAAD,QACvBA,EAAEsE,IAAOG,EAAGG,KAAK5E,EAAEsE,GAAKK,oBAI9Bd,EAAAA,GAEFE,EAAkBG,IAEpB1C,oBAAoB,IAGhBgD,EAAqB,CACzB,CACErK,KAAM,WACN6B,MAAO+C,EAAE,2BACTwF,WAAY,SAACpD,GAEX,OADU0D,EAAAA,EAAAA,GAAkBC,EAAW3D,EAAUtG,WACtCmJ,EAAWtC,OAAOuC,OAAOc,WAGxC,CAAE5K,KAAM,UAAW6B,MAAO+C,EAAE,2BAC5B,CAAE5E,KAAM,WAAY6B,MAAO+C,EAAE,4BAC7B,CAAE5E,KAAM,eAAgB6B,MAAO+C,EAAE,wBAGnC,OACE,iCACE,SAAC,EAAD,CACEoC,UAAWwC,EACXnF,OAAQiF,EACRhF,UAAWiF,KAEb,SAACsB,EAAA,EAAD,CACE/I,KAAM6H,EACNmB,UAAW,CAAClG,EAAE,MAAOA,EAAE,QAASA,EAAE,WAAYA,EAAE,SAChDmG,WAAY,CAAC,KAAM,OAAQ,UAAW,QACtCC,aAAcvB,EACdwB,mBAAoB1B,EACpBM,WAAYA,EACZQ,QAASA,QC5DjB,EAZmB,WASjB,OARAa,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,SAAmB,CACjBzF,KAAM,eACN0F,QAAS,CACPzI,MAAO,oBAIN,SAAC,EAAD,M,6IC4DT,IApDoB,SAACf,GACnB,IAAQyC,EAAqDzC,EAArDyC,OAAQC,EAA6C1C,EAA7C0C,UAAW3B,EAAkCf,EAAlCe,MAAO6E,EAA2B5F,EAA3B4F,aAAc6D,EAAazJ,EAAbyJ,SACxCzG,GAAMC,EAAAA,EAAAA,GAAe,aAAc,CAAEC,UAAW,gBAAhDF,EACR,OACE,SAAC,IAAD,CAAOI,KAAMX,EAAQY,QAAS,kBAAMX,GAAU,IAA9C,UACE,UAAC,IAAD,CACEhC,GAAI,CACF4B,SAAU,WACViB,IAAK,MACLC,KAAM,MACNC,UAAW,wBACX7C,MAAO,MACP8I,OAAQ,MACR/F,QAAS,mBACThD,OAAQ,QATZ,WAYE,SAAC,IAAD,CACED,GAAI,CAAEiJ,EAAG,EAAGhG,QAAS,eAAgBhC,MAAO,SAC5CZ,MAAOA,EACP8B,QACE,SAAC,IAAD,CACEwB,QAAS,WACP3B,GAAU,IAFd,UAKE,SAAC,IAAD,CAAckH,UAAU,eAI9B,SAAC,IAAD,CAAalJ,GAAI,CAAEgJ,OAAQ,MAAOG,SAAU,QAA5C,SACGJ,KAEH,SAAC,IAAD,WACE,SAAC,IAAD,CACE/I,GAAI,CAAEC,OAAQ,kBAAmBuB,WAAY,QAC7C4H,WAAW,SAAC,IAAD,IACXnI,MAAM,UACND,QAAQ,YACR2C,QAAS,WACP3B,GAAU,GACVkD,KAPJ,SAUG5C,EAAE,mB,2SC1Cf,EAlBoB,SAAChD,GACnB,IAAQgD,GAAMC,EAAAA,EAAAA,GAAe,aAAc,CAAEC,UAAW,gBAAhDF,EACAgB,EAAahE,EAAbgE,SACR,OACE,SAAC+F,EAAA,EAAD,CACEjG,KAAK,SACLE,SAAUA,EACVgG,gBACE,SAAC3H,EAAA,EAAD,CAAgBC,SAAS,QAAzB,UACE,SAAC2H,EAAA,EAAD,MAGJC,YAAalH,EAAE,eACftC,GAAI,CAAEE,MAAO,OAAQQ,GAAI,W,iDCkE/B,EAtE4B,SAACpB,GAM3B,IAAQyC,EAA2CzC,EAA3CyC,OAAQC,EAAmC1C,EAAnC0C,UAAW+F,EAAwBzI,EAAxByI,QAASR,EAAejI,EAAfiI,WACpC,GAA4B9H,EAAAA,EAAAA,UAAS8H,EAAWtC,OAAOuC,QAAvD,eAAOA,EAAP,KAAeiC,EAAf,KACQnH,GAAMC,EAAAA,EAAAA,GAAe,aAAc,CACzCC,UAAW,oCADLF,EAGR,OACE,SAACG,EAAA,EAAD,CAAOC,KAAMX,EAAQY,QAAS,kBAAMX,GAAU,IAA9C,UACE,UAAC0H,EAAA,EAAD,CACE1J,GAAI,CACF4B,SAAU,WACViB,IAAK,MACLC,KAAM,MACNC,UAAW,wBACX4G,SAAU,MACVC,UAAW,MACX3G,QAAS,mBACThD,OAAQ,OACRiD,QAAS,EACTkB,QAAS,OACTyF,cAAe,UAZnB,WAeE,SAACpD,EAAA,EAAD,CAAO/F,GAAG,OAAV,UACE,SAACoJ,EAAA,EAAD,CAAY9I,QAAQ,KAAK+I,UAAU,KAAnC,SACGzH,EAAE,cAGP,SAAC/B,EAAA,GAAD,CAAMC,WAAS,EAAC4D,QAAQ,OAAOlE,MAAM,OAAO8C,UAAU,SAAtD,SACG+E,EAAQpH,KAAI,SAACwF,EAAQtF,GAAT,OACX,SAACN,EAAA,GAAD,CAAMK,MAAI,EAACE,GAAI,GAAIqE,GAAI,EAAvB,UACE,SAAC5D,EAAA,EAAD,CACEhC,MAAO4G,EAAO5G,MACd6D,KAAK,OACL1F,KAAMyI,EAAOzI,KACb2F,MAAOmE,EAAOrB,EAAOzI,MACrBsD,QAAQ,WACRgJ,OAAO,QACP1G,SAAU,SAACC,GACT,IAAM0G,GAAO,UAAQzC,GACrByC,EAAQ9D,EAAOzI,MAAQ6F,EAAEE,OAAOJ,MAChCoG,EAAUQ,OAXepJ,SAiBnC,SAAC4F,EAAA,EAAD,CAAOyD,GAAG,OAAO3F,GAAG,OAApB,UACE,SAACxD,EAAA,EAAD,CACEC,QAAQ,YACR2C,QAAS,WACP3B,GAAU,GACVuF,EAAW/B,cAAc,SAAUgC,GACnCD,EAAW4C,cAEbf,WAAW,SAACG,EAAA,EAAD,IAPb,SASGjH,EAAE,oBCHf,EA7DkB,SAAChD,GACjB,IAAQiI,EAAwBjI,EAAxBiI,WAAYQ,EAAYzI,EAAZyI,QACpB,GAAkCtI,EAAAA,EAAAA,UAAiB,IAAnD,eAAO2K,EAAP,KAAkBC,EAAlB,KACA,GACE5K,EAAAA,EAAAA,WAAkB,GADpB,eAAO6K,EAAP,KAAkCC,EAAlC,KAEQjI,GAAMC,EAAAA,EAAAA,GAAe,aAAc,CACzCC,UAAW,yBADLF,EAIR,OACE,gCACGuE,QAAQkB,KACP,SAAC,EAAD,CACEhG,OAAQuI,EACRtI,UAAWuI,EACXhD,WAAYA,EACZQ,QAASA,GAAoB,MAGjC,UAACxH,EAAA,GAAD,CACEC,WAAS,EACTC,QAAS,EACTT,GAAI,CAAE6D,GAAI,OAAQ3D,MAAO,MAAOqE,GAAI,EAAGiG,WAAY,YAHrD,WAKE,SAACjK,EAAA,GAAD,CAAMK,MAAI,EAACE,GAAI,EAAGd,GAAI,CAAEoE,QAAS,QAAjC,UACE,SAAC,EAAD,CACEd,SAAU,SAACC,GACT8G,EAAa9G,EAAEE,OAAOJ,aAI5B,SAAC9C,EAAA,GAAD,CAAMK,MAAI,EAACE,GAAI,EAAf,UACE,SAACC,EAAA,EAAD,CACEf,GAAI,CAAEuE,GAAI,QACV6E,WAAW,SAACG,EAAA,EAAD,IACX5F,QAAS,WACP4D,EAAW/B,cAAc,SAAU,CAAE9H,KAAM0M,IAC3C7C,EAAW4C,cALf,SAQG7H,EAAE,cAGNuE,QAAQkB,KACP,SAACxH,EAAA,GAAD,CAAMK,MAAI,EAACE,GAAI,EAAf,UACE,SAACC,EAAA,EAAD,CACEf,GAAI,CAAEuE,GAAI,QACV6E,WAAW,SAACqB,EAAA,EAAD,IACX9G,QAAS,WACP4G,GAA6B,IAJjC,SAOGjI,EAAE,8BC6HjB,EA9JkB,SAChBhD,GAEA,IACEE,EAQEF,EARFE,KACAgJ,EAOElJ,EAPFkJ,UACAE,EAMEpJ,EANFoJ,aACAD,EAKEnJ,EALFmJ,WACAE,EAIErJ,EAJFqJ,mBACA+B,EAGEpL,EAHFoL,oBACAnD,EAEEjI,EAFFiI,WACAQ,EACEzI,EADFyI,QAEE4C,EAAkBD,GAA4C,GAE1DpI,GAAMC,EAAAA,EAAAA,GAAe,aAAc,CAAEC,UAAW,cAAhDF,EAER,GAAsC7C,EAAAA,EAAAA,UAAiB,GAAvD,eAAOmL,EAAP,KAAoBC,EAApB,KACA,GAAoCpL,EAAAA,EAAAA,UAAiB,IAArD,eAAOqL,EAAP,KAAmBC,EAAnB,KACA,GAA8CtL,EAAAA,EAAAA,UAAmB,IAAjE,eAAOuL,EAAP,KAAwBC,EAAxB,KACA,OACE,UAACvB,EAAA,EAAD,CACE1J,GAAI,CACFE,MAAO,oBACPsB,WAAY,OACZ2H,SAAU,SACV+B,UAAW,QALf,UAQGrE,QAAQU,KACP,SAAC,EAAD,CAAWA,WAAYA,EAAYQ,QAASA,KAE9C,SAACoD,EAAA,EAAD,CAAgBnL,GAAI,CAAEoL,UAAW,SAAjC,UACE,UAACC,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,WACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACErI,MAAM,MACNsI,QAASnM,EAAKG,SAAWqL,EAAgBrL,OACzC2D,SAAU,SAACC,GACLA,EAAEE,OAAOkI,QACXV,EAAmBzL,EAAKmB,KAAI,SAACiL,GAAD,OAAiBA,EAAEnO,OAC1CwN,EAAmB,SAI/BzC,EAAU7H,KAAI,SAACjD,EAAMmD,GAAP,OACb,SAAC4K,EAAA,EAAD,UAAwB/N,GAARmD,OAElB,SAAC4K,EAAA,EAAD,UAGJ,SAACI,EAAA,EAAD,UACGrM,EAAKG,OAAS,EACbH,EACGsM,MAAMlB,EAAcE,GAAaF,EAAc,GAAKE,GACpDnK,KAAI,SAACC,EAAMC,GAAP,OACH,UAAC2K,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACErI,MAAOzC,EAAKnD,GACZkO,QAASX,EAAgBe,SAASnL,EAAKnD,IACvC6F,SAAU,SAACC,GACT,GAAIA,EAAEE,OAAOkI,QAAS,CACpB,IAAMK,GAAgB,OAAOhB,GAC7BgB,EAAiB9F,KAAKtF,EAAKnD,IAC3BwN,EAAmBe,OACd,CACL,IAAMA,GAAgB,OAAOhB,GAC7BgB,EAAiBC,OACfD,EAAiBE,QAAQtL,EAAKnD,IAC9B,GAEFwN,EAAmBe,QAfXnL,GAoBf4H,EAAW9H,KAAI,SAACkH,EAAKhH,GAAN,OACd,SAAC4K,EAAA,EAAD,UACG/D,OAAOC,KAAKgD,GAAiBoB,SAASlE,GACnC8C,EAAgB9C,GAAKjH,EAAKiH,IAC1BA,EAAIkE,SAAS,MClHjBI,EDmHYtE,ECnHEuE,EDmHGxL,EClHhCuL,EAAKE,MAAM,KAAKzE,QAAO,SAAC0E,EAAWC,GACxC,OAAOD,EAAOA,EAAKC,GAA6B,OAC/CH,IDiHuBxL,EAAKiH,IALKhH,GC/G/B,IAAiBsL,EAAcC,MDwHlB,SAACX,EAAA,EAAD,WACE,SAAC1K,EAAA,EAAD,CACEf,GAAI,CAAEC,OAAQ,mBACdgB,MAAM,UACND,QAAQ,YACR2C,QAAS,WACP+E,EAAa9H,GACb+H,GAAmB,IANvB,UASE,SAAC6D,EAAA,EAAD,UAzCS3L,OA+CnB,SAAC2K,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAWgB,QAASjE,EAAU7I,OAAS,EAAG+M,MAAM,SAAhD,SACGpK,EAAE,uBAOf,SAACqK,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7B7C,UAAU,MACV8C,MAAOrN,EAAKG,OACZmN,YAAahC,EACbiC,KAAMnC,EACNoC,aAAc,SAACzJ,EAAY0J,GACzBpC,EAAeoC,IAEjBC,oBAAqB,SAAC3J,GACpBwH,GAAexH,EAAEE,OAAOJ,OACxBwH,EAAe,OAGnB,SAACpE,EAAA,EAAD,CAAOvD,QAAS,EAAhB,UACE,UAACiK,EAAA,EAAD,CACEnN,GAAI,CAAEwB,WAAY,QAClB,aAAW,gCACXR,QAAQ,YAHV,WAKE,SAACD,EAAA,EAAD,CACEf,GAAI,CAAEC,OAAQ,mBACdmJ,WAAW,SAACtH,EAAA,EAAD,IACXb,MAAM,UACN0C,QAAS,WACP+E,OAAarK,GACbsK,GAAmB,IANvB,SASGrG,EAAE,UAEL,SAACvB,EAAA,EAAD,CACEf,GAAI,CAAEC,OAAQ,mBACdmJ,WAAW,SAACgE,EAAA,EAAD,IACXnM,MAAM,QAHR,SAKGqB,EAAE,sB,8FE1Hf,IArCqB,SACnBhD,GAEA,IACEC,EAUED,EAVFC,MACA6F,EASE9F,EATF8F,aACAQ,EAQEtG,EARFsG,aACAD,EAOErG,EAPFqG,MACAE,EAMEvG,EANFuG,YACAC,EAKExG,EALFwG,cACAT,EAIE/F,EAJF+F,SAEAE,GAEEjG,EAHFY,MAGEZ,EAFFiG,UACAvF,EACEV,EADFU,GAEF,OACE,UAAC,IAAD,CACEgB,QAAQ,WACRqE,SAAUA,EACVrF,IAAE,QAAIE,MAAO,OAAiBC,EAAG,GAAMH,GAHzC,WAKE,SAAC,IAAD,UAAaT,KAEb,UAAC,IAAD,CAAQ8D,MAAOyC,EAAevG,MAAOA,EAAO+D,SAAU8B,EAAtD,WACE,SAAC,IAAD,CAAU/B,MAAO,EAAjB,UACE,wBAAKuC,MAEND,EAAMhF,KAAI,SAACnB,EAAgBqB,GAAjB,OACT,SAAC,IAAD,CAAsBwC,MAAOkC,EAAS/F,GAAtC,SACGqG,EAAYrG,IADAqB,c,uECrBzB,IAjBkB,SAACvB,GACjB,IAAQC,EAAiDD,EAAjDC,MAAO6D,EAA0C9D,EAA1C8D,KAAMC,EAAoC/D,EAApC+D,MAAO3F,EAA6B4B,EAA7B5B,KAAM4F,EAAuBhE,EAAvBgE,SAAU+B,EAAa/F,EAAb+F,SAC5C,OACE,UAAC,IAAD,CAAagI,OAAQxG,QAAQxD,GAAQrD,GAAI,CAAEE,MAAO,OAAQC,EAAG,GAA7D,WACE,SAAC,IAAD,CAAYmN,QAAS5P,EAArB,SAA4B6B,KAC5B,SAAC,IAAD,CACE9B,GAAIC,EACJA,KAAMA,EACN2F,MAAOA,EACPD,KAAMA,EACNE,SAAUA,EACV+B,SAAUA,S,8HCiBlB,EArCuB,SAAC/F,GACtB,IAAQsC,EAAsCtC,EAAtCsC,SAAU2L,EAA4BjO,EAA5BiO,YAAaC,EAAelO,EAAfkO,YACnBC,EAAAA,EAAAA,IAAa,CACvBC,MADuB,SACjBnK,GACJgK,EAAYhK,EAAEoK,QACdH,OAKJ,IAAMI,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAgBC,EAAAA,EAAAA,UACpB,iBAAO,CACLC,QADK,WAEH,IAAMC,EAASL,EAAUM,QACX,MAAVD,IACFV,EAAYU,EAAOE,aACnBX,SAIN,CAACD,EAAaC,IAEhB,OACE,8BACG5L,IACC,SAACwM,EAAA,EAAD,CACEC,IAAKT,EACLE,cAAeA,EACfQ,WAAS,EACT1M,SAAUA,O,kDC4BpB,EA9CkB,SAACtC,GACjB,IAAQ+G,EAAoD/G,EAApD+G,WAAYC,EAAwChH,EAAxCgH,YAAaiI,EAA2BjP,EAA3BiP,aAAchI,EAAajH,EAAbiH,SACvCjE,GAAMC,EAAAA,EAAAA,GAAe,aAAc,CAAEC,UAAW,cAAhDF,EACR,GAA8C7C,EAAAA,EAAAA,UAC5C4G,GAAcC,GADhB,eAAOkI,EAAP,KAAwBC,EAAxB,KAGA,GAAgChP,EAAAA,EAAAA,UAA0B,GAA1D,eAAO6I,EAAP,KAAiBoG,EAAjB,KAEA,OACE,UAAC3O,EAAA,EAAD,CAAMC,GAAI,CAAEG,EAAG,GAAf,WACIoO,IAAgB,SAACnO,EAAA,EAAD,CAAYC,MAAK,UAAKiI,EAAL,YAAiBhG,EAAE,aACtD,SAAChC,EAAA,EAAD,WACE,UAACqO,EAAA,EAAD,CACEC,OAAQvI,EACRwI,KAAM,GACNpR,GAAG,MACHqR,MAAO,CAAE9F,OAAQ,QAAS9I,MAAO,OAAQe,MAAO,SAChD8N,iBAAiB,EALnB,WAOE,SAACC,EAAA,EAAD,CACEC,YAAY,GACZC,IAAI,uDAELrI,QAAQR,IAAekI,KACtB,SAACH,EAAA,EAAD,CAAQxM,SAAUyE,KAEpB,SAAC,EAAD,CACEzE,SAAU4M,EACVjB,YAAakB,EACbjB,WAAY,WACV,GAAIgB,EAAiB,CACnB,IAAMW,GAAO/G,EAAAA,EAAAA,GACX/B,EACAmI,GAEFE,EAAYS,EAAKC,QAAQ,IACzB7I,EAASiI,iB,qBCnDV,SAASpG,EACtBiH,EACAC,GAEA,IACMC,EAAOC,EAAMF,EAAO5Q,IAAM2Q,EAAO3Q,KACjC+Q,EAAOD,EAAMF,EAAO3Q,IAAM0Q,EAAO1Q,KACjC+Q,EAAOF,EAAMH,EAAO3Q,KACpBiR,EAAOH,EAAMF,EAAO5Q,KAEpBkR,EACJC,KAAKC,IAAIP,EAAO,GAAKM,KAAKC,IAAIP,EAAO,GACrCM,KAAKC,IAAIL,EAAO,GAAKI,KAAKC,IAAIL,EAAO,GAAKI,KAAKE,IAAIL,GAAQG,KAAKE,IAAIJ,GAGtE,OAXU,MASA,EAAIE,KAAKG,MAAMH,KAAKI,KAAKL,GAAIC,KAAKI,KAAK,EAAIL,KAMvD,SAASJ,EAAMU,GACb,OAAQA,EAAQL,KAAKM,GAAM,I,oDC+U7B,IAjWiC,CAC/B,CACE1S,GAAI,EACJC,KAAM,UACNC,QAAS,cACTO,KAAM,SACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,IAAK,YAGTC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,EACJC,KAAM,UACNC,QAAS,YACTO,KAAM,QACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,gBACNQ,KAAM,QACNE,UAAW,CACTM,IAAK,UACLC,IAAK,WAGTC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,EACJC,KAAM,UACNC,QAAS,YACTO,KAAM,SACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,KAAM,UAGVC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,EACJC,KAAM,UACNC,QAAS,YACTO,KAAM,WACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,mBACNQ,KAAM,WACNE,UAAW,CACTM,IAAK,SACLC,KAAM,YAGVC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,EACJC,KAAM,UACNC,QAAS,YACTO,KAAM,SACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,IAAK,YAGTC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,EACJC,KAAM,UACNC,QAAS,YACTO,KAAM,SACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,IAAK,YAGTC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,EACJC,KAAM,UACNC,QAAS,YACTO,KAAM,QACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,gBACNQ,KAAM,QACNE,UAAW,CACTM,IAAK,UACLC,IAAK,WAGTC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,EACJC,KAAM,UACNC,QAAS,YACTO,KAAM,SACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,KAAM,UAGVC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,EACJC,KAAM,UACNC,QAAS,YACTO,KAAM,WACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,mBACNQ,KAAM,WACNE,UAAW,CACTM,IAAK,SACLC,KAAM,YAGVC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,YAExB,CACEzB,GAAI,GACJC,KAAM,UACNC,QAAS,YACTO,KAAM,SACNN,UAAW,UACXC,aAAc,CAAC,UAAW,WAC1BC,cAAe,CAAC,UAAW,WAC3BC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTE,QAAS,UACTC,UAAW,CAAEM,IAAK,SAAUC,IAAK,UACjCL,cAAe,CAAEb,GAAI,EAAGC,KAAM,UAAWC,QAAS,UAClDY,aAAc,CAAC,UAAW,WAC1BC,aAAc,CAAEf,GAAI,EAAGC,KAAM,eAC7Be,iBAAkB,CAChBhB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,IAAK,YAGTC,OAAQ,CACN,CAAEnB,GAAI,EAAGC,KAAM,UAAWgG,MAAO,SACjC,CAAEjG,GAAI,EAAGC,KAAM,UAAWgG,MAAO,UAEnC7E,QAAS,UACTC,kBAAmB,IACnBC,YAAa,CAAC,UAAW,WACzBC,SAAU,CAAC,UAAW,WACtBE,SAAU,CAAC,UAAW,c,mBC7S1B,IAhD8B,CAC5B,CACEzB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,IAAK,YAGT,CACElB,GAAI,EACJC,KAAM,gBACNQ,KAAM,QACNE,UAAW,CACTM,IAAK,UACLC,IAAK,WAGT,CACElB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,KAAM,UAGV,CACElB,GAAI,EACJC,KAAM,mBACNQ,KAAM,WACNE,UAAW,CACTM,IAAK,SACLC,KAAM,YAGV,CACElB,GAAI,EACJC,KAAM,iBACNQ,KAAM,SACNE,UAAW,CACTM,IAAK,UACLC,IAAK,c,mBCrBX,IAtBqB,CACnB,CAAElB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,EAAGC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC5D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB,KAC7D,CAAErB,GAAI,GAAIC,KAAM,UAAW0S,WAAY,EAAGtR,kBAAmB","sources":["Pages/Candidates/emptyCandidate.ts","../node_modules/@mui/icons-material/esm/FileUpload.js","../node_modules/@mui/icons-material/esm/Email.js","../node_modules/@mui/icons-material/esm/Message.js","../node_modules/@mui/icons-material/esm/Remove.js","components/FormMultiTextInput/index.tsx","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Clear.js","../node_modules/@mui/icons-material/esm/Save.js","Pages/Candidates/CandidateModal/SkillModal.tsx","Pages/Candidates/CandidateModal/Skills.tsx","Pages/Candidates/CandidateModal/index.tsx","mockData/coords.ts","Pages/Candidates/CandidatesTable.tsx","Pages/Candidates/index.tsx","components/ActionModal/index.tsx","components/SearchInput/index.tsx","components/CRUDTable/AdvancedSearchModal/index.tsx","components/CRUDTable/SearchBar/index.tsx","components/CRUDTable/index.tsx","components/CRUDTable/helpers.ts","components/FormDropdown/index.tsx","components/FormInput/index.tsx","components/MapsInput/LocationMarker.tsx","components/MapsInput/index.tsx","helpers/calculateDistance.ts","mockData/candidates.ts","mockData/companies.ts","mockData/jobs.ts"],"sourcesContent":["export const emptyCandidate = {\r\n  id: 0,\r\n  name: \"\",\r\n  surname: \"\",\r\n  CVAddress: \"\",\r\n  phoneNumbers: [],\r\n  emailAdresses: [],\r\n  address: \"\",\r\n  extraAddress: \"\",\r\n  zipCode: \"\",\r\n  city: \"\",\r\n  country: \"\",\r\n  mapsCoord: undefined,\r\n  creatorMember: {},\r\n  previousJobs: [],\r\n  requestedJob: { id: 0, name: \"\" },\r\n  requestedCompany: {\r\n    id: 1,\r\n    name: \"\",\r\n    mapsCoord: { lat: 0, lng: 0 },\r\n  },\r\n  skills: [],\r\n  comment: \"\",\r\n  salaryExpectation: 0,\r\n  departments: [],\r\n  keywords: [],\r\n  situation: \"free\",\r\n  diplomas: [],\r\n};\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\"\n}), 'FileUpload');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n}), 'Message');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  InputAdornment,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Add, Remove } from \"@mui/icons-material\";\r\n\r\ninterface IFormMultiTextInputProps {\r\n  label: string;\r\n  id: string;\r\n  data: string[];\r\n}\r\n\r\nconst FormMultiTextInput = (props: IFormMultiTextInputProps) => {\r\n  const { label, id, data } = props;\r\n  const [hovered, setHovered] = useState(Array(data.length).fill(0));\r\n  return (\r\n    <Card sx={{ border: \"none\", width: \"100%\", m: 1 }}>\r\n      <CardHeader title={label} />\r\n      <CardContent>\r\n        <Grid container spacing={2} mx=\"auto\">\r\n          {data.length > 0\r\n            ? data.map((item, index) => {\r\n                return (\r\n                  <Grid key={index} item xs={12}>\r\n                    <Button\r\n                      key={index}\r\n                      variant=\"outlined\"\r\n                      color={hovered[index] ? \"error\" : \"inherit\"}\r\n                      sx={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        let cHovered = [...hovered];\r\n                        cHovered[index] = 0;\r\n                        setHovered(cHovered);\r\n                      }}\r\n                      onMouseOver={() => {\r\n                        let cHovered = [...hovered];\r\n                        cHovered[index] = 1;\r\n                        setHovered(cHovered);\r\n                      }}\r\n                    >\r\n                      {hovered[index] ? (\r\n                        <>\r\n                          <Remove /> Delete\r\n                        </>\r\n                      ) : (\r\n                        item\r\n                      )}\r\n                    </Button>\r\n                  </Grid>\r\n                );\r\n              })\r\n            : \"No data\"}\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <TextField\r\n          label=\"\"\r\n          id={id}\r\n          sx={{ marginLeft: \"auto\", width: \"100%\" }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton>\r\n                  <Add />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FormMultiTextInput;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import React from \"react\";\r\nimport { Box, Button, Modal } from \"@mui/material\";\r\nimport { ISkill } from \"../../../interfaces/Skill\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FormInput from \"../../../components/FormInput\";\r\nimport { Save } from \"@mui/icons-material\";\r\n\r\ninterface ISkillModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: (state: boolean) => void;\r\n  addSkill: (skill: ISkill) => void;\r\n  editSkill: (skill: ISkill) => void;\r\n  action: \"add\" | \"edit\";\r\n  modalSkill: ISkill;\r\n  setModalSkill: (skill: ISkill) => void;\r\n}\r\n\r\nconst SkillModal = (props: ISkillModalProps) => {\r\n  const {\r\n    isOpen,\r\n    setIsOpen,\r\n    addSkill,\r\n    editSkill,\r\n    action,\r\n    modalSkill,\r\n    setModalSkill,\r\n  } = props;\r\n  const { t } = useTranslation(\"pages\", {\r\n    keyPrefix: \"candidates.modal.form.skills\",\r\n  });\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={() => {\r\n        setIsOpen(false);\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          textAlign: \"center\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          padding: 2,\r\n        }}\r\n      >\r\n        <FormInput\r\n          label={t(\"name\")}\r\n          type=\"text\"\r\n          value={modalSkill.name}\r\n          name=\"skill-name\"\r\n          onChange={(e) => {\r\n            const prevSkill = { ...modalSkill };\r\n            prevSkill.name = e.target.value;\r\n            setModalSkill(prevSkill);\r\n          }}\r\n        />\r\n        <FormInput\r\n          label={t(\"skill-level\")}\r\n          type=\"text\"\r\n          value={modalSkill.level}\r\n          name=\"skill-level\"\r\n          onChange={(e) => {\r\n            const prevSkill = { ...modalSkill };\r\n            prevSkill.level = e.target.value;\r\n            setModalSkill(prevSkill);\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          onClick={() => {\r\n            action === \"add\" ? addSkill(modalSkill) : editSkill(modalSkill);\r\n            setIsOpen(false);\r\n          }}\r\n        >\r\n          <Save sx={{ mr: 1 }} />\r\n          {t(\"save-skill\")}\r\n        </Button>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SkillModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ISkill } from \"../../../interfaces/Skill\";\r\nimport { Clear, Edit } from \"@mui/icons-material\";\r\nimport SkillModal from \"./SkillModal\";\r\n\r\ninterface ISkillsProps {\r\n  skills: ISkill[];\r\n  addSkill: (skill: ISkill) => void;\r\n  removeSkill: (skill: ISkill) => void;\r\n  editSkill: (skill: ISkill) => void;\r\n}\r\n\r\nconst Skills = (props: ISkillsProps) => {\r\n  const { t } = useTranslation(\"pages\", {\r\n    keyPrefix: \"candidates.modal.form.skills\",\r\n  });\r\n  const { skills, removeSkill, editSkill, addSkill } = props;\r\n  const [isSkillModalOpen, setIsSkillModalOpen] = useState<boolean>(false);\r\n  const [modalAction, setModalAction] = useState<\"add\" | \"edit\">(\"add\");\r\n  const [modalSkill, setModalSkill] = useState<ISkill>({\r\n    id: 0,\r\n    name: \"\",\r\n    level: \"\",\r\n  });\r\n  return (\r\n    <>\r\n      <SkillModal\r\n        isOpen={isSkillModalOpen}\r\n        setIsOpen={setIsSkillModalOpen}\r\n        addSkill={addSkill}\r\n        editSkill={editSkill}\r\n        action={modalAction}\r\n        modalSkill={modalSkill}\r\n        setModalSkill={setModalSkill}\r\n      />\r\n      <Card sx={{ border: \"none\", width: \"100%\", m: 1 }}>\r\n        <CardHeader title={t(\"title\")} />\r\n        <CardContent>\r\n          <Grid container>\r\n            {skills.map((skill, index) => (\r\n              <Grid key={index} item xs={12} sx={{ display: \"flex\" }}>\r\n                <Tooltip title={t(\"level\") + skill.level} placement=\"top\">\r\n                  <span>{skill.name}</span>\r\n                </Tooltip>\r\n                <IconButton\r\n                  sx={{ ml: \"auto\" }}\r\n                  onClick={() => {\r\n                    setModalAction(\"edit\");\r\n                    setModalSkill(skill);\r\n                    setIsSkillModalOpen(true);\r\n                  }}\r\n                >\r\n                  <Edit />\r\n                </IconButton>\r\n                <IconButton\r\n                  sx={{ ml: 1 }}\r\n                  onClick={() => {\r\n                    removeSkill(skill);\r\n                  }}\r\n                >\r\n                  <Clear />\r\n                </IconButton>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              setModalAction(\"add\");\r\n              setModalSkill({\r\n                id: 0,\r\n                name: \"\",\r\n                level: \"\",\r\n              });\r\n              setIsSkillModalOpen(true);\r\n            }}\r\n          >\r\n            {t(\"add-new-skill\")}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport { Grid, Button, Stack } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { ICandidate } from \"../../../interfaces/Candidate\";\r\nimport { emptyCandidate } from \"../emptyCandidate\";\r\nimport FormInput from \"../../../components/FormInput\";\r\nimport { Email, FileUpload, Message, SaveRounded } from \"@mui/icons-material\";\r\nimport FormMultiTextInput from \"../../../components/FormMultiTextInput\";\r\nimport MapsInput from \"../../../components/MapsInput\";\r\nimport ActionModal from \"../../../components/ActionModal\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FormDropdown from \"../../../components/FormDropdown\";\r\nimport { IJob } from \"../../../interfaces/Job\";\r\nimport jobs from \"../../../mockData/jobs\";\r\nimport Skills from \"./Skills\";\r\nimport { ISkill } from \"../../../interfaces/Skill\";\r\nimport { ICompany } from \"../../../interfaces/Company\";\r\nimport companies from \"../../../mockData/companies\";\r\n\r\ninterface ICandidateModalProps {\r\n  candidate?: ICandidate;\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n}\r\n\r\nconst CandidateModal = (props: ICandidateModalProps) => {\r\n  const { candidate, isOpen, setIsOpen } = props;\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"candidates.modal\" });\r\n  let form = useFormik({\r\n    initialValues: candidate ? { ...candidate } : { ...emptyCandidate },\r\n    onSubmit: () => {},\r\n    enableReinitialize: true,\r\n  });\r\n  return (\r\n    <ActionModal\r\n      isOpen={isOpen}\r\n      setIsOpen={setIsOpen}\r\n      title={form.values.id ? t(\"edit\") : t(\"add\")}\r\n      saveFunction={() => {}}\r\n    >\r\n      <Grid container spacing={2} padding={2}>\r\n        <Grid item xs={12} md={4}>\r\n          <FormInput\r\n            label={t(\"form.id\")}\r\n            type=\"number\"\r\n            value={form.values.id}\r\n            name=\"id\"\r\n            onChange={form.handleChange}\r\n            disabled\r\n          />\r\n          <FormInput\r\n            label={t(\"form.name\")}\r\n            type=\"text\"\r\n            value={form.values.name}\r\n            name=\"name\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.surname\")}\r\n            type=\"text\"\r\n            value={form.values.surname}\r\n            name=\"surname\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.address\")}\r\n            type=\"text\"\r\n            value={form.values.address}\r\n            name=\"address\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.extraAddress\")}\r\n            type=\"text\"\r\n            value={form.values.extraAddress}\r\n            name=\"extraAddress\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.zipCode\")}\r\n            type=\"text\"\r\n            value={form.values.zipCode}\r\n            name=\"zipCode\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.city\")}\r\n            type=\"text\"\r\n            value={form.values.city}\r\n            name=\"city\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.country\")}\r\n            type=\"text\"\r\n            value={form.values.country}\r\n            name=\"country\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.comment\")}\r\n            type=\"text\"\r\n            value={form.values.comment}\r\n            name=\"comment\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.salaryExpectation\")}\r\n            type=\"number\"\r\n            value={form.values.salaryExpectation}\r\n            name=\"salaryExpectation\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormDropdown<IJob>\r\n            label={t(\"form.requested-job\")}\r\n            getValue={(item) => item.id}\r\n            handleChange={(e) => {\r\n              form.setFieldValue(\r\n                \"requestedJob\",\r\n                jobs.filter((job) => job.id === e.target.value)[0]\r\n              );\r\n            }}\r\n            datas={jobs}\r\n            defaultValue={t(\"form.requested-job\")}\r\n            dataToValue={(job) => `${job.id} - ${job.name}`}\r\n            selectedValue={\r\n              form.values.requestedJob ? form.values.requestedJob.id : 0\r\n            }\r\n          />\r\n          <FormDropdown<ICompany>\r\n            label={t(\"form.requested-company\")}\r\n            getValue={(item) => item.id}\r\n            handleChange={(e) => {\r\n              form.setFieldValue(\r\n                \"requestedCompany\",\r\n                companies.filter((company) => company.id === e.target.value)[0]\r\n              );\r\n            }}\r\n            datas={companies}\r\n            defaultValue={t(\"form.requested-company\")}\r\n            dataToValue={(company) => `${company.id} - ${company.name}`}\r\n            selectedValue={\r\n              form.values.requestedCompany ? form.values.requestedCompany.id : 0\r\n            }\r\n          />\r\n          <Skills\r\n            skills={form.values.skills || []}\r\n            addSkill={(skill: ISkill) => {\r\n              const prevSkills = form.values.skills\r\n                ? [...form.values.skills]\r\n                : [];\r\n              prevSkills.push(skill);\r\n              form.setFieldValue(\"skills\", prevSkills);\r\n            }}\r\n            editSkill={(skill: ISkill) => {\r\n              let prevSkills = form.values.skills\r\n                ? [...form.values.skills]\r\n                : [];\r\n              prevSkills = prevSkills.filter((item) => item.id !== skill.id);\r\n              prevSkills.push(skill);\r\n              form.setFieldValue(\"skills\", prevSkills);\r\n            }}\r\n            removeSkill={(skill: ISkill) => {\r\n              let prevSkills = form.values.skills\r\n                ? [...form.values.skills]\r\n                : [];\r\n              prevSkills = prevSkills.filter((item) => item.id !== skill.id);\r\n              form.setFieldValue(\"skills\", prevSkills);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <FormMultiTextInput\r\n            label={t(\"form.phoneNumbers\")}\r\n            id=\"phone-numbers\"\r\n            data={form.values.phoneNumbers}\r\n          />\r\n          <FormMultiTextInput\r\n            label={t(\"form.emailAddresses\")}\r\n            id=\"email-addresses\"\r\n            data={form.values.emailAdresses}\r\n          />\r\n          <FormMultiTextInput\r\n            label={t(\"form.previousJobs\")}\r\n            id=\"previous-jobs\"\r\n            data={form.values.previousJobs}\r\n          />\r\n          <FormMultiTextInput\r\n            label={t(\"form.departments\")}\r\n            id=\"departments\"\r\n            data={form.values.departments}\r\n          />\r\n          <FormMultiTextInput\r\n            label={t(\"form.keywords\")}\r\n            id=\"keywords\"\r\n            data={form.values.keywords}\r\n          />\r\n          <FormMultiTextInput\r\n            label={t(\"form.diplomas\")}\r\n            id=\"diplomas\"\r\n            data={form.values.diplomas}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <MapsInput\r\n            mainCoords={form.values.requestedCompany?.mapsCoord}\r\n            secondCoord={form.values.mapsCoord}\r\n            setCoord={(coord: any) => {\r\n              form.setFieldValue(\"mapsCoord\", coord);\r\n            }}\r\n          />\r\n          {form.values.id ? (\r\n            <Stack sx={{ m: 1 }} direction=\"row\" spacing={1}>\r\n              <Button variant=\"contained\" color=\"success\">\r\n                <SaveRounded /> {t(\"form.cv.download\")}\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                <FileUpload /> {t(\"form.cv.upload-new\")}\r\n              </Button>\r\n            </Stack>\r\n          ) : (\r\n            <Button sx={{ m: 1 }} variant=\"contained\" color=\"secondary\">\r\n              <FileUpload /> {t(\"form.cv.upload\")}\r\n            </Button>\r\n          )}\r\n          {Boolean(form.values.id) && (\r\n            <Stack sx={{ m: 1 }} direction=\"row\" spacing={1}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                <Email sx={{ mr: 1 }} /> {t(\"send-mail\")}\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                <Message sx={{ mr: 1 }} /> {t(\"send-sms\")}\r\n              </Button>\r\n            </Stack>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </ActionModal>\r\n  );\r\n};\r\n\r\nexport default CandidateModal;\r\n","const mainCoord = { lat: 39.92069001103445, lng: 32.854006924076806 };\r\nexport default mainCoord;\r\n","import React, { useState } from \"react\";\r\n\r\nimport candidates from \"../../mockData/candidates\";\r\nimport CandidateModal from \"./CandidateModal\";\r\nimport { ICandidate } from \"../../interfaces/Candidate\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CRUDTable from \"../../components/CRUDTable\";\r\nimport { useFormik } from \"formik\";\r\nimport IFilter from \"../../interfaces/Filter\";\r\nimport calculateDistance from \"../../helpers/calculateDistance\";\r\nimport mainCoord from \"../../mockData/coords\";\r\n\r\nconst CandidatesTable = () => {\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"candidates.table\" });\r\n  const [isCandidateModalOpen, setIsCandidateModalOpen] =\r\n    useState<boolean>(false);\r\n  const [candidateModalCandidate, setCandidateModalCandidate] = useState<\r\n    ICandidate | undefined\r\n  >(undefined);\r\n  const [candidatesData, setCandidatesData] = useState(candidates);\r\n\r\n  const searchForm = useFormik({\r\n    initialValues: {\r\n      search: {} as any,\r\n    },\r\n    onSubmit: (e: any) => {\r\n      const result = Object.keys(e.search).reduce(\r\n        (candidates: any, key: string) => {\r\n          const filterFunc = filters.filter((filter) => filter.name === key)[0]\r\n            .filterFunc;\r\n          if (filterFunc) {\r\n            return candidates.filter(filterFunc);\r\n          } else {\r\n            const re = new RegExp(\r\n              \".*\" + e.search[key].value.toLowerCase() + \".*\"\r\n            );\r\n            return candidates.filter((e: any) =>\r\n              e[key] ? re.test(e[key].toLowerCase()) : false\r\n            );\r\n          }\r\n        },\r\n        candidates\r\n      );\r\n      setCandidatesData(result);\r\n    },\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  const filters: IFilter[] = [\r\n    {\r\n      name: \"distance\",\r\n      label: t(\"search-filters.distance\"),\r\n      filterFunc: (candidate: ICandidate) => {\r\n        const d = calculateDistance(mainCoord, candidate.mapsCoord!);\r\n        return d < searchForm.values.search.distance;\r\n      },\r\n    },\r\n    { name: \"diploma\", label: t(\"search-filters.diploma\") },\r\n    { name: \"keywords\", label: t(\"search-filters.keywords\") },\r\n    { name: \"requestedJob\", label: t(\"search-filters.job\") },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CandidateModal\r\n        candidate={candidateModalCandidate}\r\n        isOpen={isCandidateModalOpen}\r\n        setIsOpen={setIsCandidateModalOpen}\r\n      />\r\n      <CRUDTable<ICandidate>\r\n        data={candidatesData}\r\n        cellNames={[t(\"id\"), t(\"name\"), t(\"surname\"), t(\"city\")]}\r\n        keysToShow={[\"id\", \"name\", \"surname\", \"city\"]}\r\n        setModalData={setCandidateModalCandidate}\r\n        setIsDataModalOpen={setIsCandidateModalOpen}\r\n        searchForm={searchForm}\r\n        filters={filters}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default CandidatesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { pageRedux } from \"../../redux\";\r\nimport CandidatesTable from \"./CandidatesTable\";\r\n\r\nconst Candidates = () => {\r\n  useEffect(() => {\r\n    pageRedux.dispatch({\r\n      type: \"CHANGE_TITLE\",\r\n      payload: {\r\n        title: \"candidates\",\r\n      },\r\n    });\r\n  });\r\n  return <CandidatesTable />;\r\n};\r\n\r\nexport default Candidates;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IActionModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n  title: string;\r\n  saveFunction: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ActionModal = (props: IActionModalProps) => {\r\n  const { isOpen, setIsOpen, title, saveFunction, children } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"actionModal\" });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Card\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"95%\",\r\n          height: \"85%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n        }}\r\n      >\r\n        <CardHeader\r\n          sx={{ p: 2, bgcolor: \"success.dark\", color: \"white\" }}\r\n          title={title}\r\n          action={\r\n            <IconButton\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              <CloseRounded htmlColor=\"white\" />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardContent sx={{ height: \"76%\", overflow: \"auto\" }}>\r\n          {children}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n            startIcon={<SaveRounded />}\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              saveFunction();\r\n            }}\r\n          >\r\n            {t(\"save\")}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ActionModal;\r\n","import React from \"react\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport { Input, InputAdornment } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SearchInput = (props: { onChange: (e: any) => void }) => {\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"searchInput\" });\r\n  const { onChange } = props;\r\n  return (\r\n    <Input\r\n      type=\"search\"\r\n      onChange={onChange}\r\n      startAdornment={\r\n        <InputAdornment position=\"start\">\r\n          <Search />\r\n        </InputAdornment>\r\n      }\r\n      placeholder={t(\"placeholder\")}\r\n      sx={{ width: \"40em\", mx: \"auto\" }}\r\n    ></Input>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Modal,\r\n  Paper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport IFilter from \"../../../interfaces/Filter\";\r\n\r\nconst AdvancedSearchModal = (props: {\r\n  isOpen: boolean;\r\n  setIsOpen: (t: boolean) => void;\r\n  filters: IFilter[];\r\n  searchForm: any;\r\n}) => {\r\n  const { isOpen, setIsOpen, filters, searchForm } = props;\r\n  const [search, setSearch] = useState(searchForm.values.search);\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.advanced-search-modal\",\r\n  });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Paper\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          minWidth: \"70%\",\r\n          minHeight: \"60%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          padding: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Stack mx=\"auto\">\r\n          <Typography variant=\"h5\" component=\"h6\">\r\n            {t(\"title\")}\r\n          </Typography>\r\n        </Stack>\r\n        <Grid container display=\"flex\" width=\"100%\" textAlign=\"center\">\r\n          {filters.map((filter, index) => (\r\n            <Grid item xs={12} md={4} key={index}>\r\n              <TextField\r\n                label={filter.label}\r\n                type=\"text\"\r\n                name={filter.name}\r\n                value={search[filter.name]}\r\n                variant=\"standard\"\r\n                margin=\"dense\"\r\n                onChange={(e) => {\r\n                  const cSearch = { ...search };\r\n                  cSearch[filter.name] = e.target.value;\r\n                  setSearch(cSearch);\r\n                }}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Stack mt=\"auto\" ml=\"auto\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              searchForm.setFieldValue(\"search\", search);\r\n              searchForm.submitForm();\r\n            }}\r\n            startIcon={<Search />}\r\n          >\r\n            {t(\"search\")}\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AdvancedSearchModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport SearchInput from \"../../SearchInput\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search, Tune } from \"@mui/icons-material\";\r\nimport AdvancedSearchModal from \"../AdvancedSearchModal\";\r\n\r\ninterface ISearchBarProps {\r\n  searchForm: any;\r\n  filters?: { label: string; name: string }[];\r\n}\r\n\r\nconst SearchBar = (props: ISearchBarProps) => {\r\n  const { searchForm, filters } = props;\r\n  const [searchKey, setSearchKey] = useState<string>(\"\");\r\n  const [isAdvancedSearchModalOpen, setIsAdvancedSearchModalOpen] =\r\n    useState<boolean>(false);\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.search-bar\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {Boolean(filters) && (\r\n        <AdvancedSearchModal\r\n          isOpen={isAdvancedSearchModalOpen}\r\n          setIsOpen={setIsAdvancedSearchModalOpen}\r\n          searchForm={searchForm}\r\n          filters={filters ? filters : []}\r\n        />\r\n      )}\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ mr: \"auto\", width: \"50%\", ml: 2, alignItems: \"flex-end\" }}\r\n      >\r\n        <Grid item xs={5} sx={{ display: \"flex\" }}>\r\n          <SearchInput\r\n            onChange={(e: any) => {\r\n              setSearchKey(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button\r\n            sx={{ ml: \"auto\" }}\r\n            startIcon={<Search />}\r\n            onClick={() => {\r\n              searchForm.setFieldValue(\"search\", { name: searchKey });\r\n              searchForm.submitForm();\r\n            }}\r\n          >\r\n            {t(\"search\")}\r\n          </Button>\r\n        </Grid>\r\n        {Boolean(filters) && (\r\n          <Grid item xs={4}>\r\n            <Button\r\n              sx={{ ml: \"auto\" }}\r\n              startIcon={<Tune />}\r\n              onClick={() => {\r\n                setIsAdvancedSearchModalOpen(true);\r\n              }}\r\n            >\r\n              {t(\"advanced-search\")}\r\n            </Button>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Add, BorderColor, DeleteForeverRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { resolve } from \"./helpers\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\ninterface ICRUDTableProps<DataType> {\r\n  data: DataType[];\r\n  cellNames: string[];\r\n  keysToShow: string[];\r\n  setModalData: (data: DataType | undefined) => void;\r\n  setIsDataModalOpen: (value: boolean) => void;\r\n  customDataComponent?: any;\r\n  searchForm?: any;\r\n  filters?: any;\r\n}\r\n\r\nconst CRUDTable = <DataType extends { id: number }>(\r\n  props: ICRUDTableProps<DataType>\r\n) => {\r\n  const {\r\n    data,\r\n    cellNames,\r\n    setModalData,\r\n    keysToShow,\r\n    setIsDataModalOpen,\r\n    customDataComponent,\r\n    searchForm,\r\n    filters,\r\n  } = props;\r\n  let customComponent = customDataComponent ? customDataComponent : [];\r\n\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"crudTable\" });\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowPerPage, setRowPerPage] = useState<number>(10);\r\n  const [selectedDatasId, setSelectedDatasId] = useState<number[]>([]);\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: \"calc(100% - 40px)\",\r\n        marginLeft: \"auto\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      {Boolean(searchForm) && (\r\n        <SearchBar searchForm={searchForm} filters={filters} />\r\n      )}\r\n      <TableContainer sx={{ maxHeight: \"500px\" }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  value=\"all\"\r\n                  checked={data.length === selectedDatasId.length}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedDatasId(data.map((c: DataType) => c.id));\r\n                    } else setSelectedDatasId([]);\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              {cellNames.map((name, index) => (\r\n                <TableCell key={index}>{name}</TableCell>\r\n              ))}\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0 ? (\r\n              data\r\n                .slice(currentPage * rowPerPage, (currentPage + 1) * rowPerPage)\r\n                .map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell key={index}>\r\n                      <Checkbox\r\n                        value={item.id}\r\n                        checked={selectedDatasId.includes(item.id)}\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            const _selectedDatasId = [...selectedDatasId];\r\n                            _selectedDatasId.push(item.id);\r\n                            setSelectedDatasId(_selectedDatasId);\r\n                          } else {\r\n                            const _selectedDatasId = [...selectedDatasId];\r\n                            _selectedDatasId.splice(\r\n                              _selectedDatasId.indexOf(item.id),\r\n                              1\r\n                            );\r\n                            setSelectedDatasId(_selectedDatasId);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    {keysToShow.map((key, index) => (\r\n                      <TableCell key={index}>\r\n                        {Object.keys(customComponent).includes(key)\r\n                          ? customComponent[key](item[key as keyof typeof item])\r\n                          : key.includes(\".\")\r\n                          ? resolve(key, item)\r\n                          : item[key as keyof typeof item]}\r\n                      </TableCell>\r\n                    ))}\r\n\r\n                    <TableCell>\r\n                      <Button\r\n                        sx={{ border: \"none !important\" }}\r\n                        color=\"warning\"\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          setModalData(item);\r\n                          setIsDataModalOpen(true);\r\n                        }}\r\n                      >\r\n                        <BorderColor />\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={cellNames.length + 1} align=\"center\">\r\n                  {t(\"no-data\")}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowPerPage}\r\n        page={currentPage}\r\n        onPageChange={(e: unknown, newPage: number) => {\r\n          setCurrentPage(newPage);\r\n        }}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowPerPage(+e.target.value);\r\n          setCurrentPage(0);\r\n        }}\r\n      />\r\n      <Stack padding={1}>\r\n        <ButtonGroup\r\n          sx={{ marginLeft: \"auto\" }}\r\n          aria-label=\"medium button group contained\"\r\n          variant=\"contained\"\r\n        >\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<Add />}\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setModalData(undefined);\r\n              setIsDataModalOpen(true);\r\n            }}\r\n          >\r\n            {t(\"add\")}\r\n          </Button>\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<DeleteForeverRounded />}\r\n            color=\"error\"\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CRUDTable;\r\n","export function resolve(path: string, obj: Object) {\r\n  return path.split(\".\").reduce((prev: any, curr: string) => {\r\n    return prev ? prev[curr as keyof typeof prev] : null;\r\n  }, obj);\r\n}\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SxProps,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface IFormDropdownProps<DataType> {\r\n  label: string;\r\n  handleChange: (e: any) => void;\r\n  datas: DataType[];\r\n  defaultValue: string;\r\n  dataToValue: (data: DataType) => string;\r\n  selectedValue: number | string;\r\n  disabled?: boolean;\r\n  width?: string;\r\n  sx?: SxProps;\r\n  getValue: (data: DataType) => string | number;\r\n}\r\n\r\nconst FormDropdown = <DataType extends { id: number } | string>(\r\n  props: IFormDropdownProps<DataType>\r\n) => {\r\n  const {\r\n    label,\r\n    handleChange,\r\n    defaultValue,\r\n    datas,\r\n    dataToValue,\r\n    selectedValue,\r\n    disabled,\r\n    width,\r\n    getValue,\r\n    sx,\r\n  } = props;\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      disabled={disabled}\r\n      sx={{ width: \"100%\" || width, m: 1, ...sx }}\r\n    >\r\n      <InputLabel>{label}</InputLabel>\r\n\r\n      <Select value={selectedValue} label={label} onChange={handleChange}>\r\n        <MenuItem value={0}>\r\n          <em>{defaultValue}</em>\r\n        </MenuItem>\r\n        {datas.map((data: DataType, index) => (\r\n          <MenuItem key={index} value={getValue(data)}>\r\n            {dataToValue(data)}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormDropdown;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\", m: 1 }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useMemo, useRef } from \"react\";\r\nimport { Marker, useMapEvents } from \"react-leaflet\";\r\n\r\nconst LocationMarker = (props: any) => {\r\n  const { position, setPosition, callBackFn } = props;\r\n  const map = useMapEvents({\r\n    click(e) {\r\n      setPosition(e.latlng);\r\n      callBackFn();\r\n    },\r\n  });\r\n  // ignore this line\r\n  if (false) console.log(map);\r\n  const markerRef = useRef(null);\r\n  const eventHandlers = useMemo(\r\n    () => ({\r\n      dragend() {\r\n        const marker = markerRef.current as any;\r\n        if (marker != null) {\r\n          setPosition(marker.getLatLng());\r\n          callBackFn();\r\n        }\r\n      },\r\n    }),\r\n    [setPosition, callBackFn]\r\n  );\r\n  return (\r\n    <>\r\n      {position && (\r\n        <Marker\r\n          ref={markerRef}\r\n          eventHandlers={eventHandlers}\r\n          draggable\r\n          position={position}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LocationMarker;\r\n","import React, { useState } from \"react\";\r\nimport { LatLngExpression } from \"leaflet\";\r\nimport { MapContainer, Marker, TileLayer } from \"react-leaflet\";\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport { Card, CardContent, CardHeader } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport calculateDistance from \"../../helpers/calculateDistance\";\r\n\r\ninterface IMapsInput {\r\n  mainCoords: LatLngExpression | { lat: number; lng: number };\r\n  secondCoord?: LatLngExpression | { lat: number; lng: number };\r\n  setCoord: (coord: any) => void;\r\n  isMainMoving?: boolean;\r\n}\r\n\r\nconst MapsInput = (props: IMapsInput) => {\r\n  const { mainCoords, secondCoord, isMainMoving, setCoord } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"mapsInput\" });\r\n  const [selectionCoords, setSelectionCoords] = useState<any>(\r\n    mainCoords || secondCoord\r\n  );\r\n  const [distance, setDistance] = useState<number | string>(0);\r\n\r\n  return (\r\n    <Card sx={{ m: 1 }}>\r\n      {!isMainMoving && <CardHeader title={`${distance} ${t(\"title\")}`} />}\r\n      <CardContent>\r\n        <MapContainer\r\n          center={mainCoords}\r\n          zoom={12}\r\n          id=\"map\"\r\n          style={{ height: \"400px\", width: \"100%\", color: \"black\" }}\r\n          scrollWheelZoom={false}\r\n        >\r\n          <TileLayer\r\n            attribution=\"\"\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {Boolean(mainCoords && !isMainMoving) && (\r\n            <Marker position={mainCoords} />\r\n          )}\r\n          <LocationMarker\r\n            position={selectionCoords}\r\n            setPosition={setSelectionCoords}\r\n            callBackFn={() => {\r\n              if (selectionCoords) {\r\n                const dist = calculateDistance(\r\n                  mainCoords as any,\r\n                  selectionCoords\r\n                );\r\n                setDistance(dist.toFixed(3));\r\n                setCoord(selectionCoords);\r\n              }\r\n            }}\r\n          />\r\n        </MapContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MapsInput;\r\n","export default function calculateDistance(\r\n  coord1: { lat: number; lng: number },\r\n  coord2: { lat: number; lng: number }\r\n) {\r\n  const R = 6371; // km\r\n  const dLat = toRad(coord2.lat - coord1.lat);\r\n  const dLon = toRad(coord2.lng - coord1.lng);\r\n  const lat1 = toRad(coord1.lat);\r\n  const lat2 = toRad(coord2.lat);\r\n\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  const d = R * c;\r\n  return d;\r\n}\r\n\r\n// Converts numeric degrees to radians\r\nfunction toRad(Value: number) {\r\n  return (Value * Math.PI) / 180;\r\n}\r\n","import { ICandidate } from \"../interfaces/Candidate\";\r\n\r\nconst candidates: ICandidate[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Example\",\r\n    surname: \"Candidate 1\",\r\n    city: \"Ankara\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 1,\r\n      name: \"Company Ankara\",\r\n      city: \"Ankara\",\r\n      mapsCoord: {\r\n        lat: 39.925533,\r\n        lng: 32.866287,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Paris\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 2,\r\n      name: \"Company Paris\",\r\n      city: \"Paris\",\r\n      mapsCoord: {\r\n        lat: 48.864716,\r\n        lng: 2.349014,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"London\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 3,\r\n      name: \"Company London\",\r\n      city: \"London\",\r\n      mapsCoord: {\r\n        lat: 51.509865,\r\n        lng: -0.118092,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"New York\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 4,\r\n      name: \"Company New York\",\r\n      city: \"New York\",\r\n      mapsCoord: {\r\n        lat: 40.73061,\r\n        lng: -73.935242,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Berlin\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 5,\r\n      name: \"Company Berlin\",\r\n      city: \"Berlin\",\r\n      mapsCoord: {\r\n        lat: 52.520008,\r\n        lng: 13.404954,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Ankara\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 1,\r\n      name: \"Company Ankara\",\r\n      city: \"Ankara\",\r\n      mapsCoord: {\r\n        lat: 39.925533,\r\n        lng: 32.866287,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Paris\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 2,\r\n      name: \"Company Paris\",\r\n      city: \"Paris\",\r\n      mapsCoord: {\r\n        lat: 48.864716,\r\n        lng: 2.349014,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"London\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 3,\r\n      name: \"Company London\",\r\n      city: \"London\",\r\n      mapsCoord: {\r\n        lat: 51.509865,\r\n        lng: -0.118092,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"New York\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 4,\r\n      name: \"Company New York\",\r\n      city: \"New York\",\r\n      mapsCoord: {\r\n        lat: 40.73061,\r\n        lng: -73.935242,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Berlin\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 5,\r\n      name: \"Company Berlin\",\r\n      city: \"Berlin\",\r\n      mapsCoord: {\r\n        lat: 52.520008,\r\n        lng: 13.404954,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n];\r\n\r\nexport default candidates;\r\n","import { ICompany } from \"../interfaces/Company\";\r\n\r\nconst companies: ICompany[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Company Ankara\",\r\n    city: \"Ankara\",\r\n    mapsCoord: {\r\n      lat: 39.925533,\r\n      lng: 32.866287,\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Company Paris\",\r\n    city: \"Paris\",\r\n    mapsCoord: {\r\n      lat: 48.864716,\r\n      lng: 2.349014,\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Company London\",\r\n    city: \"London\",\r\n    mapsCoord: {\r\n      lat: 51.509865,\r\n      lng: -0.118092,\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Company New York\",\r\n    city: \"New York\",\r\n    mapsCoord: {\r\n      lat: 40.73061,\r\n      lng: -73.935242,\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Company Berlin\",\r\n    city: \"Berlin\",\r\n    mapsCoord: {\r\n      lat: 52.520008,\r\n      lng: 13.404954,\r\n    },\r\n  },\r\n];\r\n\r\nexport default companies;\r\n","import { IJob } from \"../interfaces/Job\";\r\n\r\nconst jobs: IJob[] = [\r\n  { id: 1, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 2, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 3, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 4, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 5, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 6, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 7, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 8, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 9, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 10, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 11, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 12, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 13, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 14, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 15, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 16, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 17, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 18, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 19, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n];\r\n\r\nexport default jobs;\r\n"],"names":["emptyCandidate","id","name","surname","CVAddress","phoneNumbers","emailAdresses","address","extraAddress","zipCode","city","country","mapsCoord","undefined","creatorMember","previousJobs","requestedJob","requestedCompany","lat","lng","skills","comment","salaryExpectation","departments","keywords","situation","diplomas","createSvgIcon","_jsx","d","props","label","data","useState","Array","length","fill","hovered","setHovered","Card","sx","border","width","m","CardHeader","title","CardContent","Grid","container","spacing","mx","map","item","index","xs","Button","variant","color","onMouseOut","cHovered","onMouseOver","Remove","CardActions","TextField","marginLeft","InputProps","endAdornment","InputAdornment","position","IconButton","Add","isOpen","setIsOpen","addSkill","editSkill","action","modalSkill","setModalSkill","t","useTranslation","keyPrefix","Modal","open","onClose","Box","top","left","transform","textAlign","bgcolor","padding","FormInput","type","value","onChange","e","prevSkill","target","level","onClick","Save","mr","removeSkill","isSkillModalOpen","setIsSkillModalOpen","modalAction","setModalAction","skill","display","Tooltip","placement","ml","Edit","Clear","candidate","form","useFormik","initialValues","onSubmit","enableReinitialize","ActionModal","values","saveFunction","md","handleChange","disabled","FormDropdown","getValue","setFieldValue","jobs","job","datas","defaultValue","dataToValue","selectedValue","companies","company","prevSkills","push","filter","MapsInput","mainCoords","secondCoord","setCoord","coord","Stack","direction","SaveRounded","FileUpload","Boolean","Email","Message","isCandidateModalOpen","setIsCandidateModalOpen","candidateModalCandidate","setCandidateModalCandidate","candidates","candidatesData","setCandidatesData","searchForm","search","result","Object","keys","reduce","key","filterFunc","filters","re","RegExp","toLowerCase","test","calculateDistance","mainCoord","distance","CRUDTable","cellNames","keysToShow","setModalData","setIsDataModalOpen","useEffect","pageRedux","payload","children","height","p","htmlColor","overflow","startIcon","Input","startAdornment","Search","placeholder","setSearch","Paper","minWidth","minHeight","flexDirection","Typography","component","margin","cSearch","mt","submitForm","searchKey","setSearchKey","isAdvancedSearchModalOpen","setIsAdvancedSearchModalOpen","alignItems","Tune","customDataComponent","customComponent","currentPage","setCurrentPage","rowPerPage","setRowPerPage","selectedDatasId","setSelectedDatasId","boxShadow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","checked","c","TableBody","slice","includes","_selectedDatasId","splice","indexOf","path","obj","split","prev","curr","BorderColor","colSpan","align","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","ButtonGroup","DeleteForeverRounded","error","htmlFor","setPosition","callBackFn","useMapEvents","click","latlng","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","getLatLng","Marker","ref","draggable","isMainMoving","selectionCoords","setSelectionCoords","setDistance","MapContainer","center","zoom","style","scrollWheelZoom","TileLayer","attribution","url","dist","toFixed","coord1","coord2","dLat","toRad","dLon","lat1","lat2","a","Math","sin","cos","atan2","sqrt","Value","PI","experience"],"sourceRoot":""}