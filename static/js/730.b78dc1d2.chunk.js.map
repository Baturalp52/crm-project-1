{"version":3,"file":"static/js/730.b78dc1d2.chunk.js","mappings":"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","sources":["Pages/Calendar/emptyEvent.ts","Pages/Calendar/RightBar.tsx","Pages/Calendar/index.tsx","components/FormInput/index.tsx","mockData/events.ts"],"sourcesContent":["const now = new Date();\r\nexport const emptyEvent = {\r\n  id: 0,\r\n  title: \"\",\r\n  start: now.getTime() - 1000 * 60 * 60 * 24,\r\n  end: now,\r\n  desc: \"\",\r\n  allDay: false,\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { IEvent } from \"../../mockData/interfaces/Event\";\r\nimport { emptyEvent } from \"./emptyEvent\";\r\nimport FormInput from \"../../components/FormInput\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\n\r\ninterface IRightBarProps {\r\n  event?: IEvent;\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n}\r\n\r\nconst RightBar = (props: IRightBarProps) => {\r\n  const { event, isOpen, setIsOpen } = props;\r\n\r\n  let form = useFormik({\r\n    initialValues: event ? { ...event } : { ...emptyEvent },\r\n    onSubmit: () => {},\r\n    enableReinitialize: true,\r\n  });\r\n  return (\r\n    <Drawer anchor=\"right\" open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Box sx={{ width: 400, overflow: \"auto\" }} role=\"presentation\">\r\n        <Typography variant=\"h6\" display=\"flex\" padding={2}>\r\n          {form.values.id ? \"Edit Event\" : \"Add New\"}\r\n          <IconButton\r\n            sx={{ marginLeft: \"auto\", display: \"inline\" }}\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            <CloseRounded />\r\n          </IconButton>\r\n        </Typography>\r\n\r\n        <form onSubmit={form.handleSubmit}>\r\n          <List>\r\n            <ListItem>\r\n              <FormInput\r\n                label=\"id\"\r\n                type=\"number\"\r\n                value={form.values.id}\r\n                name=\"id\"\r\n                onChange={form.handleChange}\r\n                disabled\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormInput\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                value={form.values.title}\r\n                name=\"title\"\r\n                onChange={form.handleChange}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormInput\r\n                label=\"Description\"\r\n                type=\"text\"\r\n                value={form.values.desc}\r\n                name=\"desc\"\r\n                onChange={form.handleChange}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </form>\r\n        <Stack padding={2}>\r\n          <Button\r\n            sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n            startIcon={<SaveRounded />}\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default RightBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { pageRedux } from \"../../redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { events } from \"../../mockData/events\";\r\nimport { IEvent } from \"../../mockData/interfaces/Event\";\r\n\r\nimport {\r\n  Calendar as CalendarComponent,\r\n  momentLocalizer,\r\n  Views,\r\n} from \"react-big-calendar\";\r\nimport { Box, Paper } from \"@mui/material\";\r\nimport RightBar from \"./RightBar\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst Calendar = () => {\r\n  const [isRightBarOpen, setIsRightBarOpen] = useState<boolean>(false);\r\n  const [rightBarEvent, setRightBarEvent] = useState<IEvent | undefined>(\r\n    undefined\r\n  );\r\n  useEffect(() => {\r\n    pageRedux.dispatch({\r\n      type: \"CHANGE_TITLE\",\r\n      payload: {\r\n        headerTitle: \"Calendar\",\r\n        pageTitle: \"Calendar || CRM\",\r\n      },\r\n    });\r\n  });\r\n  return (\r\n    <>\r\n      <RightBar\r\n        event={rightBarEvent}\r\n        isOpen={isRightBarOpen}\r\n        setIsOpen={setIsRightBarOpen}\r\n      />\r\n      <Paper\r\n        sx={{\r\n          width: \"calc(100% - 40px)\",\r\n          marginLeft: \"auto\",\r\n          overflow: \"hidden\",\r\n          boxShadow: \"none\",\r\n        }}\r\n      >\r\n        <Box padding={2}>\r\n          <CalendarComponent\r\n            selectable\r\n            popup\r\n            localizer={localizer}\r\n            events={events}\r\n            defaultView={Views.MONTH}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            toolbar={false}\r\n            style={{ height: 500 }}\r\n            views={{\r\n              month: true,\r\n            }}\r\n            onSelectEvent={(event) => {\r\n              setRightBarEvent(event);\r\n              setIsRightBarOpen(true);\r\n            }}\r\n            onSelectSlot={(event) => {\r\n              const newEvent = {\r\n                id: 0,\r\n                title: \"\",\r\n                desc: \"\",\r\n                allDay: false,\r\n                start: new Date(event.start),\r\n                end: new Date(event.end),\r\n              };\r\n              setRightBarEvent(newEvent);\r\n              setIsRightBarOpen(true);\r\n            }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\" }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { IEvent } from \"./interfaces/Event\";\r\n\r\nconst now = new Date();\r\n\r\nexport const events: IEvent[] = [\r\n  {\r\n    id: 0,\r\n    title: \"All Day Event very long title\",\r\n    allDay: true,\r\n    start: new Date(2022, 0, 1),\r\n    end: new Date(2022, 0, 1),\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Long Event\",\r\n    start: new Date(2022, 0, 7),\r\n    end: new Date(2022, 0, 8),\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    title: \"DTS STARTS\",\r\n    start: new Date(2022, 0, 20, 13, 0, 0),\r\n    end: new Date(2022, 0, 20, 15, 0, 0),\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    title: \"DTS ENDS\",\r\n    start: new Date(2022, 0, 13, 0, 0, 0),\r\n    end: new Date(2022, 0, 13, 15, 0, 0),\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    title: \"Some Event\",\r\n    start: new Date(2022, 0, 9, 0, 0, 0),\r\n    end: new Date(2022, 0, 10, 0, 0, 0),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Conference\",\r\n    start: new Date(2022, 0, 13),\r\n    end: new Date(2022, 0, 13),\r\n    desc: \"Big conference for important people\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Conference\",\r\n    start: now.getTime() - 1000 * 60 * 60 * 24,\r\n    end: now,\r\n    desc: \"Big conference for important people\",\r\n  },\r\n];\r\n"],"names":["now","Date","emptyEvent","id","title","start","getTime","end","desc","allDay","props","event","isOpen","setIsOpen","form","useFormik","initialValues","onSubmit","enableReinitialize","Drawer","anchor","open","onClose","Box","sx","width","overflow","role","Typography","variant","display","padding","values","IconButton","marginLeft","onClick","CloseRounded","handleSubmit","List","ListItem","FormInput","label","type","value","name","onChange","handleChange","disabled","Stack","Button","border","startIcon","SaveRounded","color","localizer","momentLocalizer","moment","useState","isRightBarOpen","setIsRightBarOpen","undefined","rightBarEvent","setRightBarEvent","useEffect","pageRedux","payload","headerTitle","pageTitle","Paper","boxShadow","selectable","popup","events","defaultView","Views","startAccessor","endAccessor","toolbar","style","height","views","month","onSelectEvent","onSelectSlot","newEvent","error","Boolean","htmlFor"],"sourceRoot":""}