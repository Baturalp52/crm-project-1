{"version":3,"file":"static/js/42.519d227a.chunk.js","mappings":"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","sources":["Pages/Calendar/emptyEvent.ts","Pages/Calendar/EventModal.tsx","Pages/Calendar/index.tsx","components/ActionModal/index.tsx","components/FormInput/index.tsx","mockData/events.ts"],"sourcesContent":["const now = new Date();\r\nexport const emptyEvent = {\r\n  id: 0,\r\n  title: \"\",\r\n  start: now.getTime() - 1000 * 60 * 60 * 24,\r\n  end: now,\r\n  desc: \"\",\r\n  allDay: false,\r\n};\r\n","import React from \"react\";\r\nimport { List, ListItem } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { IEvent } from \"../../interfaces/Event\";\r\nimport { emptyEvent } from \"./emptyEvent\";\r\nimport FormInput from \"../../components/FormInput\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ActionModal from \"../../components/ActionModal\";\r\n\r\ninterface IEventModalProps {\r\n  event?: IEvent;\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n}\r\n\r\nconst EventModal = (props: IEventModalProps) => {\r\n  const { event, isOpen, setIsOpen } = props;\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"calendar\" });\r\n\r\n  let form = useFormik({\r\n    initialValues: event ? { ...event } : { ...emptyEvent },\r\n    onSubmit: () => {},\r\n    enableReinitialize: true,\r\n  });\r\n  return (\r\n    <ActionModal\r\n      title={form.values.id ? t(\"edit\") : t(\"add\")}\r\n      isOpen={isOpen}\r\n      setIsOpen={setIsOpen}\r\n      saveFunction={() => {}}\r\n    >\r\n      <List>\r\n        <ListItem>\r\n          <FormInput\r\n            label={t(\"form.id\")}\r\n            type=\"number\"\r\n            value={form.values.id}\r\n            name=\"id\"\r\n            onChange={form.handleChange}\r\n            disabled\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <FormInput\r\n            label={t(\"form.title\")}\r\n            type=\"text\"\r\n            value={form.values.title}\r\n            name=\"title\"\r\n            onChange={form.handleChange}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <FormInput\r\n            label={t(\"form.description\")}\r\n            type=\"text\"\r\n            value={form.values.desc}\r\n            name=\"desc\"\r\n            onChange={form.handleChange}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </ActionModal>\r\n  );\r\n};\r\n\r\nexport default EventModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { pageRedux } from \"../../redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { events } from \"../../mockData/events\";\r\nimport { IEvent } from \"../../interfaces/Event\";\r\n\r\nimport {\r\n  Calendar as CalendarComponent,\r\n  momentLocalizer,\r\n  Views,\r\n} from \"react-big-calendar\";\r\nimport { Box, Paper } from \"@mui/material\";\r\nimport EventModal from \"./EventModal\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst Calendar = () => {\r\n  const [isEventModalOpen, setIsEventModalOpen] = useState<boolean>(false);\r\n  const [eventModalEvent, setEventModalEvent] = useState<IEvent | undefined>(\r\n    undefined\r\n  );\r\n  useEffect(() => {\r\n    pageRedux.dispatch({\r\n      type: \"CHANGE_TITLE\",\r\n      payload: {\r\n        title: \"calendar\",\r\n      },\r\n    });\r\n  });\r\n  return (\r\n    <>\r\n      <EventModal\r\n        event={eventModalEvent}\r\n        isOpen={isEventModalOpen}\r\n        setIsOpen={setIsEventModalOpen}\r\n      />\r\n      <Paper\r\n        sx={{\r\n          width: \"calc(100% - 40px)\",\r\n          marginLeft: \"auto\",\r\n          overflow: \"hidden\",\r\n          boxShadow: \"none\",\r\n        }}\r\n      >\r\n        <Box padding={2}>\r\n          <CalendarComponent\r\n            selectable\r\n            popup\r\n            localizer={localizer}\r\n            events={events}\r\n            defaultView={Views.MONTH}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            toolbar={false}\r\n            style={{ height: 500 }}\r\n            views={{\r\n              month: true,\r\n            }}\r\n            onSelectEvent={(event) => {\r\n              setEventModalEvent(event);\r\n              setIsEventModalOpen(true);\r\n            }}\r\n            onSelectSlot={(event) => {\r\n              const newEvent = {\r\n                id: 0,\r\n                title: \"\",\r\n                desc: \"\",\r\n                allDay: false,\r\n                start: new Date(event.start),\r\n                end: new Date(event.end),\r\n              };\r\n              setEventModalEvent(newEvent);\r\n              setIsEventModalOpen(true);\r\n            }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IActionModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n  title: string;\r\n  saveFunction: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ActionModal = (props: IActionModalProps) => {\r\n  const { isOpen, setIsOpen, title, saveFunction, children } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"actionModal\" });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Card\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"95%\",\r\n          height: \"85%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n        }}\r\n      >\r\n        <CardHeader\r\n          sx={{ p: 2, bgcolor: \"success.dark\", color: \"white\" }}\r\n          title={title}\r\n          action={\r\n            <IconButton\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              <CloseRounded htmlColor=\"white\" />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardContent sx={{ height: \"76%\", overflow: \"auto\" }}>\r\n          {children}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n            startIcon={<SaveRounded />}\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              saveFunction();\r\n            }}\r\n          >\r\n            {t(\"save\")}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ActionModal;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\", m: 1 }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { IEvent } from \"../interfaces/Event\";\r\n\r\nconst now = new Date();\r\n\r\nexport const events: IEvent[] = [\r\n  {\r\n    id: 0,\r\n    title: \"All Day Event very long title\",\r\n    allDay: true,\r\n    start: new Date(2022, 0, 1),\r\n    end: new Date(2022, 0, 1),\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Long Event\",\r\n    start: new Date(2022, 0, 7),\r\n    end: new Date(2022, 0, 8),\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    title: \"DTS STARTS\",\r\n    start: new Date(2022, 0, 20, 13, 0, 0),\r\n    end: new Date(2022, 0, 20, 15, 0, 0),\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    title: \"DTS ENDS\",\r\n    start: new Date(2022, 0, 13, 0, 0, 0),\r\n    end: new Date(2022, 0, 13, 15, 0, 0),\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    title: \"Some Event\",\r\n    start: new Date(2022, 0, 9, 0, 0, 0),\r\n    end: new Date(2022, 0, 10, 0, 0, 0),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Conference\",\r\n    start: new Date(2022, 0, 13),\r\n    end: new Date(2022, 0, 13),\r\n    desc: \"Big conference for important people\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Conference\",\r\n    start: now.getTime() - 1000 * 60 * 60 * 24,\r\n    end: now,\r\n    desc: \"Big conference for important people\",\r\n  },\r\n];\r\n"],"names":["now","Date","emptyEvent","id","title","start","getTime","end","desc","allDay","props","event","isOpen","setIsOpen","t","useTranslation","keyPrefix","form","useFormik","initialValues","onSubmit","enableReinitialize","ActionModal","values","saveFunction","List","ListItem","FormInput","label","type","value","name","onChange","handleChange","disabled","localizer","momentLocalizer","moment","useState","isEventModalOpen","setIsEventModalOpen","undefined","eventModalEvent","setEventModalEvent","useEffect","pageRedux","payload","Paper","sx","width","marginLeft","overflow","boxShadow","Box","padding","selectable","popup","events","defaultView","Views","startAccessor","endAccessor","toolbar","style","height","views","month","onSelectEvent","onSelectSlot","newEvent","children","open","onClose","position","top","left","transform","bgcolor","border","p","color","action","onClick","htmlColor","startIcon","variant","error","Boolean","m","htmlFor"],"sourceRoot":""}