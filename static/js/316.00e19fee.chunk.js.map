{"version":3,"file":"static/js/316.00e19fee.chunk.js","mappings":"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","sources":["Pages/Candidates/emptyCandidate.ts","../node_modules/@mui/icons-material/esm/FileUpload.js","../node_modules/@mui/icons-material/esm/Email.js","../node_modules/@mui/icons-material/esm/Message.js","../node_modules/@mui/icons-material/esm/Remove.js","components/FormMultiTextInput/index.tsx","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Clear.js","../node_modules/@mui/icons-material/esm/Save.js","Pages/Candidates/CandidateModal/SkillModal.tsx","Pages/Candidates/CandidateModal/Skills.tsx","Pages/Candidates/CandidateModal/SendMessageModal/datas.ts","../node_modules/@mui/icons-material/esm/Send.js","Pages/Candidates/CandidateModal/SendMessageModal/index.tsx","Pages/Candidates/CandidateModal/index.tsx","mockData/coords.ts","Pages/Candidates/CandidatesTable.tsx","Pages/Candidates/index.tsx","components/ActionModal/index.tsx","components/SearchInput/index.tsx","components/CRUDTable/AdvancedSearchModal/index.tsx","components/CRUDTable/SearchBar/index.tsx","components/CRUDTable/index.tsx","components/FormDropdown/index.tsx","components/FormInput/index.tsx","components/MapsInput/LocationMarker.tsx","components/MapsInput/index.tsx","helpers/calculateDistance.ts","helpers/resolve.ts","mockData/candidates.ts","mockData/companies.ts","mockData/jobs.ts","../node_modules/@mui/icons-material/esm/Close.js"],"sourcesContent":["export const emptyCandidate = {\r\n  id: 0,\r\n  name: \"\",\r\n  surname: \"\",\r\n  CVAddress: \"\",\r\n  phoneNumbers: [],\r\n  emailAdresses: [],\r\n  address: \"\",\r\n  extraAddress: \"\",\r\n  zipCode: \"\",\r\n  city: \"\",\r\n  country: \"\",\r\n  mapsCoord: undefined,\r\n  creatorMember: {},\r\n  previousJobs: [],\r\n  requestedJob: { id: 0, name: \"\" },\r\n  requestedCompany: {\r\n    id: 1,\r\n    name: \"\",\r\n    mapsCoord: { lat: 0, lng: 0 },\r\n  },\r\n  skills: [],\r\n  comment: \"\",\r\n  salaryExpectation: 0,\r\n  departments: [],\r\n  keywords: [],\r\n  situation: \"free\",\r\n  diplomas: [],\r\n};\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\"\n}), 'FileUpload');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n}), 'Message');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  InputAdornment,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Add, Remove } from \"@mui/icons-material\";\r\n\r\ninterface IFormMultiTextInputProps {\r\n  label: string;\r\n  id: string;\r\n  data: string[];\r\n  addNew: (data: string) => void;\r\n  deleteItem: (index: number) => void;\r\n}\r\n\r\nconst FormMultiTextInput = (props: IFormMultiTextInputProps) => {\r\n  const { label, id, data, addNew, deleteItem } = props;\r\n  const [hovered, setHovered] = useState(Array(data.length).fill(0));\r\n  const [addNewValue, setAddNewValue] = useState<string>(\"\");\r\n  return (\r\n    <Card sx={{ border: \"none\", width: \"100%\", m: 1 }}>\r\n      <CardHeader title={label} />\r\n      <CardContent>\r\n        <Grid container spacing={2} mx=\"auto\">\r\n          {data.length > 0\r\n            ? data.map((item, index) => {\r\n                return (\r\n                  <Grid key={index} item xs={12}>\r\n                    <Button\r\n                      key={index}\r\n                      variant=\"outlined\"\r\n                      color={hovered[index] ? \"error\" : \"inherit\"}\r\n                      sx={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        let cHovered = [...hovered];\r\n                        cHovered[index] = 0;\r\n                        setHovered(cHovered);\r\n                      }}\r\n                      onMouseOver={() => {\r\n                        let cHovered = [...hovered];\r\n                        cHovered[index] = 1;\r\n                        setHovered(cHovered);\r\n                      }}\r\n                      onClick={() => {\r\n                        deleteItem(index);\r\n                      }}\r\n                    >\r\n                      {hovered[index] ? (\r\n                        <>\r\n                          <Remove /> Delete\r\n                        </>\r\n                      ) : (\r\n                        item\r\n                      )}\r\n                    </Button>\r\n                  </Grid>\r\n                );\r\n              })\r\n            : \"No data\"}\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <TextField\r\n          label=\"\"\r\n          id={id}\r\n          value={addNewValue}\r\n          onChange={(e) => setAddNewValue(e.target.value)}\r\n          onKeyUpCapture={(e) => {\r\n            if (e.which === 13) {\r\n              addNew(addNewValue);\r\n              setAddNewValue(\"\");\r\n            }\r\n          }}\r\n          sx={{ marginLeft: \"auto\", width: \"100%\" }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={() => {\r\n                    addNew(addNewValue);\r\n                    setAddNewValue(\"\");\r\n                  }}\r\n                >\r\n                  <Add />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FormMultiTextInput;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import React from \"react\";\r\nimport { Box, Button, Modal } from \"@mui/material\";\r\nimport { ISkill } from \"../../../interfaces/Skill\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FormInput from \"../../../components/FormInput\";\r\nimport { Save } from \"@mui/icons-material\";\r\n\r\ninterface ISkillModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: (state: boolean) => void;\r\n  addSkill: (skill: ISkill) => void;\r\n  editSkill: (skill: ISkill) => void;\r\n  action: \"add\" | \"edit\";\r\n  modalSkill: ISkill;\r\n  setModalSkill: (skill: ISkill) => void;\r\n}\r\n\r\nconst SkillModal = (props: ISkillModalProps) => {\r\n  const {\r\n    isOpen,\r\n    setIsOpen,\r\n    addSkill,\r\n    editSkill,\r\n    action,\r\n    modalSkill,\r\n    setModalSkill,\r\n  } = props;\r\n  const { t } = useTranslation(\"pages\", {\r\n    keyPrefix: \"candidates.modal.form.skills\",\r\n  });\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={() => {\r\n        setIsOpen(false);\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          textAlign: \"center\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          padding: 2,\r\n        }}\r\n      >\r\n        <FormInput\r\n          label={t(\"name\")}\r\n          type=\"text\"\r\n          value={modalSkill.name}\r\n          name=\"skill-name\"\r\n          onChange={(e) => {\r\n            const prevSkill = { ...modalSkill };\r\n            prevSkill.name = e.target.value;\r\n            setModalSkill(prevSkill);\r\n          }}\r\n        />\r\n        <FormInput\r\n          label={t(\"skill-level\")}\r\n          type=\"text\"\r\n          value={modalSkill.level}\r\n          name=\"skill-level\"\r\n          onChange={(e) => {\r\n            const prevSkill = { ...modalSkill };\r\n            prevSkill.level = e.target.value;\r\n            setModalSkill(prevSkill);\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          onClick={() => {\r\n            action === \"add\" ? addSkill(modalSkill) : editSkill(modalSkill);\r\n            setIsOpen(false);\r\n          }}\r\n        >\r\n          <Save sx={{ mr: 1 }} />\r\n          {t(\"save-skill\")}\r\n        </Button>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SkillModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ISkill } from \"../../../interfaces/Skill\";\r\nimport { Clear, Edit } from \"@mui/icons-material\";\r\nimport SkillModal from \"./SkillModal\";\r\n\r\ninterface ISkillsProps {\r\n  skills: ISkill[];\r\n  addSkill: (skill: ISkill) => void;\r\n  removeSkill: (skill: ISkill) => void;\r\n  editSkill: (skill: ISkill) => void;\r\n}\r\n\r\nconst Skills = (props: ISkillsProps) => {\r\n  const { t } = useTranslation(\"pages\", {\r\n    keyPrefix: \"candidates.modal.form.skills\",\r\n  });\r\n  const { skills, removeSkill, editSkill, addSkill } = props;\r\n  const [isSkillModalOpen, setIsSkillModalOpen] = useState<boolean>(false);\r\n  const [modalAction, setModalAction] = useState<\"add\" | \"edit\">(\"add\");\r\n  const [modalSkill, setModalSkill] = useState<ISkill>({\r\n    id: 0,\r\n    name: \"\",\r\n    level: \"\",\r\n  });\r\n  return (\r\n    <>\r\n      <SkillModal\r\n        isOpen={isSkillModalOpen}\r\n        setIsOpen={setIsSkillModalOpen}\r\n        addSkill={addSkill}\r\n        editSkill={editSkill}\r\n        action={modalAction}\r\n        modalSkill={modalSkill}\r\n        setModalSkill={setModalSkill}\r\n      />\r\n      <Card sx={{ border: \"none\", width: \"100%\", m: 1 }}>\r\n        <CardHeader title={t(\"title\")} />\r\n        <CardContent>\r\n          <Grid container>\r\n            {skills.map((skill, index) => (\r\n              <Grid key={index} item xs={12} sx={{ display: \"flex\" }}>\r\n                <Tooltip title={t(\"level\") + skill.level} placement=\"top\">\r\n                  <span>{skill.name}</span>\r\n                </Tooltip>\r\n                <IconButton\r\n                  sx={{ ml: \"auto\" }}\r\n                  onClick={() => {\r\n                    setModalAction(\"edit\");\r\n                    setModalSkill(skill);\r\n                    setIsSkillModalOpen(true);\r\n                  }}\r\n                >\r\n                  <Edit />\r\n                </IconButton>\r\n                <IconButton\r\n                  sx={{ ml: 1 }}\r\n                  onClick={() => {\r\n                    removeSkill(skill);\r\n                  }}\r\n                >\r\n                  <Clear />\r\n                </IconButton>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              setModalAction(\"add\");\r\n              setModalSkill({\r\n                id: 0,\r\n                name: \"\",\r\n                level: \"\",\r\n              });\r\n              setIsSkillModalOpen(true);\r\n            }}\r\n          >\r\n            {t(\"add-new-skill\")}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","const templateDatas = {\r\n  sms: [\r\n    {\r\n      id: 1,\r\n      name: \"SMS Template 1\",\r\n      template:\r\n        \"Hello %name%. This message is sent by template 1. You can add other properties like: %city%, %country%, %requestedJob.name%\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"SMS Template 2\",\r\n      template:\r\n        \"Hello %name%. This message is sent by template 1. You can add other properties like: %city%, %country%, %requestedJob.name%\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"SMS Template 3\",\r\n      template:\r\n        \"Hello %name%. This message is sent by template 1. You can add other properties like: %city%, %country%, %requestedJob.name%\",\r\n    },\r\n  ],\r\n  email: [\r\n    {\r\n      id: 1,\r\n      name: \"E-Mail Template 1\",\r\n      template:\r\n        \"Hello %name%. This message is sent by template 1. You can add other properties like: %city%, %country%, %requestedJob.name%\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"E-Mail Template 2\",\r\n      template:\r\n        \"Hello %name%. This message is sent by template 1. You can add other properties like: %city%, %country%, %requestedJob.name%\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"E-Mail Template 3\",\r\n      template:\r\n        \"Hello %name%. This message is sent by template 1. You can add other properties like: %city%, %country%, %requestedJob.name%\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default templateDatas;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  FormControl,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Modal,\r\n  Paper,\r\n  Select,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport templateDatas from \"./datas\";\r\nimport { ICandidate } from \"../../../../interfaces/Candidate\";\r\nimport { Close, Send } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport resolve from \"../../../../helpers/resolve\";\r\n\r\ninterface ISendMessageModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: (val: boolean) => void;\r\n  messageType: \"sms\" | \"email\";\r\n  candidate: ICandidate;\r\n}\r\n\r\ninterface ITemplate {\r\n  id: number;\r\n  name: string;\r\n  template: string;\r\n}\r\n\r\nconst SendMessageModal = (props: ISendMessageModalProps) => {\r\n  const { isOpen, setIsOpen, messageType, candidate } = props;\r\n  const [template, setTemplate] = useState<ITemplate>({\r\n    id: 0,\r\n    name: \"\",\r\n    template: \"\",\r\n  });\r\n  const { t } = useTranslation(\"pages\", {\r\n    keyPrefix: \"candidates.modal.send-message\",\r\n  });\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={() => {\r\n        setTemplate({\r\n          id: 0,\r\n          name: \"\",\r\n          template: \"\",\r\n        });\r\n        setIsOpen(false);\r\n      }}\r\n    >\r\n      <Paper\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"60%\",\r\n          height: \"55%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          padding: 2,\r\n        }}\r\n      >\r\n        <Stack mb={5}>\r\n          <IconButton\r\n            sx={{ ml: \"auto\" }}\r\n            onClick={() => {\r\n              setTemplate({\r\n                id: 0,\r\n                name: \"\",\r\n                template: \"\",\r\n              });\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        </Stack>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"select-temp-label\">{t(\"template\")}</InputLabel>\r\n          <Select\r\n            value={template.id}\r\n            labelId=\"select-temp-label\"\r\n            id=\"select-temp\"\r\n            label=\"Template\"\r\n            onChange={(e) => {\r\n              setTemplate(\r\n                e.target.value\r\n                  ? templateDatas[messageType].filter(\r\n                      (item: any) => item.id === e.target.value\r\n                    )[0]\r\n                  : {\r\n                      id: 0,\r\n                      name: \"\",\r\n                      template: \"\",\r\n                    }\r\n              );\r\n            }}\r\n          >\r\n            <MenuItem value={0}> {t(\"select-template\")} </MenuItem>\r\n            {templateDatas[messageType].map((temp, index) => (\r\n              <MenuItem key={index} value={temp.id}>\r\n                {temp.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        {Boolean(template.id) && (\r\n          <>\r\n            <Card sx={{ mt: 3 }}>\r\n              <CardHeader title={template.name} />\r\n              <CardContent sx={{ lineHeight: 2 }}>\r\n                {template.template\r\n                  .split(/%(\\w+|\\w+.\\w+)%/g)\r\n                  .map((item, index) => {\r\n                    return index % 2 === 0 ? (\r\n                      item\r\n                    ) : (\r\n                      <Typography\r\n                        variant=\"subtitle2\"\r\n                        component=\"span\"\r\n                        color=\"white\"\r\n                        sx={{\r\n                          backgroundColor: \"error.main\",\r\n                          borderRadius: \"3px\",\r\n                          padding: 0.3,\r\n                          mx: 1,\r\n                          display: \"inline-block\",\r\n                        }}\r\n                      >\r\n                        {resolve(item, candidate)}\r\n                      </Typography>\r\n                    );\r\n                  })}\r\n              </CardContent>\r\n            </Card>\r\n            <Stack mt={3}>\r\n              <Button\r\n                endIcon={<Send />}\r\n                sx={{ ml: \"auto\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setTemplate({\r\n                    id: 0,\r\n                    name: \"\",\r\n                    template: \"\",\r\n                  });\r\n                  setIsOpen(false);\r\n                }}\r\n              >\r\n                {t(\"send\")}\r\n              </Button>\r\n            </Stack>\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SendMessageModal;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, Stack } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { ICandidate } from \"../../../interfaces/Candidate\";\r\nimport { emptyCandidate } from \"../emptyCandidate\";\r\nimport FormInput from \"../../../components/FormInput\";\r\nimport { Email, FileUpload, Message, SaveRounded } from \"@mui/icons-material\";\r\nimport FormMultiTextInput from \"../../../components/FormMultiTextInput\";\r\nimport MapsInput from \"../../../components/MapsInput\";\r\nimport ActionModal from \"../../../components/ActionModal\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FormDropdown from \"../../../components/FormDropdown\";\r\nimport { IJob } from \"../../../interfaces/Job\";\r\nimport jobs from \"../../../mockData/jobs\";\r\nimport Skills from \"./Skills\";\r\nimport { ISkill } from \"../../../interfaces/Skill\";\r\nimport { ICompany } from \"../../../interfaces/Company\";\r\nimport companies from \"../../../mockData/companies\";\r\nimport SendMessageModal from \"./SendMessageModal\";\r\n\r\ninterface ICandidateModalProps {\r\n  candidate?: ICandidate;\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n}\r\n\r\nconst multiTextInputSections = [\r\n  \"phoneNumbers\",\r\n  \"emailAdresses\",\r\n  \"previousJobs\",\r\n  \"departments\",\r\n  \"keywords\",\r\n  \"diplomas\",\r\n];\r\n\r\nconst CandidateModal = (props: ICandidateModalProps) => {\r\n  const { candidate, isOpen, setIsOpen } = props;\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"candidates.modal\" });\r\n  let form = useFormik({\r\n    initialValues: candidate ? { ...candidate } : { ...emptyCandidate },\r\n    onSubmit: () => {},\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  const [isSendMessageModalOpen, setIsSendMessageModalOpen] =\r\n    useState<boolean>(false);\r\n  const [sendMessageModalType, setSendMessageModalType] = useState<\r\n    \"sms\" | \"email\"\r\n  >(\"sms\");\r\n\r\n  const addToFormArray = (data: string, key: string) => {\r\n    const arr: string[] = form.values[\r\n      key as keyof typeof form.values\r\n    ] as string[];\r\n    arr.push(data);\r\n    form.setFieldValue(key, arr);\r\n  };\r\n  const deleteFromArray = (index: number, key: string) => {\r\n    const arr: string[] = form.values[\r\n      key as keyof typeof form.values\r\n    ] as string[];\r\n    arr.splice(index, 1);\r\n    form.setFieldValue(key, arr);\r\n  };\r\n\r\n  return (\r\n    <ActionModal\r\n      isOpen={isOpen}\r\n      setIsOpen={setIsOpen}\r\n      title={form.values.id ? t(\"edit\") : t(\"add\")}\r\n      saveFunction={() => {}}\r\n    >\r\n      <SendMessageModal\r\n        isOpen={isSendMessageModalOpen}\r\n        setIsOpen={setIsSendMessageModalOpen}\r\n        candidate={form.values}\r\n        messageType={sendMessageModalType}\r\n      />\r\n      <Grid container spacing={2} padding={2}>\r\n        <Grid item xs={12} md={4}>\r\n          <FormInput\r\n            label={t(\"form.id\")}\r\n            type=\"number\"\r\n            value={form.values.id}\r\n            name=\"id\"\r\n            onChange={form.handleChange}\r\n            disabled\r\n          />\r\n          <FormInput\r\n            label={t(\"form.name\")}\r\n            type=\"text\"\r\n            value={form.values.name}\r\n            name=\"name\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.surname\")}\r\n            type=\"text\"\r\n            value={form.values.surname}\r\n            name=\"surname\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.address\")}\r\n            type=\"text\"\r\n            value={form.values.address}\r\n            name=\"address\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.extraAddress\")}\r\n            type=\"text\"\r\n            value={form.values.extraAddress}\r\n            name=\"extraAddress\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.zipCode\")}\r\n            type=\"text\"\r\n            value={form.values.zipCode}\r\n            name=\"zipCode\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.city\")}\r\n            type=\"text\"\r\n            value={form.values.city}\r\n            name=\"city\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.country\")}\r\n            type=\"text\"\r\n            value={form.values.country}\r\n            name=\"country\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.comment\")}\r\n            type=\"text\"\r\n            value={form.values.comment}\r\n            name=\"comment\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormInput\r\n            label={t(\"form.salaryExpectation\")}\r\n            type=\"number\"\r\n            value={form.values.salaryExpectation}\r\n            name=\"salaryExpectation\"\r\n            onChange={form.handleChange}\r\n          />\r\n          <FormDropdown<IJob>\r\n            label={t(\"form.requested-job\")}\r\n            getValue={(item) => item.id}\r\n            handleChange={(e) => {\r\n              form.setFieldValue(\r\n                \"requestedJob\",\r\n                jobs.filter((job) => job.id === e.target.value)[0]\r\n              );\r\n            }}\r\n            datas={jobs}\r\n            defaultValue={t(\"form.requested-job\")}\r\n            dataToValue={(job) => `${job.id} - ${job.name}`}\r\n            selectedValue={\r\n              form.values.requestedJob ? form.values.requestedJob.id : 0\r\n            }\r\n          />\r\n          <FormDropdown<ICompany>\r\n            label={t(\"form.requested-company\")}\r\n            getValue={(item) => item.id}\r\n            handleChange={(e) => {\r\n              form.setFieldValue(\r\n                \"requestedCompany\",\r\n                companies.filter((company) => company.id === e.target.value)[0]\r\n              );\r\n            }}\r\n            datas={companies}\r\n            defaultValue={t(\"form.requested-company\")}\r\n            dataToValue={(company) => `${company.id} - ${company.name}`}\r\n            selectedValue={\r\n              form.values.requestedCompany ? form.values.requestedCompany.id : 0\r\n            }\r\n          />\r\n          <Skills\r\n            skills={form.values.skills || []}\r\n            addSkill={(skill: ISkill) => {\r\n              const prevSkills = form.values.skills\r\n                ? [...form.values.skills]\r\n                : [];\r\n              prevSkills.push(skill);\r\n              form.setFieldValue(\"skills\", prevSkills);\r\n            }}\r\n            editSkill={(skill: ISkill) => {\r\n              let prevSkills = form.values.skills\r\n                ? [...form.values.skills]\r\n                : [];\r\n              prevSkills = prevSkills.filter((item) => item.id !== skill.id);\r\n              prevSkills.push(skill);\r\n              form.setFieldValue(\"skills\", prevSkills);\r\n            }}\r\n            removeSkill={(skill: ISkill) => {\r\n              let prevSkills = form.values.skills\r\n                ? [...form.values.skills]\r\n                : [];\r\n              prevSkills = prevSkills.filter((item) => item.id !== skill.id);\r\n              form.setFieldValue(\"skills\", prevSkills);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          {multiTextInputSections.map((item, index) => (\r\n            <FormMultiTextInput\r\n              key={index}\r\n              label={t(\"form.\" + item)}\r\n              id={item}\r\n              data={form.values[item as keyof typeof form.values] as string[]}\r\n              addNew={(data) => {\r\n                addToFormArray(data, item);\r\n              }}\r\n              deleteItem={(index) => {\r\n                deleteFromArray(index, item);\r\n              }}\r\n            />\r\n          ))}\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <MapsInput\r\n            mainCoords={form.values.requestedCompany?.mapsCoord}\r\n            secondCoord={form.values.mapsCoord}\r\n            setCoord={(coord: any) => {\r\n              form.setFieldValue(\"mapsCoord\", coord);\r\n            }}\r\n          />\r\n          {form.values.id ? (\r\n            <Stack sx={{ m: 1 }} direction=\"row\" spacing={1}>\r\n              <Button variant=\"contained\" color=\"success\">\r\n                <SaveRounded /> {t(\"form.cv.download\")}\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                <FileUpload /> {t(\"form.cv.upload-new\")}\r\n              </Button>\r\n            </Stack>\r\n          ) : (\r\n            <Button sx={{ m: 1 }} variant=\"contained\" color=\"secondary\">\r\n              <FileUpload /> {t(\"form.cv.upload\")}\r\n            </Button>\r\n          )}\r\n          {Boolean(form.values.id) && (\r\n            <Stack sx={{ m: 1 }} direction=\"row\" spacing={1}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setSendMessageModalType(\"email\");\r\n                  setIsSendMessageModalOpen(true);\r\n                }}\r\n              >\r\n                <Email sx={{ mr: 1 }} /> {t(\"send-mail\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setSendMessageModalType(\"sms\");\r\n                  setIsSendMessageModalOpen(true);\r\n                }}\r\n              >\r\n                <Message sx={{ mr: 1 }} /> {t(\"send-sms\")}\r\n              </Button>\r\n            </Stack>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </ActionModal>\r\n  );\r\n};\r\n\r\nexport default CandidateModal;\r\n","const mainCoord = { lat: 39.92069001103445, lng: 32.854006924076806 };\r\nexport default mainCoord;\r\n","import React, { useState } from \"react\";\r\n\r\nimport candidates from \"../../mockData/candidates\";\r\nimport CandidateModal from \"./CandidateModal\";\r\nimport { ICandidate } from \"../../interfaces/Candidate\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CRUDTable from \"../../components/CRUDTable\";\r\nimport { useFormik } from \"formik\";\r\nimport IFilter from \"../../interfaces/Filter\";\r\nimport calculateDistance from \"../../helpers/calculateDistance\";\r\nimport mainCoord from \"../../mockData/coords\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst CandidatesTable = () => {\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"candidates.table\" });\r\n  const [isCandidateModalOpen, setIsCandidateModalOpen] =\r\n    useState<boolean>(false);\r\n  const [candidateModalCandidate, setCandidateModalCandidate] = useState<\r\n    ICandidate | undefined\r\n  >(undefined);\r\n  const [candidatesData, setCandidatesData] = useState(candidates);\r\n\r\n  const searchForm = useFormik({\r\n    initialValues: {\r\n      search: {} as any,\r\n    },\r\n    onSubmit: (e: any) => {\r\n      console.log(e);\r\n      const result = Object.keys(e.search).reduce(\r\n        (candidates: any, key: string) => {\r\n          const filterFunc = filters.filter((filter) => filter.name === key)[0]\r\n            ? filters.filter((filter) => filter.name === key)[0].filterFunc\r\n            : undefined;\r\n          if (filterFunc) {\r\n            return candidates.filter(filterFunc);\r\n          } else {\r\n            const re = new RegExp(\".*\" + e.search[key].toLowerCase() + \".*\");\r\n            return candidates.filter((e: any) =>\r\n              e[key] ? re.test(e[key].toLowerCase()) : false\r\n            );\r\n          }\r\n        },\r\n        candidates\r\n      );\r\n      setCandidatesData(result);\r\n    },\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  const filters: IFilter[] = [\r\n    {\r\n      name: \"distance\",\r\n      label: t(\"search-filters.distance\"),\r\n      filterFunc: (candidate: ICandidate) => {\r\n        const d = calculateDistance(mainCoord, candidate.mapsCoord!);\r\n        return d < searchForm.values.search.distance;\r\n      },\r\n    },\r\n    { name: \"diploma\", label: t(\"search-filters.diploma\") },\r\n    { name: \"keywords\", label: t(\"search-filters.keywords\") },\r\n    { name: \"requestedJob\", label: t(\"search-filters.job\") },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <React.Suspense fallback={<Loading />}>\r\n        <CandidateModal\r\n          candidate={candidateModalCandidate}\r\n          isOpen={isCandidateModalOpen}\r\n          setIsOpen={setIsCandidateModalOpen}\r\n        />\r\n      </React.Suspense>\r\n      <CRUDTable<ICandidate>\r\n        data={candidatesData}\r\n        cellNames={[t(\"id\"), t(\"name\"), t(\"surname\"), t(\"city\")]}\r\n        keysToShow={[\"id\", \"name\", \"surname\", \"city\"]}\r\n        setModalData={setCandidateModalCandidate}\r\n        setIsDataModalOpen={setIsCandidateModalOpen}\r\n        searchForm={searchForm}\r\n        filters={filters}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default CandidatesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { pageRedux } from \"../../redux\";\r\nimport CandidatesTable from \"./CandidatesTable\";\r\n\r\nconst Candidates = () => {\r\n  useEffect(() => {\r\n    pageRedux.dispatch({\r\n      type: \"CHANGE_TITLE\",\r\n      payload: {\r\n        title: \"candidates\",\r\n      },\r\n    });\r\n  });\r\n  return <CandidatesTable />;\r\n};\r\n\r\nexport default Candidates;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IActionModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n  title: string;\r\n  saveFunction: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ActionModal = (props: IActionModalProps) => {\r\n  const { isOpen, setIsOpen, title, saveFunction, children } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"actionModal\" });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Card\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"95%\",\r\n          height: \"85%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n        }}\r\n      >\r\n        <CardHeader\r\n          sx={{ p: 2, bgcolor: \"success.dark\", color: \"white\" }}\r\n          title={title}\r\n          action={\r\n            <IconButton\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              <CloseRounded htmlColor=\"white\" />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardContent sx={{ height: \"76%\", overflow: \"auto\" }}>\r\n          {children}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n            startIcon={<SaveRounded />}\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              saveFunction();\r\n            }}\r\n          >\r\n            {t(\"save\")}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ActionModal;\r\n","import React from \"react\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport { Input, InputAdornment } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SearchInput = (props: { onChange: (e: any) => void }) => {\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"searchInput\" });\r\n  const { onChange } = props;\r\n  return (\r\n    <Input\r\n      type=\"search\"\r\n      onChange={onChange}\r\n      startAdornment={\r\n        <InputAdornment position=\"start\">\r\n          <Search />\r\n        </InputAdornment>\r\n      }\r\n      placeholder={t(\"placeholder\")}\r\n      sx={{ width: \"40em\", mx: \"auto\" }}\r\n    ></Input>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Modal,\r\n  Paper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport IFilter from \"../../../interfaces/Filter\";\r\n\r\nconst AdvancedSearchModal = (props: {\r\n  isOpen: boolean;\r\n  setIsOpen: (t: boolean) => void;\r\n  filters: IFilter[];\r\n  searchForm: any;\r\n}) => {\r\n  const { isOpen, setIsOpen, filters, searchForm } = props;\r\n  const [search, setSearch] = useState(searchForm.values.search);\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.advanced-search-modal\",\r\n  });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Paper\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          minWidth: \"70%\",\r\n          minHeight: \"60%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n          padding: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Stack mx=\"auto\">\r\n          <Typography variant=\"h5\" component=\"h6\">\r\n            {t(\"title\")}\r\n          </Typography>\r\n        </Stack>\r\n        <Grid container display=\"flex\" width=\"100%\" textAlign=\"center\">\r\n          {filters.map((filter, index) => (\r\n            <Grid item xs={12} md={4} key={index}>\r\n              <TextField\r\n                label={filter.label}\r\n                type=\"text\"\r\n                name={filter.name}\r\n                value={search[filter.name]}\r\n                variant=\"standard\"\r\n                margin=\"dense\"\r\n                onChange={(e) => {\r\n                  const cSearch = { ...search };\r\n                  cSearch[filter.name] = e.target.value;\r\n                  setSearch(cSearch);\r\n                }}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Stack mt=\"auto\" ml=\"auto\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              searchForm.setFieldValue(\"search\", search);\r\n              searchForm.submitForm();\r\n            }}\r\n            startIcon={<Search />}\r\n          >\r\n            {t(\"search\")}\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AdvancedSearchModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport SearchInput from \"../../SearchInput\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search, Tune } from \"@mui/icons-material\";\r\nimport AdvancedSearchModal from \"../AdvancedSearchModal\";\r\n\r\ninterface ISearchBarProps {\r\n  searchForm: any;\r\n  filters?: { label: string; name: string }[];\r\n}\r\n\r\nconst SearchBar = (props: ISearchBarProps) => {\r\n  const { searchForm, filters } = props;\r\n  const [searchKey, setSearchKey] = useState<string>(\"\");\r\n  const [isAdvancedSearchModalOpen, setIsAdvancedSearchModalOpen] =\r\n    useState<boolean>(false);\r\n  const { t } = useTranslation(\"components\", {\r\n    keyPrefix: \"crudTable.search-bar\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {Boolean(filters) && (\r\n        <AdvancedSearchModal\r\n          isOpen={isAdvancedSearchModalOpen}\r\n          setIsOpen={setIsAdvancedSearchModalOpen}\r\n          searchForm={searchForm}\r\n          filters={filters ? filters : []}\r\n        />\r\n      )}\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ mr: \"auto\", width: \"50%\", ml: 2, alignItems: \"flex-end\" }}\r\n      >\r\n        <Grid item xs={5} sx={{ display: \"flex\" }}>\r\n          <SearchInput\r\n            onChange={(e: any) => {\r\n              setSearchKey(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button\r\n            sx={{ ml: \"auto\" }}\r\n            startIcon={<Search />}\r\n            onClick={() => {\r\n              searchForm.setFieldValue(\"search\", { name: searchKey });\r\n              searchForm.submitForm();\r\n            }}\r\n          >\r\n            {t(\"search\")}\r\n          </Button>\r\n        </Grid>\r\n        {Boolean(filters) && (\r\n          <Grid item xs={4}>\r\n            <Button\r\n              sx={{ ml: \"auto\" }}\r\n              startIcon={<Tune />}\r\n              onClick={() => {\r\n                setIsAdvancedSearchModalOpen(true);\r\n              }}\r\n            >\r\n              {t(\"advanced-search\")}\r\n            </Button>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Add, BorderColor, DeleteForeverRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport resolve from \"../../helpers/resolve\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\ninterface ICRUDTableProps<DataType> {\r\n  data: DataType[];\r\n  cellNames: string[];\r\n  keysToShow: string[];\r\n  setModalData: (data: DataType | undefined) => void;\r\n  setIsDataModalOpen: (value: boolean) => void;\r\n  customDataComponent?: any;\r\n  searchForm?: any;\r\n  filters?: any;\r\n}\r\n\r\nconst CRUDTable = <DataType extends { id: number }>(\r\n  props: ICRUDTableProps<DataType>\r\n) => {\r\n  const {\r\n    data,\r\n    cellNames,\r\n    setModalData,\r\n    keysToShow,\r\n    setIsDataModalOpen,\r\n    customDataComponent,\r\n    searchForm,\r\n    filters,\r\n  } = props;\r\n  let customComponent = customDataComponent ? customDataComponent : [];\r\n\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"crudTable\" });\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowPerPage, setRowPerPage] = useState<number>(10);\r\n  const [selectedDatasId, setSelectedDatasId] = useState<number[]>([]);\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: \"calc(100% - 40px)\",\r\n        marginLeft: \"auto\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      {Boolean(searchForm) && (\r\n        <SearchBar searchForm={searchForm} filters={filters} />\r\n      )}\r\n      <TableContainer sx={{ maxHeight: \"500px\" }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  value=\"all\"\r\n                  checked={data.length === selectedDatasId.length}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedDatasId(data.map((c: DataType) => c.id));\r\n                    } else setSelectedDatasId([]);\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              {cellNames.map((name, index) => (\r\n                <TableCell key={index}>{name}</TableCell>\r\n              ))}\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0 ? (\r\n              data\r\n                .slice(currentPage * rowPerPage, (currentPage + 1) * rowPerPage)\r\n                .map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell key={index}>\r\n                      <Checkbox\r\n                        value={item.id}\r\n                        checked={selectedDatasId.includes(item.id)}\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            const _selectedDatasId = [...selectedDatasId];\r\n                            _selectedDatasId.push(item.id);\r\n                            setSelectedDatasId(_selectedDatasId);\r\n                          } else {\r\n                            const _selectedDatasId = [...selectedDatasId];\r\n                            _selectedDatasId.splice(\r\n                              _selectedDatasId.indexOf(item.id),\r\n                              1\r\n                            );\r\n                            setSelectedDatasId(_selectedDatasId);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    {keysToShow.map((key, index) => (\r\n                      <TableCell key={index}>\r\n                        {Object.keys(customComponent).includes(key)\r\n                          ? customComponent[key](item[key as keyof typeof item])\r\n                          : key.includes(\".\")\r\n                          ? resolve(key, item)\r\n                          : item[key as keyof typeof item]}\r\n                      </TableCell>\r\n                    ))}\r\n\r\n                    <TableCell>\r\n                      <Button\r\n                        sx={{ border: \"none !important\" }}\r\n                        color=\"warning\"\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          setModalData(item);\r\n                          setIsDataModalOpen(true);\r\n                        }}\r\n                      >\r\n                        <BorderColor />\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={cellNames.length + 1} align=\"center\">\r\n                  {t(\"no-data\")}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowPerPage}\r\n        page={currentPage}\r\n        onPageChange={(e: unknown, newPage: number) => {\r\n          setCurrentPage(newPage);\r\n        }}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowPerPage(+e.target.value);\r\n          setCurrentPage(0);\r\n        }}\r\n      />\r\n      <Stack padding={1}>\r\n        <ButtonGroup\r\n          sx={{ marginLeft: \"auto\" }}\r\n          aria-label=\"medium button group contained\"\r\n          variant=\"contained\"\r\n        >\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<Add />}\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setModalData(undefined);\r\n              setIsDataModalOpen(true);\r\n            }}\r\n          >\r\n            {t(\"add\")}\r\n          </Button>\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<DeleteForeverRounded />}\r\n            color=\"error\"\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CRUDTable;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SxProps,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface IFormDropdownProps<DataType> {\r\n  label: string;\r\n  handleChange: (e: any) => void;\r\n  datas: DataType[];\r\n  defaultValue: string;\r\n  dataToValue: (data: DataType) => string;\r\n  selectedValue: number | string;\r\n  disabled?: boolean;\r\n  width?: string;\r\n  sx?: SxProps;\r\n  getValue: (data: DataType) => string | number;\r\n}\r\n\r\nconst FormDropdown = <DataType extends { id: number } | string>(\r\n  props: IFormDropdownProps<DataType>\r\n) => {\r\n  const {\r\n    label,\r\n    handleChange,\r\n    defaultValue,\r\n    datas,\r\n    dataToValue,\r\n    selectedValue,\r\n    disabled,\r\n    width,\r\n    getValue,\r\n    sx,\r\n  } = props;\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      disabled={disabled}\r\n      sx={{ width: \"100%\" || width, m: 1, ...sx }}\r\n    >\r\n      <InputLabel>{label}</InputLabel>\r\n\r\n      <Select value={selectedValue} label={label} onChange={handleChange}>\r\n        <MenuItem value={0}>\r\n          <em>{defaultValue}</em>\r\n        </MenuItem>\r\n        {datas.map((data: DataType, index) => (\r\n          <MenuItem key={index} value={getValue(data)}>\r\n            {dataToValue(data)}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormDropdown;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\", m: 1 }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useMemo, useRef } from \"react\";\r\nimport { Marker, useMapEvents } from \"react-leaflet\";\r\n\r\nconst LocationMarker = (props: any) => {\r\n  const { position, callBackFn } = props;\r\n  const map = useMapEvents({\r\n    click(e) {\r\n      callBackFn(e.latlng);\r\n    },\r\n  });\r\n  // ignore this line\r\n  if (false) console.log(map);\r\n  const markerRef = useRef(null);\r\n  const eventHandlers = useMemo(\r\n    () => ({\r\n      dragend() {\r\n        const marker = markerRef.current as any;\r\n        if (marker != null) {\r\n          callBackFn(marker.getLatLng());\r\n        }\r\n      },\r\n    }),\r\n    [callBackFn]\r\n  );\r\n  return (\r\n    <>\r\n      {position && (\r\n        <Marker\r\n          ref={markerRef}\r\n          eventHandlers={eventHandlers}\r\n          draggable\r\n          position={position}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LocationMarker;\r\n","import React, { useState } from \"react\";\r\nimport { LatLngExpression } from \"leaflet\";\r\nimport { MapContainer, Marker, TileLayer } from \"react-leaflet\";\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport { Card, CardContent, CardHeader } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport calculateDistance from \"../../helpers/calculateDistance\";\r\n\r\ninterface IMapsInput {\r\n  mainCoords: LatLngExpression | { lat: number; lng: number };\r\n  secondCoord?: LatLngExpression | { lat: number; lng: number };\r\n  setCoord: (coord: any) => void;\r\n  isMainMoving?: boolean;\r\n}\r\n\r\nconst MapsInput = (props: IMapsInput) => {\r\n  const { mainCoords, secondCoord, isMainMoving, setCoord } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"mapsInput\" });\r\n  const [selectionCoords, setSelectionCoords] = useState<any>(\r\n    secondCoord || mainCoords\r\n  );\r\n  const [distance, setDistance] = useState<number | string>(0);\r\n\r\n  return (\r\n    <Card sx={{ m: 1 }}>\r\n      {!isMainMoving && <CardHeader title={`${distance} ${t(\"title\")}`} />}\r\n      <CardContent>\r\n        <MapContainer\r\n          center={mainCoords}\r\n          zoom={12}\r\n          id=\"map\"\r\n          style={{ height: \"400px\", width: \"100%\", color: \"black\" }}\r\n          scrollWheelZoom={false}\r\n        >\r\n          <TileLayer\r\n            attribution=\"\"\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {Boolean(mainCoords && !isMainMoving) && (\r\n            <Marker position={mainCoords} />\r\n          )}\r\n          <LocationMarker\r\n            position={selectionCoords}\r\n            callBackFn={(coords: any) => {\r\n              if (coords) {\r\n                const dist = calculateDistance(mainCoords as any, coords);\r\n                console.log(coords, mainCoords, dist);\r\n\r\n                setDistance(dist.toFixed(3));\r\n                setSelectionCoords(coords);\r\n                setCoord(coords);\r\n              }\r\n            }}\r\n          />\r\n        </MapContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MapsInput;\r\n","export default function calculateDistance(\r\n  coord1: { lat: number; lng: number },\r\n  coord2: { lat: number; lng: number }\r\n) {\r\n  const R = 6371; // km\r\n  const dLat = toRad(coord2.lat - coord1.lat);\r\n  const dLon = toRad(coord2.lng - coord1.lng);\r\n  const lat1 = toRad(coord1.lat);\r\n  const lat2 = toRad(coord2.lat);\r\n\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  const d = R * c;\r\n  return d;\r\n}\r\n\r\n// Converts numeric degrees to radians\r\nfunction toRad(Value: number) {\r\n  return (Value * Math.PI) / 180;\r\n}\r\n","export default function resolve(path: string, obj: Object) {\r\n  return path.split(\".\").reduce((prev: any, curr: string) => {\r\n    return prev ? prev[curr as keyof typeof prev] : null;\r\n  }, obj);\r\n}\r\n","import { ICandidate } from \"../interfaces/Candidate\";\r\n\r\nconst candidates: ICandidate[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Example\",\r\n    surname: \"Candidate 1\",\r\n    city: \"Ankara\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 1,\r\n      name: \"Company Ankara\",\r\n      city: \"Ankara\",\r\n      mapsCoord: {\r\n        lat: 39.925533,\r\n        lng: 32.866287,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Paris\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 2,\r\n      name: \"Company Paris\",\r\n      city: \"Paris\",\r\n      mapsCoord: {\r\n        lat: 48.864716,\r\n        lng: 2.349014,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"London\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 3,\r\n      name: \"Company London\",\r\n      city: \"London\",\r\n      mapsCoord: {\r\n        lat: 51.509865,\r\n        lng: -0.118092,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"New York\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 4,\r\n      name: \"Company New York\",\r\n      city: \"New York\",\r\n      mapsCoord: {\r\n        lat: 40.73061,\r\n        lng: -73.935242,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Berlin\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 5,\r\n      name: \"Company Berlin\",\r\n      city: \"Berlin\",\r\n      mapsCoord: {\r\n        lat: 52.520008,\r\n        lng: 13.404954,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Ankara\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 1,\r\n      name: \"Company Ankara\",\r\n      city: \"Ankara\",\r\n      mapsCoord: {\r\n        lat: 39.925533,\r\n        lng: 32.866287,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Paris\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 2,\r\n      name: \"Company Paris\",\r\n      city: \"Paris\",\r\n      mapsCoord: {\r\n        lat: 48.864716,\r\n        lng: 2.349014,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"London\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 3,\r\n      name: \"Company London\",\r\n      city: \"London\",\r\n      mapsCoord: {\r\n        lat: 51.509865,\r\n        lng: -0.118092,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"New York\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 4,\r\n      name: \"Company New York\",\r\n      city: \"New York\",\r\n      mapsCoord: {\r\n        lat: 40.73061,\r\n        lng: -73.935242,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Example\",\r\n    surname: \"Candidate\",\r\n    city: \"Berlin\",\r\n    CVAddress: \"Example\",\r\n    phoneNumbers: [\"Example\", \"Example\"],\r\n    emailAdresses: [\"Example\", \"Example\"],\r\n    address: \"Example\",\r\n    extraAddress: \"Example\",\r\n    zipCode: \"Example\",\r\n    country: \"Example\",\r\n    mapsCoord: { lat: 39.62076, lng: 32.55389 },\r\n    creatorMember: { id: 1, name: \"Example\", surname: \"Member\" },\r\n    previousJobs: [\"Example\", \"Example\"],\r\n    requestedJob: { id: 1, name: \"Example Job\" },\r\n    requestedCompany: {\r\n      id: 5,\r\n      name: \"Company Berlin\",\r\n      city: \"Berlin\",\r\n      mapsCoord: {\r\n        lat: 52.520008,\r\n        lng: 13.404954,\r\n      },\r\n    },\r\n    skills: [\r\n      { id: 1, name: \"Example\", level: \"Prof.\" },\r\n      { id: 2, name: \"Example\", level: \"Prof.\" },\r\n    ],\r\n    comment: \"Example\",\r\n    salaryExpectation: 5000,\r\n    departments: [\"Example\", \"Example\"],\r\n    keywords: [\"Example\", \"Example\"],\r\n    diplomas: [\"Example\", \"Example\"],\r\n  },\r\n];\r\n\r\nexport default candidates;\r\n","import { ICompany } from \"../interfaces/Company\";\r\n\r\nconst companies: ICompany[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Company Ankara\",\r\n    city: \"Ankara\",\r\n    mapsCoord: {\r\n      lat: 39.925533,\r\n      lng: 32.866287,\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Company Paris\",\r\n    city: \"Paris\",\r\n    mapsCoord: {\r\n      lat: 48.864716,\r\n      lng: 2.349014,\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Company London\",\r\n    city: \"London\",\r\n    mapsCoord: {\r\n      lat: 51.509865,\r\n      lng: -0.118092,\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Company New York\",\r\n    city: \"New York\",\r\n    mapsCoord: {\r\n      lat: 40.73061,\r\n      lng: -73.935242,\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Company Berlin\",\r\n    city: \"Berlin\",\r\n    mapsCoord: {\r\n      lat: 52.520008,\r\n      lng: 13.404954,\r\n    },\r\n  },\r\n];\r\n\r\nexport default companies;\r\n","import { IJob } from \"../interfaces/Job\";\r\n\r\nconst jobs: IJob[] = [\r\n  { id: 1, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 2, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 3, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 4, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 5, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 6, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 7, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 8, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 9, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 10, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 11, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 12, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 13, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 14, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 15, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 16, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 17, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 18, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n  { id: 19, name: \"Example\", experience: 5, salaryExpectation: 5000 },\r\n];\r\n\r\nexport default jobs;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["emptyCandidate","id","name","surname","CVAddress","phoneNumbers","emailAdresses","address","extraAddress","zipCode","city","country","mapsCoord","undefined","creatorMember","previousJobs","requestedJob","requestedCompany","lat","lng","skills","comment","salaryExpectation","departments","keywords","situation","diplomas","createSvgIcon","_jsx","d","props","label","data","addNew","deleteItem","useState","Array","length","fill","hovered","setHovered","addNewValue","setAddNewValue","Card","sx","border","width","m","CardHeader","title","CardContent","Grid","container","spacing","mx","map","item","index","xs","Button","variant","color","onMouseOut","cHovered","onMouseOver","onClick","Remove","CardActions","TextField","value","onChange","e","target","onKeyUpCapture","which","marginLeft","InputProps","endAdornment","InputAdornment","position","IconButton","Add","isOpen","setIsOpen","addSkill","editSkill","action","modalSkill","setModalSkill","t","useTranslation","keyPrefix","Modal","open","onClose","Box","top","left","transform","textAlign","bgcolor","padding","FormInput","type","prevSkill","level","Save","mr","removeSkill","isSkillModalOpen","setIsSkillModalOpen","modalAction","setModalAction","skill","display","Tooltip","placement","ml","Edit","Clear","sms","template","email","messageType","candidate","setTemplate","Paper","height","Stack","mb","Close","FormControl","fullWidth","InputLabel","Select","labelId","templateDatas","filter","MenuItem","temp","Boolean","mt","lineHeight","split","Typography","component","backgroundColor","borderRadius","resolve","endIcon","Send","multiTextInputSections","form","useFormik","initialValues","onSubmit","enableReinitialize","isSendMessageModalOpen","setIsSendMessageModalOpen","sendMessageModalType","setSendMessageModalType","ActionModal","values","saveFunction","md","handleChange","disabled","FormDropdown","getValue","setFieldValue","jobs","job","datas","defaultValue","dataToValue","selectedValue","companies","company","prevSkills","push","key","arr","addToFormArray","splice","deleteFromArray","MapsInput","mainCoords","secondCoord","setCoord","coord","direction","SaveRounded","FileUpload","Email","Message","isCandidateModalOpen","setIsCandidateModalOpen","candidateModalCandidate","setCandidateModalCandidate","candidates","candidatesData","setCandidatesData","searchForm","search","console","log","result","Object","keys","reduce","filterFunc","filters","re","RegExp","toLowerCase","test","calculateDistance","mainCoord","distance","fallback","Loading","CRUDTable","cellNames","keysToShow","setModalData","setIsDataModalOpen","useEffect","pageRedux","payload","children","p","htmlColor","overflow","startIcon","Input","startAdornment","Search","placeholder","setSearch","minWidth","minHeight","flexDirection","margin","cSearch","submitForm","searchKey","setSearchKey","isAdvancedSearchModalOpen","setIsAdvancedSearchModalOpen","alignItems","Tune","customDataComponent","customComponent","currentPage","setCurrentPage","rowPerPage","setRowPerPage","selectedDatasId","setSelectedDatasId","boxShadow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","checked","c","TableBody","slice","includes","_selectedDatasId","indexOf","BorderColor","colSpan","align","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","ButtonGroup","DeleteForeverRounded","error","htmlFor","callBackFn","useMapEvents","click","latlng","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","getLatLng","Marker","ref","draggable","isMainMoving","selectionCoords","setSelectionCoords","setDistance","MapContainer","center","zoom","style","scrollWheelZoom","TileLayer","attribution","url","coords","dist","toFixed","coord1","coord2","dLat","toRad","dLon","lat1","lat2","a","Math","sin","cos","atan2","sqrt","Value","PI","path","obj","prev","curr","experience"],"sourceRoot":""}