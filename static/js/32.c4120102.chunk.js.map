{"version":3,"file":"static/js/32.c4120102.chunk.js","mappings":"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","sources":["Pages/Tasks/emptyTask.ts","components/FormCommentsArea/helpers.ts","components/FormCommentsArea/CommentCard.tsx","components/FormCommentsArea/index.tsx","Pages/Tasks/TaskModal.tsx","../node_modules/@mui/icons-material/esm/AccessTime.js","../node_modules/@mui/icons-material/esm/Check.js","../node_modules/@mui/icons-material/esm/AddCircle.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/material/internal/svg-icons/Cancel.js","../node_modules/@mui/material/Chip/chipClasses.js","../node_modules/@mui/material/Chip/Chip.js","Pages/Tasks/TasksTable.tsx","Pages/Tasks/helpers.tsx","Pages/Tasks/index.tsx","components/ActionModal/index.tsx","components/CRUDTable/index.tsx","components/FormInput/index.tsx","mockData/tasks.ts"],"sourcesContent":["export const emptyTask = {\r\n  id: 0,\r\n  name: \"\",\r\n  description: \"\",\r\n  assignedMember: {},\r\n  assignedCandidate: {},\r\n  situation: \"on-progress\",\r\n  comments: [],\r\n};\r\n","export function stringToColor(string: string) {\r\n  let hash = 0;\r\n  let i;\r\n\r\n  /* eslint-disable no-bitwise */\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  let color = \"#\";\r\n\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.substr(-2);\r\n  }\r\n  /* eslint-enable no-bitwise */\r\n\r\n  return color;\r\n}\r\n\r\nexport function stringAvatar(name: string) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n      marginLeft: \"auto\",\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    children: name.includes(\" \")\r\n      ? `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`\r\n      : `${name.split(\" \")[0][0]}`,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Avatar, Card, CardContent, CardHeader } from \"@mui/material\";\r\nimport { stringAvatar } from \"./helpers\";\r\nimport { IComment } from \"../../interfaces/Comment\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface ICommentCardProps {\r\n  comment: IComment;\r\n}\r\n\r\nconst CommentCard = (props: ICommentCardProps) => {\r\n  const { comment } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"formCommentsArea\" });\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            {...stringAvatar(\r\n              comment.owner\r\n                ? comment.owner.name + comment.owner.surname\r\n                : \"Admin\"\r\n            )}\r\n          />\r\n        }\r\n        title={\r\n          comment.owner ? comment.owner.name + comment.owner.surname : \"Admin\"\r\n        }\r\n        subheader={\r\n          comment.createdDate\r\n            ? comment.createdDate.toLocaleString()\r\n            : t(\"unknown-date\")\r\n        }\r\n      />\r\n      <CardContent>{comment.content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IComment } from \"../../interfaces/Comment\";\r\n\r\nimport CommentCard from \"./CommentCard\";\r\n\r\ninterface IFormCommentsAreaProps {\r\n  title: string;\r\n  onChange: (e: any) => void;\r\n  values: IComment[] | never[] | undefined;\r\n}\r\n\r\nconst FormCommentsArea = (props: IFormCommentsAreaProps) => {\r\n  const { title, onChange, values } = props;\r\n  const [commentArea, setCommentArea] = useState<string>();\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"formCommentsArea\" });\r\n  return (\r\n    <Card sx={{ width: \"100%\" }}>\r\n      <CardHeader title={title} />\r\n      <CardContent>\r\n        {values && values?.length > 0 ? (\r\n          values.map((comment) => (\r\n            <Paper sx={{ m: 2, p: 2 }} elevation={10}>\r\n              <CommentCard comment={comment} />\r\n            </Paper>\r\n          ))\r\n        ) : (\r\n          <Paper sx={{ m: 2, p: 2 }} elevation={10}>\r\n            {t(\"no-comment\")}\r\n          </Paper>\r\n        )}\r\n      </CardContent>\r\n      <CardActions>\r\n        <TextField\r\n          multiline\r\n          fullWidth\r\n          maxRows={4}\r\n          value={commentArea}\r\n          onChange={(e) => setCommentArea(e.target.value)}\r\n          variant=\"standard\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={() => {\r\n                    const comment = {\r\n                      id: 0,\r\n                      content: commentArea,\r\n                      createdDate: new Date(),\r\n                    };\r\n                    onChange(comment);\r\n                  }}\r\n                >\r\n                  <Add />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FormCommentsArea;\r\n","import React from \"react\";\r\nimport { Grid, List, ListItem } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { emptyTask } from \"./emptyTask\";\r\nimport FormInput from \"../../components/FormInput\";\r\nimport { ITask } from \"../../interfaces/Task\";\r\nimport ActionModal from \"../../components/ActionModal\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FormCommentsArea from \"../../components/FormCommentsArea\";\r\nimport { IComment } from \"../../interfaces/Comment\";\r\n\r\ninterface ITaskModalProps {\r\n  task?: ITask;\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n}\r\n\r\nconst TaskModal = (props: ITaskModalProps) => {\r\n  const { task, isOpen, setIsOpen } = props;\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"tasks.modal\" });\r\n\r\n  let form = useFormik({\r\n    initialValues: task ? { ...task } : { ...emptyTask },\r\n    onSubmit: () => {},\r\n    enableReinitialize: true,\r\n  });\r\n  return (\r\n    <ActionModal\r\n      title={form.values.id ? t(\"edit\") : t(\"add\")}\r\n      isOpen={isOpen}\r\n      setIsOpen={setIsOpen}\r\n      saveFunction={() => {}}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12} md={6}>\r\n          <List>\r\n            <ListItem>\r\n              <FormInput\r\n                label={t(\"form.id\")}\r\n                type=\"number\"\r\n                value={form.values.id}\r\n                name=\"id\"\r\n                onChange={form.handleChange}\r\n                disabled\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormInput\r\n                label={t(\"form.name\")}\r\n                type=\"text\"\r\n                value={form.values.name}\r\n                name=\"name\"\r\n                onChange={form.handleChange}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <FormInput\r\n                label={t(\"form.description\")}\r\n                type=\"text\"\r\n                value={form.values.description}\r\n                name=\"description\"\r\n                onChange={form.handleChange}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <FormCommentsArea\r\n            title={t(\"form.comments\")}\r\n            values={form.values.comments}\r\n            onChange={(data) => {\r\n              const comments = [...(form.values.comments as Array<IComment>)];\r\n              comments.push(data);\r\n              console.log(comments);\r\n              form.setFieldValue(\"comments\", comments);\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </ActionModal>\r\n  );\r\n};\r\n\r\nexport default TaskModal;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(color)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIconOutlinedColor${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconOutlinedColor${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], variant === 'outlined' && styles[`outlined${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    }),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: theme.palette[ownerState.color].main,\n    color: theme.palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: theme.shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: theme.palette[ownerState.color].main,\n  border: `1px solid ${alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: theme.palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import React, { useState } from \"react\";\r\n\r\nimport tasks from \"../../mockData/tasks\";\r\nimport TaskModal from \"./TaskModal\";\r\nimport { ITask } from \"../../interfaces/Task\";\r\nimport { getChipOfSituation } from \"./helpers\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CRUDTable from \"../../components/CRUDTable\";\r\n\r\nconst TasksTable = () => {\r\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState<boolean>(false);\r\n  const [taskModalTask, setTaskModalTask] = useState<ITask | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const { t } = useTranslation(\"pages\", { keyPrefix: \"tasks.table\" });\r\n\r\n  return (\r\n    <>\r\n      <TaskModal\r\n        task={taskModalTask}\r\n        isOpen={isTaskModalOpen}\r\n        setIsOpen={setIsTaskModalOpen}\r\n      />\r\n      <CRUDTable<ITask>\r\n        data={tasks}\r\n        cellNames={[t(\"id\"), t(\"name\"), t(\"description\"), t(\"situation\")]}\r\n        keysToShow={[\"id\", \"name\", \"description\", \"situation\"]}\r\n        setModalData={setTaskModalTask}\r\n        setIsDataModalOpen={setIsTaskModalOpen}\r\n        customDataComponent={{\r\n          situation: (data: string) => getChipOfSituation(data),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default TasksTable;\r\n","import { AccessTime, AddCircle, Check, Close } from \"@mui/icons-material\";\r\nimport { Chip } from \"@mui/material\";\r\nimport i18n from \"../../i18n\";\r\n\r\nexport function getChipOfSituation(situation: string) {\r\n  const translatePrefix = \"pages:tasks.helpers.chip-text.\";\r\n  switch (situation) {\r\n    case \"on-progress\":\r\n      return (\r\n        <Chip\r\n          icon={<AccessTime />}\r\n          label={i18n.t(translatePrefix + \"on-progress\")}\r\n          color=\"warning\"\r\n        />\r\n      );\r\n    case \"completed\":\r\n      return (\r\n        <Chip\r\n          icon={<Check />}\r\n          label={i18n.t(translatePrefix + \"completed\")}\r\n          color=\"success\"\r\n        />\r\n      );\r\n    case \"open\":\r\n      return (\r\n        <Chip\r\n          icon={<AddCircle />}\r\n          label={i18n.t(translatePrefix + \"open\")}\r\n          color=\"info\"\r\n        />\r\n      );\r\n    case \"closed\":\r\n      return (\r\n        <Chip\r\n          icon={<Close />}\r\n          label={i18n.t(translatePrefix + \"closed\")}\r\n          color=\"error\"\r\n        />\r\n      );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { pageRedux } from \"../../redux\";\r\nimport TasksTable from \"./TasksTable\";\r\n\r\nconst Tasks = () => {\r\n  useEffect(() => {\r\n    pageRedux.dispatch({\r\n      type: \"CHANGE_TITLE\",\r\n      payload: {\r\n        title: \"tasks\",\r\n      },\r\n    });\r\n  });\r\n  return <TasksTable />;\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { CloseRounded, SaveRounded } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IActionModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen(isOpen: boolean): any;\r\n  title: string;\r\n  saveFunction: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ActionModal = (props: IActionModalProps) => {\r\n  const { isOpen, setIsOpen, title, saveFunction, children } = props;\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"actionModal\" });\r\n  return (\r\n    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Card\r\n        sx={{\r\n          position: \"absolute\" as \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"95%\",\r\n          height: \"85%\",\r\n          bgcolor: \"background.paper\",\r\n          border: \"none\",\r\n        }}\r\n      >\r\n        <CardHeader\r\n          sx={{ p: 2, bgcolor: \"success.dark\", color: \"white\" }}\r\n          title={title}\r\n          action={\r\n            <IconButton\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              <CloseRounded htmlColor=\"white\" />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardContent sx={{ height: \"76%\", overflow: \"auto\" }}>\r\n          {children}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            sx={{ border: \"none !important\", marginLeft: \"auto\" }}\r\n            startIcon={<SaveRounded />}\r\n            color=\"success\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n              saveFunction();\r\n            }}\r\n          >\r\n            {t(\"save\")}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ActionModal;\r\n","import { Add, BorderColor, DeleteForeverRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface ICRUDTableProps<DataType> {\r\n  data: DataType[];\r\n  cellNames: string[];\r\n  keysToShow: string[];\r\n  setModalData: (data: DataType | undefined) => void;\r\n  setIsDataModalOpen: (value: boolean) => void;\r\n  customDataComponent?: any;\r\n}\r\n\r\nconst CRUDTable = <DataType extends { id: number }>(\r\n  props: ICRUDTableProps<DataType>\r\n) => {\r\n  const {\r\n    data,\r\n    cellNames,\r\n    setModalData,\r\n    keysToShow,\r\n    setIsDataModalOpen,\r\n    customDataComponent,\r\n  } = props;\r\n  let customComponent = customDataComponent ? customDataComponent : [];\r\n\r\n  const { t } = useTranslation(\"components\", { keyPrefix: \"crudTable\" });\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowPerPage, setRowPerPage] = useState<number>(10);\r\n  const [selectedDatasId, setSelectedDatasId] = useState<number[]>([]);\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: \"calc(100% - 40px)\",\r\n        marginLeft: \"auto\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <TableContainer sx={{ maxHeight: \"500px\" }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  value=\"all\"\r\n                  checked={data.length === selectedDatasId.length}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedDatasId(data.map((c: DataType) => c.id));\r\n                    } else setSelectedDatasId([]);\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              {cellNames.map((name) => (\r\n                <TableCell>{name}</TableCell>\r\n              ))}\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data\r\n              .slice(currentPage * rowPerPage, (currentPage + 1) * rowPerPage)\r\n              .map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <Checkbox\r\n                      value={item.id}\r\n                      checked={selectedDatasId.includes(item.id)}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          const _selectedDatasId = [...selectedDatasId];\r\n                          _selectedDatasId.push(item.id);\r\n                          setSelectedDatasId(_selectedDatasId);\r\n                        } else {\r\n                          const _selectedDatasId = [...selectedDatasId];\r\n                          _selectedDatasId.splice(\r\n                            _selectedDatasId.indexOf(item.id),\r\n                            1\r\n                          );\r\n                          setSelectedDatasId(_selectedDatasId);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  {keysToShow.map((key) => (\r\n                    <>\r\n                      <TableCell>\r\n                        {Object.keys(customComponent).includes(key)\r\n                          ? customComponent[key](item[key as keyof typeof item])\r\n                          : item[key as keyof typeof item]}\r\n                      </TableCell>\r\n                    </>\r\n                  ))}\r\n\r\n                  <TableCell>\r\n                    <Button\r\n                      sx={{ border: \"none !important\" }}\r\n                      color=\"warning\"\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        setModalData(item);\r\n                        setIsDataModalOpen(true);\r\n                      }}\r\n                    >\r\n                      <BorderColor />\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowPerPage}\r\n        page={currentPage}\r\n        onPageChange={(e: unknown, newPage: number) => {\r\n          setCurrentPage(newPage);\r\n        }}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowPerPage(+e.target.value);\r\n          setCurrentPage(0);\r\n        }}\r\n      />\r\n      <Stack padding={\"1rem\"}>\r\n        <ButtonGroup\r\n          sx={{ marginLeft: \"auto\" }}\r\n          aria-label=\"medium button group contained\"\r\n          variant=\"contained\"\r\n        >\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<Add />}\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setModalData(undefined);\r\n              setIsDataModalOpen(true);\r\n            }}\r\n          >\r\n            {t(\"add\")}\r\n          </Button>\r\n          <Button\r\n            sx={{ border: \"none !important\" }}\r\n            startIcon={<DeleteForeverRounded />}\r\n            color=\"error\"\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CRUDTable;\r\n","import React from \"react\";\r\nimport { FormControl, Input, InputLabel } from \"@mui/material\";\r\n\r\ninterface IFormInputProps {\r\n  label: string;\r\n  type: \"text\" | \"email\" | \"number\";\r\n  value: number | string | undefined;\r\n  name: string;\r\n  disabled?: boolean;\r\n  onChange(e: any): void;\r\n}\r\n\r\nconst FormInput = (props: IFormInputProps) => {\r\n  const { label, type, value, name, onChange, disabled } = props;\r\n  return (\r\n    <FormControl error={!Boolean(value)} sx={{ width: \"100%\", m: 1 }}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { ITask } from \"../interfaces/Task\";\r\n\r\nconst tasks: ITask[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"completed\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"closed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"completed\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"open\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"completed\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"open\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"completed\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"closed\",\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"closed\",\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"closed\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"open\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"open\",\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"Example Task\",\r\n    description: \"Example Task Description\",\r\n    situation: \"on-progress\",\r\n  },\r\n];\r\n\r\nexport default tasks;\r\n"],"names":["emptyTask","id","name","description","assignedMember","assignedCandidate","situation","comments","stringToColor","string","i","hash","length","charCodeAt","color","toString","substr","props","comment","t","useTranslation","keyPrefix","Card","CardHeader","avatar","Avatar","owner","surname","sx","bgcolor","marginLeft","cursor","children","includes","split","title","subheader","createdDate","toLocaleString","CardContent","content","onChange","values","useState","commentArea","setCommentArea","width","map","Paper","m","p","elevation","CardActions","TextField","multiline","fullWidth","maxRows","value","e","target","variant","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","Date","Add","task","isOpen","setIsOpen","form","useFormik","initialValues","onSubmit","enableReinitialize","ActionModal","saveFunction","Grid","container","item","xs","md","List","ListItem","FormInput","label","type","handleChange","disabled","data","push","console","log","setFieldValue","createSvgIcon","_jsx","d","getChipUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ChipRoot","styled","overridesResolver","styles","ownerState","clickable","onDelete","size","chipClasses","capitalize","icon","deleteIcon","root","deletable","theme","deleteIconColor","alpha","palette","text","primary","_extends","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","backgroundColor","action","selected","borderRadius","whiteSpace","transition","transitions","create","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","disabledOpacity","pointerEvents","marginRight","mode","grey","contrastText","dark","secondary","WebkitTapHighlightColor","margin","main","selectedOpacity","focusOpacity","userSelect","hoverOpacity","boxShadow","shadows","hover","focus","ChipLabel","overflow","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","key","React","inProps","ref","useThemeProps","avatarProp","className","clickableProp","ComponentProp","component","deleteIconProp","iconProp","onKeyDown","onKeyUp","other","_objectWithoutPropertiesLoose","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","ButtonBase","classes","slots","composeClasses","useUtilityClasses","moreProps","focusVisibleClassName","focusVisible","disableRipple","customClasses","clsx","deleteIconSmall","CancelIcon","_jsxs","as","undefined","currentTarget","preventDefault","current","blur","isTaskModalOpen","setIsTaskModalOpen","taskModalTask","setTaskModalTask","CRUDTable","tasks","cellNames","keysToShow","setModalData","setIsDataModalOpen","customDataComponent","translatePrefix","AccessTime","i18n","Check","AddCircle","Close","getChipOfSituation","useEffect","pageRedux","payload","open","onClose","top","left","transform","htmlColor","startIcon","customComponent","currentPage","setCurrentPage","rowPerPage","setRowPerPage","selectedDatasId","setSelectedDatasId","maxHeight","stickyHeader","checked","c","slice","index","_selectedDatasId","splice","indexOf","Object","keys","rowsPerPageOptions","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","error","Boolean","htmlFor"],"sourceRoot":""}